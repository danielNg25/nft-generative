{"id":"226852398f090eaf9b32f61e53dc2503","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/Store.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\r\n\r\nimport \"./interfaces/INFT.sol\";\r\n\r\ncontract Store is ReentrancyGuard, Ownable, Initializable{\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public shirtNFTAddress;\r\n\r\n    uint256 public shippingFee;\r\n    uint256 public eachShirtFee; \r\n    uint256 public percentRoyaltyFee;\r\n    uint256 constant PERCENT_BASIS_POINT = 10000;\r\n\r\n    mapping (address => bool) isWhitelistNFT;\r\n    mapping (address => address) ownerOfNFT;\r\n\r\n    struct Shirt{\r\n        address[] originalNFTs;\r\n        uint256[] originalTokenIds;\r\n        address buyer;\r\n        uint256 shirtTokenId;\r\n    }\r\n\r\n    uint256 private _shirtTokenId;\r\n    mapping (uint256 => Shirt) private  indexToShirt;\r\n    mapping (address => uint256[]) private buyerToShirtIndexs;\r\n   \r\n    mapping (address => uint256) private balances;\r\n    \r\n    /* ========== EVENTS ========== */\r\n    event ShirtCreated(address[] nftAddresses, uint256[] tokenIds, address buyer, uint256 shirtTokenId);\r\n    event NFTWhitelistStatusChanged(address nftAddress, bool status);\r\n    event NFTOwnerChanged(address nftAddress, address nftOwnerAddress);\r\n\r\n    /* ========== GOVERNANCE ========== */\r\n\r\n    function initialize(address _nft, uint256 _shippingFee, uint256 _eachShirtFee, uint256 _percentRoyaltyFee) public initializer{\r\n        shirtNFTAddress = _nft;\r\n        shippingFee = _shippingFee;\r\n        eachShirtFee = _eachShirtFee;\r\n        percentRoyaltyFee = _percentRoyaltyFee;\r\n    }\r\n\r\n    function setNFTAddress(address _shirtNFTAddress) external onlyOwner{\r\n        shirtNFTAddress = _shirtNFTAddress;\r\n    }\r\n\r\n    function setShippingFee(uint256 _shippingFee) external onlyOwner{\r\n        shippingFee = _shippingFee;\r\n    }\r\n\r\n    function setEachShirtFee(uint256 _eachShirtFee) external onlyOwner{\r\n        eachShirtFee = _eachShirtFee;\r\n    }\r\n\r\n    function setPercentRoyaltyFee(uint256 _percentRoyaltyFee) external onlyOwner{\r\n        percentRoyaltyFee = _percentRoyaltyFee;\r\n    }\r\n\r\n    function whitelistNFT(address[] memory _nftAddresses, address[] memory _nftOwners) external onlyOwner{\r\n        uint256 _length = _nftAddresses.length;\r\n        require(_length == _nftOwners.length, \"Invalid length\");\r\n        for (uint256 i = 0; i < _length; i++){\r\n            _changeNFTWhitelistStatus(_nftAddresses[i], true);\r\n            _setNFTOwner(_nftAddresses[i], _nftOwners[i]);\r\n        }\r\n    }\r\n\r\n    function changeNFTWhitelistStatus(address[] memory _nftAddresses, bool[] memory _status) external onlyOwner{\r\n        uint256 _length = _nftAddresses.length;\r\n        require(_length == _status.length, \"Invalid length\");\r\n        for (uint256 i = 0; i < _length; i++){\r\n            require(ownerOfNFT[_nftAddresses[i]] != address(0), \"NFT Owner has not been set\");\r\n            _changeNFTWhitelistStatus(_nftAddresses[i], _status[i]);\r\n        }\r\n    }\r\n\r\n    function setNFTOwner(address[] memory _nftAddresses, address[] memory _nftOwners)external onlyOwner{\r\n        uint256 _length = _nftAddresses.length;\r\n        require(_length == _nftOwners.length, \"Invalid length\");\r\n        for (uint256 i = 0; i < _length; i++){\r\n            _setNFTOwner(_nftAddresses[i], _nftOwners[i]);\r\n        }\r\n    }\r\n\r\n    function _changeNFTWhitelistStatus(address _nftAddress, bool _status) internal{\r\n        isWhitelistNFT[_nftAddress] = _status;\r\n        emit NFTWhitelistStatusChanged(_nftAddress, _status);\r\n    }\r\n\r\n    function _setNFTOwner(address _nftAddress, address _nftOwner) internal{\r\n        ownerOfNFT[_nftAddress] = _nftOwner;\r\n        emit NFTOwnerChanged(_nftAddress, _nftOwner);\r\n    }\r\n    /* ========== VIEW FUNCTIONS ========== */\r\n\r\n    function estimateCost(address[][] memory _nftAddresses, uint256[][] memory _tokenIds) view public returns(uint256 cost){\r\n        uint256 _numberOfShirt = _nftAddresses.length;\r\n        require(_numberOfShirt == _tokenIds.length, \"Invalid length\");\r\n        uint256 _numberOfNFT = 0;\r\n        for (uint256 i = 0; i < _numberOfShirt; i++){\r\n            _numberOfNFT += _nftAddresses[i].length;\r\n        }\r\n        cost = _numberOfShirt * eachShirtFee + _numberOfShirt * eachShirtFee * percentRoyaltyFee / PERCENT_BASIS_POINT + shippingFee;\r\n    }\r\n\r\n    /* ========== MUTATIVE FUNCTIONS ========== */\r\n\r\n    function buyShirt(address[][] memory _nftAddresses, uint256[][] memory _tokenIds) payable external{\r\n        uint256 _numberOfShirt = _nftAddresses.length;\r\n        require (_numberOfShirt == _tokenIds.length, \"Invalid length\");\r\n        \r\n        uint256 cost = estimateCost(_nftAddresses, _tokenIds);\r\n        require(msg.value == cost, \"Wrong value\");\r\n\r\n        for (uint256 i = 0; i < _numberOfShirt ; i++){\r\n            uint256 _numberOfNFTs = _nftAddresses[i].length;\r\n            require(_numberOfNFTs == _tokenIds[i].length, \"Invalid length\");\r\n            for(uint256 j = 0; j < _numberOfNFTs; j++){\r\n                require(isWhitelistNFT[_nftAddresses[i][j]], \"NFT has not been whitelisted\");\r\n            }\r\n\r\n            _buyShirt(_nftAddresses[i], _tokenIds[i]);\r\n        }\r\n    }\r\n\r\n\r\n    function _buyShirt(address[] memory _nftAddresses, uint256[] memory _tokenIds) internal{\r\n        \r\n        Shirt memory newShirt = Shirt(_nftAddresses, _tokenIds, msg.sender, _shirtTokenId);\r\n        bool minted = INFT(shirtNFTAddress).safeMint(msg.sender, _shirtTokenId);\r\n        require(minted, \"Failed to mint NFT\");\r\n        indexToShirt[_shirtTokenId] = newShirt;\r\n        buyerToShirtIndexs[msg.sender].push(_shirtTokenId);\r\n        emit ShirtCreated(_nftAddresses, _tokenIds, msg.sender, _shirtTokenId);\r\n        _shirtTokenId++;\r\n    }\r\n}"},"contracts/interfaces/INFT.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\r\n\r\ninterface INFT is IERC721, IERC721Enumerable{\r\n\r\n    \r\n    function safeMint(\r\n        address receiver,\r\n        uint256 tokenId\r\n    ) external returns (bool);\r\n\r\n}"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() initializer {}\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\n        // contract may have been reentered.\n        require(_initializing ? _isConstructor() : !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} modifier, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    function _isConstructor() private view returns (bool) {\n        return !AddressUpgradeable.isContract(address(this));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[316],"Initializable":[73]},"id":74,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":74,"sourceUnit":317,"src":"138:44:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"184:1497:0","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\n initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() initializer {}\n ```\n ===="},"fullyImplemented":true,"id":73,"linearizedBaseContracts":[73],"name":"Initializable","nameLocation":"1700:13:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"1720:73:0","text":" @dev Indicates that the contract has been initialized."},"id":6,"mutability":"mutable","name":"_initialized","nameLocation":"1811:12:0","nodeType":"VariableDeclaration","scope":73,"src":"1798:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5,"name":"bool","nodeType":"ElementaryTypeName","src":"1798:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"1830:91:0","text":" @dev Indicates that the contract is in the process of being initialized."},"id":9,"mutability":"mutable","name":"_initializing","nameLocation":"1939:13:0","nodeType":"VariableDeclaration","scope":73,"src":"1926:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8,"name":"bool","nodeType":"ElementaryTypeName","src":"1926:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":46,"nodeType":"Block","src":"2080:637:0","statements":[{"expression":{"arguments":[{"condition":{"id":13,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2369:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":17,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2404:13:0","subExpression":{"id":16,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"2405:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2369:48:0","trueExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":14,"name":"_isConstructor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"2385:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2385:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2419:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":12,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2361:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2361:107:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"2361:107:0"},{"assignments":[23],"declarations":[{"constant":false,"id":23,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"2484:14:0","nodeType":"VariableDeclaration","scope":46,"src":"2479:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":22,"name":"bool","nodeType":"ElementaryTypeName","src":"2479:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":26,"initialValue":{"id":25,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2501:14:0","subExpression":{"id":24,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2502:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2479:36:0"},{"condition":{"id":27,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"2529:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":37,"nodeType":"IfStatement","src":"2525:98:0","trueBody":{"id":36,"nodeType":"Block","src":"2545:78:0","statements":[{"expression":{"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":28,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2559:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2575:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2559:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":31,"nodeType":"ExpressionStatement","src":"2559:20:0"},{"expression":{"id":34,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":32,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"2593:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2608:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2593:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":35,"nodeType":"ExpressionStatement","src":"2593:19:0"}]}},{"id":38,"nodeType":"PlaceholderStatement","src":"2633:1:0"},{"condition":{"id":39,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"2649:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":45,"nodeType":"IfStatement","src":"2645:66:0","trueBody":{"id":44,"nodeType":"Block","src":"2665:46:0","statements":[{"expression":{"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":40,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2679:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2695:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2679:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":43,"nodeType":"ExpressionStatement","src":"2679:21:0"}]}}]},"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"1959:93:0","text":" @dev Modifier to protect an initializer function from being invoked twice."},"id":47,"name":"initializer","nameLocation":"2066:11:0","nodeType":"ModifierDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"2077:2:0"},"src":"2057:660:0","virtual":false,"visibility":"internal"},{"body":{"id":56,"nodeType":"Block","src":"2934:97:0","statements":[{"expression":{"arguments":[{"id":51,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2952:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2967:45:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":50,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2944:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2944:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"2944:69:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3023:1:0"}]},"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2723:178:0","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} modifier, directly or indirectly."},"id":57,"name":"onlyInitializing","nameLocation":"2915:16:0","nodeType":"ModifierDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[],"src":"2931:2:0"},"src":"2906:125:0","virtual":false,"visibility":"internal"},{"body":{"id":71,"nodeType":"Block","src":"3091:69:0","statements":[{"expression":{"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3108:45:0","subExpression":{"arguments":[{"arguments":[{"id":66,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3147:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$73","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$73","typeString":"contract Initializable"}],"id":65,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3139:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3139:7:0","typeDescriptions":{}}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":62,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"3109:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$316_$","typeString":"type(library AddressUpgradeable)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":91,"src":"3109:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3109:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":61,"id":70,"nodeType":"Return","src":"3101:52:0"}]},"id":72,"implemented":true,"kind":"function","modifiers":[],"name":"_isConstructor","nameLocation":"3046:14:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3060:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":72,"src":"3085:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59,"name":"bool","nodeType":"ElementaryTypeName","src":"3085:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3084:6:0"},"scope":73,"src":"3037:123:0","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":74,"src":"1682:1480:0","usedErrors":[]}],"src":"113:3050:0"},"id":0},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[316]},"id":317,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":75,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"126:67:1","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":316,"linearizedBaseContracts":[316],"name":"AddressUpgradeable","nameLocation":"202:18:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":90,"nodeType":"Block","src":"1252:254:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":84,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1476:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1476:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":87,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":83,"id":89,"nodeType":"Return","src":"1469:30:1"}]},"documentation":{"id":77,"nodeType":"StructuredDocumentation","src":"227:954:1","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":91,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:1","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"account","nameLocation":"1214:7:1","nodeType":"VariableDeclaration","scope":91,"src":"1206:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:1"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"1246:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":81,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:1"},"scope":316,"src":"1186:320:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":124,"nodeType":"Block","src":"2494:241:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":102,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$316","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$316","typeString":"library AddressUpgradeable"}],"id":101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:1","typeDescriptions":{}}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2512:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2512:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":105,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2537:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":99,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2504:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"ExpressionStatement","src":"2504:73:1"},{"assignments":[111,null],"declarations":[{"constant":false,"id":111,"mutability":"mutable","name":"success","nameLocation":"2594:7:1","nodeType":"VariableDeclaration","scope":124,"src":"2589:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":110,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":118,"initialValue":{"arguments":[{"hexValue":"","id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":112,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2607:9:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2607:14:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":114,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2629:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:1"},{"expression":{"arguments":[{"id":120,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2658:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"ExpressionStatement","src":"2650:78:1"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"1512:906:1","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:1","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:1","nodeType":"VariableDeclaration","scope":125,"src":"2442:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"amount","nameLocation":"2477:6:1","nodeType":"VariableDeclaration","scope":125,"src":"2469:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:1"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[],"src":"2494:0:1"},"scope":316,"src":"2423:312:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":141,"nodeType":"Block","src":"3566:84:1","statements":[{"expression":{"arguments":[{"id":136,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3596:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":137,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"3604:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:32:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":135,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[142,162],"referencedDeclaration":162,"src":"3583:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3583:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":134,"id":140,"nodeType":"Return","src":"3576:67:1"}]},"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2741:731:1","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":142,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:1","nodeType":"FunctionDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"target","nameLocation":"3507:6:1","nodeType":"VariableDeclaration","scope":142,"src":"3499:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"data","nameLocation":"3528:4:1","nodeType":"VariableDeclaration","scope":142,"src":"3515:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":129,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:1"},"returnParameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":142,"src":"3552:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":132,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:1"},"scope":316,"src":"3477:173:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":161,"nodeType":"Block","src":"4019:76:1","statements":[{"expression":{"arguments":[{"id":155,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"4058:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":156,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"4066:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4072:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":158,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4075:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":154,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[182,232],"referencedDeclaration":232,"src":"4036:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4036:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":153,"id":160,"nodeType":"Return","src":"4029:59:1"}]},"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"3656:211:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":162,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3881:12:1","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"target","nameLocation":"3911:6:1","nodeType":"VariableDeclaration","scope":162,"src":"3903:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"data","nameLocation":"3940:4:1","nodeType":"VariableDeclaration","scope":162,"src":"3927:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":146,"name":"bytes","nodeType":"ElementaryTypeName","src":"3927:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"errorMessage","nameLocation":"3968:12:1","nodeType":"VariableDeclaration","scope":162,"src":"3954:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":148,"name":"string","nodeType":"ElementaryTypeName","src":"3954:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3893:93:1"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":162,"src":"4005:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":151,"name":"bytes","nodeType":"ElementaryTypeName","src":"4005:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4004:14:1"},"scope":316,"src":"3872:223:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"4600:111:1","statements":[{"expression":{"arguments":[{"id":175,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"4639:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":176,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4647:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"4653:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4660:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":174,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[182,232],"referencedDeclaration":232,"src":"4617:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4617:87:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":173,"id":180,"nodeType":"Return","src":"4610:94:1"}]},"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"4101:351:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4466:21:1","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"target","nameLocation":"4505:6:1","nodeType":"VariableDeclaration","scope":182,"src":"4497:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":167,"mutability":"mutable","name":"data","nameLocation":"4534:4:1","nodeType":"VariableDeclaration","scope":182,"src":"4521:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":166,"name":"bytes","nodeType":"ElementaryTypeName","src":"4521:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"value","nameLocation":"4556:5:1","nodeType":"VariableDeclaration","scope":182,"src":"4548:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4487:80:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"4586:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":171,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4585:14:1"},"scope":316,"src":"4457:254:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":231,"nodeType":"Block","src":"5138:320:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":199,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5164:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$316","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$316","typeString":"library AddressUpgradeable"}],"id":198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5156:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"5156:7:1","typeDescriptions":{}}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5156:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5156:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5181:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5156:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5188:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5148:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5148:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"5148:81:1"},{"expression":{"arguments":[{"arguments":[{"id":209,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"5258:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":208,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"5247:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5247:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5267:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5239:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5239:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"ExpressionStatement","src":"5239:60:1"},{"assignments":[215,217],"declarations":[{"constant":false,"id":215,"mutability":"mutable","name":"success","nameLocation":"5316:7:1","nodeType":"VariableDeclaration","scope":231,"src":"5311:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":214,"name":"bool","nodeType":"ElementaryTypeName","src":"5311:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"returndata","nameLocation":"5338:10:1","nodeType":"VariableDeclaration","scope":231,"src":"5325:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":216,"name":"bytes","nodeType":"ElementaryTypeName","src":"5325:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":224,"initialValue":{"arguments":[{"id":222,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"5378:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":218,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"5352:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5352:11:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5371:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5352:25:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5352:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5310:73:1"},{"expression":{"arguments":[{"id":226,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"5417:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":227,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"5426:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":228,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"5438:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":225,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5400:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5400:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":195,"id":230,"nodeType":"Return","src":"5393:58:1"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"4717:237:1","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":232,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4968:21:1","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"target","nameLocation":"5007:6:1","nodeType":"VariableDeclaration","scope":232,"src":"4999:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"data","nameLocation":"5036:4:1","nodeType":"VariableDeclaration","scope":232,"src":"5023:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":186,"name":"bytes","nodeType":"ElementaryTypeName","src":"5023:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"value","nameLocation":"5058:5:1","nodeType":"VariableDeclaration","scope":232,"src":"5050:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"5050:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"errorMessage","nameLocation":"5087:12:1","nodeType":"VariableDeclaration","scope":232,"src":"5073:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":190,"name":"string","nodeType":"ElementaryTypeName","src":"5073:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4989:116:1"},"returnParameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"5124:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":193,"name":"bytes","nodeType":"ElementaryTypeName","src":"5124:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5123:14:1"},"scope":316,"src":"4959:499:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":248,"nodeType":"Block","src":"5735:97:1","statements":[{"expression":{"arguments":[{"id":243,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"5771:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":244,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"5779:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5785:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":242,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[249,284],"referencedDeclaration":284,"src":"5752:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5752:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":241,"id":247,"nodeType":"Return","src":"5745:80:1"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"5464:166:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":249,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5644:18:1","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"target","nameLocation":"5671:6:1","nodeType":"VariableDeclaration","scope":249,"src":"5663:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"data","nameLocation":"5692:4:1","nodeType":"VariableDeclaration","scope":249,"src":"5679:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":236,"name":"bytes","nodeType":"ElementaryTypeName","src":"5679:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5662:35:1"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":249,"src":"5721:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":239,"name":"bytes","nodeType":"ElementaryTypeName","src":"5721:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5720:14:1"},"scope":316,"src":"5635:197:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":283,"nodeType":"Block","src":"6174:228:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":263,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"6203:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":262,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"6192:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6192:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6212:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6184:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6184:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":267,"nodeType":"ExpressionStatement","src":"6184:67:1"},{"assignments":[269,271],"declarations":[{"constant":false,"id":269,"mutability":"mutable","name":"success","nameLocation":"6268:7:1","nodeType":"VariableDeclaration","scope":283,"src":"6263:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":268,"name":"bool","nodeType":"ElementaryTypeName","src":"6263:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"returndata","nameLocation":"6290:10:1","nodeType":"VariableDeclaration","scope":283,"src":"6277:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":270,"name":"bytes","nodeType":"ElementaryTypeName","src":"6277:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":276,"initialValue":{"arguments":[{"id":274,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6322:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":272,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"6304:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6304:17:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6304:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6262:65:1"},{"expression":{"arguments":[{"id":278,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"6361:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":279,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"6370:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":280,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"6382:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":277,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6344:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6344:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":260,"id":282,"nodeType":"Return","src":"6337:58:1"}]},"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"5838:173:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":284,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6025:18:1","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"target","nameLocation":"6061:6:1","nodeType":"VariableDeclaration","scope":284,"src":"6053:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"6053:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"data","nameLocation":"6090:4:1","nodeType":"VariableDeclaration","scope":284,"src":"6077:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":253,"name":"bytes","nodeType":"ElementaryTypeName","src":"6077:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"errorMessage","nameLocation":"6118:12:1","nodeType":"VariableDeclaration","scope":284,"src":"6104:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":255,"name":"string","nodeType":"ElementaryTypeName","src":"6104:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6043:93:1"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"6160:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":258,"name":"bytes","nodeType":"ElementaryTypeName","src":"6160:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6159:14:1"},"scope":316,"src":"6016:386:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"6782:532:1","statements":[{"condition":{"id":296,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"6796:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"6853:455:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":300,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"6937:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6937:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6957:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6937:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":310,"nodeType":"Block","src":"7245:53:1","statements":[{"expression":{"arguments":[{"id":307,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"7270:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":306,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7263:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7263:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"7263:20:1"}]},"id":311,"nodeType":"IfStatement","src":"6933:365:1","trueBody":{"id":305,"nodeType":"Block","src":"6960:279:1","statements":[{"AST":{"nodeType":"YulBlock","src":"7080:145:1","statements":[{"nodeType":"YulVariableDeclaration","src":"7102:40:1","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7131:10:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7125:5:1"},"nodeType":"YulFunctionCall","src":"7125:17:1"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7106:15:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7174:2:1","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7178:10:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7170:3:1"},"nodeType":"YulFunctionCall","src":"7170:19:1"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7191:15:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7163:6:1"},"nodeType":"YulFunctionCall","src":"7163:44:1"},"nodeType":"YulExpressionStatement","src":"7163:44:1"}]},"evmVersion":"london","externalReferences":[{"declaration":289,"isOffset":false,"isSlot":false,"src":"7131:10:1","valueSize":1},{"declaration":289,"isOffset":false,"isSlot":false,"src":"7178:10:1","valueSize":1}],"id":304,"nodeType":"InlineAssembly","src":"7071:154:1"}]}}]},"id":313,"nodeType":"IfStatement","src":"6792:516:1","trueBody":{"id":299,"nodeType":"Block","src":"6805:42:1","statements":[{"expression":{"id":297,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"6826:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":295,"id":298,"nodeType":"Return","src":"6819:17:1"}]}}]},"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"6408:209:1","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"6631:16:1","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"success","nameLocation":"6662:7:1","nodeType":"VariableDeclaration","scope":315,"src":"6657:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":286,"name":"bool","nodeType":"ElementaryTypeName","src":"6657:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"returndata","nameLocation":"6692:10:1","nodeType":"VariableDeclaration","scope":315,"src":"6679:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":288,"name":"bytes","nodeType":"ElementaryTypeName","src":"6679:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"errorMessage","nameLocation":"6726:12:1","nodeType":"VariableDeclaration","scope":315,"src":"6712:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":290,"name":"string","nodeType":"ElementaryTypeName","src":"6712:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6647:97:1"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"6768:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":293,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:1"},"scope":316,"src":"6622:692:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":317,"src":"194:7122:1","usedErrors":[]}],"src":"101:7216:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1328],"Ownable":[429]},"id":430,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":318,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":430,"sourceUnit":1329,"src":"127:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":321,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1328,"src":"683:7:2"},"id":322,"nodeType":"InheritanceSpecifier","src":"683:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"159:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":429,"linearizedBaseContracts":[429,1328],"name":"Ownable","nameLocation":"672:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":324,"mutability":"mutable","name":"_owner","nameLocation":"713:6:2","nodeType":"VariableDeclaration","scope":429,"src":"697:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":330,"name":"OwnershipTransferred","nameLocation":"732:20:2","nodeType":"EventDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:2","nodeType":"VariableDeclaration","scope":330,"src":"753:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":328,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:2","nodeType":"VariableDeclaration","scope":330,"src":"784:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:2"},"src":"726:84:2"},{"body":{"id":339,"nodeType":"Block","src":"926:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":335,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"955:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":334,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"936:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"ExpressionStatement","src":"936:32:2"}]},"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"816:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":340,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"923:2:2"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[],"src":"926:0:2"},"scope":429,"src":"912:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":347,"nodeType":"Block","src":"1084:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":343,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"1094:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":345,"nodeType":"ExpressionStatement","src":"1094:13:2"},{"id":346,"nodeType":"PlaceholderStatement","src":"1117:1:2"}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"981:77:2","text":" @dev Throws if called by any account other than the owner."},"id":348,"name":"onlyOwner","nameLocation":"1072:9:2","nodeType":"ModifierDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"1081:2:2"},"src":"1063:62:2","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"1256:30:2","statements":[{"expression":{"id":354,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1273:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":353,"id":355,"nodeType":"Return","src":"1266:13:2"}]},"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"1131:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":357,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:2","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"1215:2:2"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":357,"src":"1247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:2"},"scope":429,"src":"1201:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":370,"nodeType":"Block","src":"1404:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":362,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1422:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"1433:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"1414:68:2"}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"1292:62:2","text":" @dev Throws if the sender is not the owner."},"id":371,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:2","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"1379:2:2"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"1404:0:2"},"scope":429,"src":"1359:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":384,"nodeType":"Block","src":"1885:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:2","typeDescriptions":{}}},"id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":377,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"1895:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"1895:30:2"}]},"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"1495:331:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":385,"implemented":true,"kind":"function","modifiers":[{"id":375,"kind":"modifierInvocation","modifierName":{"id":374,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"1875:9:2"},"nodeType":"ModifierInvocation","src":"1875:9:2"}],"name":"renounceOwnership","nameLocation":"1840:17:2","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"1857:2:2"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"1885:0:2"},"scope":429,"src":"1831:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":407,"nodeType":"Block","src":"2151:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":394,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2169:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:2","typeDescriptions":{}}},"id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":402,"nodeType":"ExpressionStatement","src":"2161:73:2"},{"expression":{"arguments":[{"id":404,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2263:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":403,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2244:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"2244:28:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"1938:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":408,"implemented":true,"kind":"function","modifiers":[{"id":391,"kind":"modifierInvocation","modifierName":{"id":390,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"2141:9:2"},"nodeType":"ModifierInvocation","src":"2141:9:2"}],"name":"transferOwnership","nameLocation":"2090:17:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:2","nodeType":"VariableDeclaration","scope":408,"src":"2108:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"2151:0:2"},"scope":429,"src":"2081:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":427,"nodeType":"Block","src":"2496:124:2","statements":[{"assignments":[415],"declarations":[{"constant":false,"id":415,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:2","nodeType":"VariableDeclaration","scope":427,"src":"2506:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":417,"initialValue":{"id":416,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2525:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:2"},{"expression":{"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":418,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2541:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":419,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2550:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":421,"nodeType":"ExpressionStatement","src":"2541:17:2"},{"eventCall":{"arguments":[{"id":423,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2594:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":424,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2604:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":422,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"2573:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":426,"nodeType":"EmitStatement","src":"2568:45:2"}]},"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"2285:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":428,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:2","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:2","nodeType":"VariableDeclaration","scope":428,"src":"2461:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:2"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"2496:0:2"},"scope":429,"src":"2433:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":430,"src":"654:1968:2","usedErrors":[]}],"src":"102:2521:2"},"id":2},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[469]},"id":470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":431,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"122:750:3","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":469,"linearizedBaseContracts":[469],"name":"ReentrancyGuard","nameLocation":"891:15:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":435,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1686:12:3","nodeType":"VariableDeclaration","scope":469,"src":"1661:41:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1701:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":438,"mutability":"constant","name":"_ENTERED","nameLocation":"1733:8:3","nodeType":"VariableDeclaration","scope":469,"src":"1708:37:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1744:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":440,"mutability":"mutable","name":"_status","nameLocation":"1768:7:3","nodeType":"VariableDeclaration","scope":469,"src":"1752:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":447,"nodeType":"Block","src":"1796:39:3","statements":[{"expression":{"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":443,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1806:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":444,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1816:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1806:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":446,"nodeType":"ExpressionStatement","src":"1806:22:3"}]},"id":448,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"1793:2:3"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"1796:0:3"},"scope":469,"src":"1782:53:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":467,"nodeType":"Block","src":"2236:421:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":452,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2325:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":453,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2336:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2346:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":451,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2317:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"2317:63:3"},{"expression":{"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":458,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2455:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":459,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2465:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2455:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":461,"nodeType":"ExpressionStatement","src":"2455:18:3"},{"id":462,"nodeType":"PlaceholderStatement","src":"2484:1:3"},{"expression":{"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":463,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2628:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":464,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2638:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2628:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":466,"nodeType":"ExpressionStatement","src":"2628:22:3"}]},"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"1841:366:3","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":468,"name":"nonReentrant","nameLocation":"2221:12:3","nodeType":"ModifierDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"2233:2:3"},"src":"2212:445:3","virtual":false,"visibility":"internal"}],"scope":470,"src":"873:1786:3","usedErrors":[]}],"src":"97:2563:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[547]},"id":548,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":471,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"131:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":547,"linearizedBaseContracts":[547],"name":"IERC20","nameLocation":"212:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"225:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":481,"name":"Transfer","nameLocation":"394:8:4","nodeType":"EventDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:4","nodeType":"VariableDeclaration","scope":481,"src":"403:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":477,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:4","nodeType":"VariableDeclaration","scope":481,"src":"425:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:4","nodeType":"VariableDeclaration","scope":481,"src":"445:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:4"},"src":"388:72:4"},{"anonymous":false,"documentation":{"id":482,"nodeType":"StructuredDocumentation","src":"466:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":490,"name":"Approval","nameLocation":"625:8:4","nodeType":"EventDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:4","nodeType":"VariableDeclaration","scope":490,"src":"634:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":486,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:4","nodeType":"VariableDeclaration","scope":490,"src":"657:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":488,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:4","nodeType":"VariableDeclaration","scope":490,"src":"682:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:4"},"src":"619:78:4"},{"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"703:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":496,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":547,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"835:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":504,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":547,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"986:202:4","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":514,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:4","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"to","nameLocation":"1219:2:4","nodeType":"VariableDeclaration","scope":514,"src":"1211:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"amount","nameLocation":"1231:6:4","nodeType":"VariableDeclaration","scope":514,"src":"1223:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:4"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":514,"src":"1257:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":511,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:4"},"scope":547,"src":"1193:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"1269:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":524,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:4","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"owner","nameLocation":"1565:5:4","nodeType":"VariableDeclaration","scope":524,"src":"1557:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"spender","nameLocation":"1580:7:4","nodeType":"VariableDeclaration","scope":524,"src":"1572:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:4"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":524,"src":"1612:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:4"},"scope":547,"src":"1538:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"1627:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":534,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:4","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"spender","nameLocation":"2299:7:4","nodeType":"VariableDeclaration","scope":534,"src":"2291:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"amount","nameLocation":"2316:6:4","nodeType":"VariableDeclaration","scope":534,"src":"2308:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:4"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":534,"src":"2342:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":531,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:4"},"scope":547,"src":"2274:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"2354:287:4","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":546,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:4","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":546,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"to","nameLocation":"2707:2:4","nodeType":"VariableDeclaration","scope":546,"src":"2699:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"amount","nameLocation":"2727:6:4","nodeType":"VariableDeclaration","scope":546,"src":"2719:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:4"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":546,"src":"2758:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":543,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:4"},"scope":547,"src":"2646:118:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":548,"src":"202:2564:4","usedErrors":[]}],"src":"106:2661:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[583]},"id":584,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":549,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"139:480:5","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":583,"linearizedBaseContracts":[583],"name":"IERC20Permit","nameLocation":"630:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"649:792:5","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":568,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:5","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"owner","nameLocation":"1479:5:5","nodeType":"VariableDeclaration","scope":568,"src":"1471:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"spender","nameLocation":"1502:7:5","nodeType":"VariableDeclaration","scope":568,"src":"1494:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":554,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":557,"mutability":"mutable","name":"value","nameLocation":"1527:5:5","nodeType":"VariableDeclaration","scope":568,"src":"1519:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:5","nodeType":"VariableDeclaration","scope":568,"src":"1542:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"v","nameLocation":"1574:1:5","nodeType":"VariableDeclaration","scope":568,"src":"1568:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":560,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"r","nameLocation":"1593:1:5","nodeType":"VariableDeclaration","scope":568,"src":"1585:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"s","nameLocation":"1612:1:5","nodeType":"VariableDeclaration","scope":568,"src":"1604:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:5"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[],"src":"1628:0:5"},"scope":583,"src":"1446:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"1635:294:5","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":576,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:5","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"owner","nameLocation":"1958:5:5","nodeType":"VariableDeclaration","scope":576,"src":"1950:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:5"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"1988:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:5"},"scope":583,"src":"1934:63:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"2003:128:5","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":582,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:5","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"2214:2:5"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":582,"src":"2240:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:5"},"scope":583,"src":"2189:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":584,"src":"620:1631:5","usedErrors":[]}],"src":"114:2138:5"},"id":5},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1306],"IERC20":[547],"IERC20Permit":[583],"SafeERC20":[864]},"id":865,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":585,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":586,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":865,"sourceUnit":548,"src":"140:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":587,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":865,"sourceUnit":584,"src":"164:46:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":588,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":865,"sourceUnit":1307,"src":"211:36:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"249:457:6","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":864,"linearizedBaseContracts":[864],"name":"SafeERC20","nameLocation":"715:9:6","nodeType":"ContractDefinition","nodes":[{"id":592,"libraryName":{"id":590,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1306,"src":"737:7:6"},"nodeType":"UsingForDirective","src":"731:26:6","typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":614,"nodeType":"Block","src":"865:103:6","statements":[{"expression":{"arguments":[{"id":603,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"895:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":606,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"925:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":514,"src":"925:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"925:23:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":609,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"950:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"954:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":604,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":602,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"875:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"875:86:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"875:86:6"}]},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:6","nodeType":"FunctionDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"token","nameLocation":"801:5:6","nodeType":"VariableDeclaration","scope":615,"src":"794:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":594,"nodeType":"UserDefinedTypeName","pathNode":{"id":593,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":547,"src":"794:6:6"},"referencedDeclaration":547,"src":"794:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"to","nameLocation":"824:2:6","nodeType":"VariableDeclaration","scope":615,"src":"816:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"value","nameLocation":"844:5:6","nodeType":"VariableDeclaration","scope":615,"src":"836:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:6"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[],"src":"865:0:6"},"scope":864,"src":"763:205:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":640,"nodeType":"Block","src":"1102:113:6","statements":[{"expression":{"arguments":[{"id":628,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1132:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":631,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1162:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":546,"src":"1162:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1162:27:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":634,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"1191:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"1197:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"1201:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":629,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":627,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"1112:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1112:96:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"ExpressionStatement","src":"1112:96:6"}]},"id":641,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:6","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"token","nameLocation":"1016:5:6","nodeType":"VariableDeclaration","scope":641,"src":"1009:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":617,"nodeType":"UserDefinedTypeName","pathNode":{"id":616,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":547,"src":"1009:6:6"},"referencedDeclaration":547,"src":"1009:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"from","nameLocation":"1039:4:6","nodeType":"VariableDeclaration","scope":641,"src":"1031:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"to","nameLocation":"1061:2:6","nodeType":"VariableDeclaration","scope":641,"src":"1053:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"value","nameLocation":"1081:5:6","nodeType":"VariableDeclaration","scope":641,"src":"1073:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:6"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[],"src":"1102:0:6"},"scope":864,"src":"974:241:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"1581:497:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"1830:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":661,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$864","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$864","typeString":"library SafeERC20"}],"id":660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:6","typeDescriptions":{}}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1862:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":663,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"1877:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":657,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"1846:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":524,"src":"1846:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1846:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":652,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1808:163:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"1808:163:6"},{"expression":{"arguments":[{"id":673,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"2001:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":676,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"2031:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":534,"src":"2031:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2031:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":679,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2055:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"2064:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":674,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":672,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"1981:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1981:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"ExpressionStatement","src":"1981:90:6"}]},"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"1221:249:6","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:6","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"token","nameLocation":"1512:5:6","nodeType":"VariableDeclaration","scope":685,"src":"1505:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":644,"nodeType":"UserDefinedTypeName","pathNode":{"id":643,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":547,"src":"1505:6:6"},"referencedDeclaration":547,"src":"1505:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"spender","nameLocation":"1535:7:6","nodeType":"VariableDeclaration","scope":685,"src":"1527:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"value","nameLocation":"1560:5:6","nodeType":"VariableDeclaration","scope":685,"src":"1552:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:6"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[],"src":"1581:0:6"},"scope":864,"src":"1475:603:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":720,"nodeType":"Block","src":"2200:194:6","statements":[{"assignments":[696],"declarations":[{"constant":false,"id":696,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:6","nodeType":"VariableDeclaration","scope":720,"src":"2210:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":707,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":701,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$864","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$864","typeString":"library SafeERC20"}],"id":700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:6","typeDescriptions":{}}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":703,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"2264:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":697,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2233:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":524,"src":"2233:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2233:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"2275:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:6"},{"expression":{"arguments":[{"id":709,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2310:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":712,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2340:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":534,"src":"2340:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2340:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":715,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"2364:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"2373:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":710,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":708,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"2290:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:97:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"2290:97:6"}]},"id":721,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:6","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"token","nameLocation":"2131:5:6","nodeType":"VariableDeclaration","scope":721,"src":"2124:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":687,"nodeType":"UserDefinedTypeName","pathNode":{"id":686,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":547,"src":"2124:6:6"},"referencedDeclaration":547,"src":"2124:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":690,"mutability":"mutable","name":"spender","nameLocation":"2154:7:6","nodeType":"VariableDeclaration","scope":721,"src":"2146:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"value","nameLocation":"2179:5:6","nodeType":"VariableDeclaration","scope":721,"src":"2171:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":691,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:6"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"2200:0:6"},"scope":864,"src":"2084:310:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":768,"nodeType":"Block","src":"2516:370:6","statements":[{"id":767,"nodeType":"UncheckedBlock","src":"2526:354:6","statements":[{"assignments":[732],"declarations":[{"constant":false,"id":732,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:6","nodeType":"VariableDeclaration","scope":767,"src":"2550:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":741,"initialValue":{"arguments":[{"arguments":[{"id":737,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$864","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$864","typeString":"library SafeERC20"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:6","typeDescriptions":{}}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2589:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":739,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2604:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":733,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"2573:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":524,"src":"2573:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":743,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"2634:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"2650:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2626:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"ExpressionStatement","src":"2626:75:6"},{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:6","nodeType":"VariableDeclaration","scope":767,"src":"2715:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":754,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":751,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"2738:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"2753:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:6"},{"expression":{"arguments":[{"id":756,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"2792:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":759,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"2822:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":534,"src":"2822:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2822:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":762,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2846:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":763,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"2855:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":757,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2799:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":755,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"2772:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:97:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"ExpressionStatement","src":"2772:97:6"}]}]},"id":769,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:6","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"token","nameLocation":"2447:5:6","nodeType":"VariableDeclaration","scope":769,"src":"2440:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":723,"nodeType":"UserDefinedTypeName","pathNode":{"id":722,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":547,"src":"2440:6:6"},"referencedDeclaration":547,"src":"2440:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"spender","nameLocation":"2470:7:6","nodeType":"VariableDeclaration","scope":769,"src":"2462:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"value","nameLocation":"2495:5:6","nodeType":"VariableDeclaration","scope":769,"src":"2487:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:6"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"2516:0:6"},"scope":864,"src":"2400:486:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":824,"nodeType":"Block","src":"3107:257:6","statements":[{"assignments":[790],"declarations":[{"constant":false,"id":790,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:6","nodeType":"VariableDeclaration","scope":824,"src":"3117:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":795,"initialValue":{"arguments":[{"id":793,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"3152:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":791,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"3139:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$583","typeString":"contract IERC20Permit"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":576,"src":"3139:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:6"},{"expression":{"arguments":[{"id":799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"3181:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"3188:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"3197:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":802,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"3204:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":803,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"3214:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":804,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"3217:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":805,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3220:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":796,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"3168:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$583","typeString":"contract IERC20Permit"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":568,"src":"3168:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"ExpressionStatement","src":"3168:54:6"},{"assignments":[809],"declarations":[{"constant":false,"id":809,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:6","nodeType":"VariableDeclaration","scope":824,"src":"3232:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":814,"initialValue":{"arguments":[{"id":812,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"3266:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":810,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"3253:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$583","typeString":"contract IERC20Permit"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":576,"src":"3253:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3253:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":816,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"3290:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":817,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"3304:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":815,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3282:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"3282:75:6"}]},"id":825,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:6","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"token","nameLocation":"2934:5:6","nodeType":"VariableDeclaration","scope":825,"src":"2921:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$583","typeString":"contract IERC20Permit"},"typeName":{"id":771,"nodeType":"UserDefinedTypeName","pathNode":{"id":770,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":583,"src":"2921:12:6"},"referencedDeclaration":583,"src":"2921:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$583","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"owner","nameLocation":"2957:5:6","nodeType":"VariableDeclaration","scope":825,"src":"2949:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"spender","nameLocation":"2980:7:6","nodeType":"VariableDeclaration","scope":825,"src":"2972:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"value","nameLocation":"3005:5:6","nodeType":"VariableDeclaration","scope":825,"src":"2997:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:6","nodeType":"VariableDeclaration","scope":825,"src":"3020:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"v","nameLocation":"3052:1:6","nodeType":"VariableDeclaration","scope":825,"src":"3046:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":781,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"r","nameLocation":"3071:1:6","nodeType":"VariableDeclaration","scope":825,"src":"3063:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"s","nameLocation":"3090:1:6","nodeType":"VariableDeclaration","scope":825,"src":"3082:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:6"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[],"src":"3107:0:6"},"scope":864,"src":"2892:472:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":862,"nodeType":"Block","src":"3817:636:6","statements":[{"assignments":[835],"declarations":[{"constant":false,"id":835,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:6","nodeType":"VariableDeclaration","scope":862,"src":"4166:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":834,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":844,"initialValue":{"arguments":[{"id":841,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"4220:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":838,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"4200:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}],"id":837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:6","typeDescriptions":{}}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1100,"src":"4192:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":845,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"4275:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4275:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":861,"nodeType":"IfStatement","src":"4271:176:6","trueBody":{"id":860,"nodeType":"Block","src":"4298:149:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":852,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"4370:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":853,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:6","typeDescriptions":{}}}],"id":855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":850,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4359:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4359:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4351:85:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":859,"nodeType":"ExpressionStatement","src":"4351:85:6"}]}}]},"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"3370:372:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":863,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:6","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"token","nameLocation":"3783:5:6","nodeType":"VariableDeclaration","scope":863,"src":"3776:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"},"typeName":{"id":828,"nodeType":"UserDefinedTypeName","pathNode":{"id":827,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":547,"src":"3776:6:6"},"referencedDeclaration":547,"src":"3776:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"data","nameLocation":"3803:4:6","nodeType":"VariableDeclaration","scope":863,"src":"3790:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":830,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:6"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"3817:0:6"},"scope":864,"src":"3747:706:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":865,"src":"707:3748:6","usedErrors":[]}],"src":"115:4341:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1340],"IERC721":[980]},"id":981,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":866,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":867,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":981,"sourceUnit":1341,"src":"133:47:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":869,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1340,"src":"271:7:7"},"id":870,"nodeType":"InheritanceSpecifier","src":"271:7:7"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"182:67:7","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":980,"linearizedBaseContracts":[980,1340],"name":"IERC721","nameLocation":"260:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"285:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":879,"name":"Transfer","nameLocation":"384:8:7","nodeType":"EventDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:7","nodeType":"VariableDeclaration","scope":879,"src":"393:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:7","nodeType":"VariableDeclaration","scope":879,"src":"415:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":877,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:7","nodeType":"VariableDeclaration","scope":879,"src":"435:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:7"},"src":"378:82:7"},{"anonymous":false,"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"466:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":888,"name":"Approval","nameLocation":"571:8:7","nodeType":"EventDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:7","nodeType":"VariableDeclaration","scope":888,"src":"580:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:7","nodeType":"VariableDeclaration","scope":888,"src":"603:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":886,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:7","nodeType":"VariableDeclaration","scope":888,"src":"629:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:7"},"src":"565:89:7"},{"anonymous":false,"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"660:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":897,"name":"ApprovalForAll","nameLocation":"788:14:7","nodeType":"EventDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:7","nodeType":"VariableDeclaration","scope":897,"src":"803:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:7","nodeType":"VariableDeclaration","scope":897,"src":"826:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:7","nodeType":"VariableDeclaration","scope":897,"src":"852:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":894,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:7"},"src":"782:85:7"},{"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"873:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":905,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:7","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"owner","nameLocation":"981:5:7","nodeType":"VariableDeclaration","scope":905,"src":"973:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:7"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"balance","nameLocation":"1019:7:7","nodeType":"VariableDeclaration","scope":905,"src":"1011:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:7"},"scope":980,"src":"954:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"1034:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":913,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:7","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:7","nodeType":"VariableDeclaration","scope":913,"src":"1187:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:7"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"owner","nameLocation":"1235:5:7","nodeType":"VariableDeclaration","scope":913,"src":"1227:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:7"},"scope":980,"src":"1170:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"1248:556:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":925,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:7","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"from","nameLocation":"1852:4:7","nodeType":"VariableDeclaration","scope":925,"src":"1844:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"to","nameLocation":"1874:2:7","nodeType":"VariableDeclaration","scope":925,"src":"1866:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:7","nodeType":"VariableDeclaration","scope":925,"src":"1886:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"data","nameLocation":"1926:4:7","nodeType":"VariableDeclaration","scope":925,"src":"1911:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:7"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"1945:0:7"},"scope":980,"src":"1809:137:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"1952:687:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":935,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:7","nodeType":"FunctionDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"from","nameLocation":"2687:4:7","nodeType":"VariableDeclaration","scope":935,"src":"2679:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"to","nameLocation":"2709:2:7","nodeType":"VariableDeclaration","scope":935,"src":"2701:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:7","nodeType":"VariableDeclaration","scope":935,"src":"2721:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:7"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"2751:0:7"},"scope":980,"src":"2644:108:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"2758:504:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":945,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:7","nodeType":"FunctionDefinition","parameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"from","nameLocation":"3306:4:7","nodeType":"VariableDeclaration","scope":945,"src":"3298:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"to","nameLocation":"3328:2:7","nodeType":"VariableDeclaration","scope":945,"src":"3320:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:7","nodeType":"VariableDeclaration","scope":945,"src":"3340:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:7"},"returnParameters":{"id":944,"nodeType":"ParameterList","parameters":[],"src":"3370:0:7"},"scope":980,"src":"3267:104:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"3377:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":953,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:7","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"to","nameLocation":"3859:2:7","nodeType":"VariableDeclaration","scope":953,"src":"3851:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:7","nodeType":"VariableDeclaration","scope":953,"src":"3863:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:7"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"3888:0:7"},"scope":980,"src":"3834:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"3895:309:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":961,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:7","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"operator","nameLocation":"4244:8:7","nodeType":"VariableDeclaration","scope":961,"src":"4236:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:7","nodeType":"VariableDeclaration","scope":961,"src":"4254:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":957,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:7"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"4278:0:7"},"scope":980,"src":"4209:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"4285:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":969,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:7","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:7","nodeType":"VariableDeclaration","scope":969,"src":"4450:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:7"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"operator","nameLocation":"4498:8:7","nodeType":"VariableDeclaration","scope":969,"src":"4490:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:7"},"scope":980,"src":"4429:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"4514:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":979,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:7","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"owner","nameLocation":"4691:5:7","nodeType":"VariableDeclaration","scope":979,"src":"4683:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"operator","nameLocation":"4706:8:7","nodeType":"VariableDeclaration","scope":979,"src":"4698:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:7"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":979,"src":"4739:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":976,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:7"},"scope":980,"src":"4657:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":981,"src":"250:4497:7","usedErrors":[]}],"src":"108:4640:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[1340],"IERC721":[980],"IERC721Enumerable":[1011]},"id":1012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":982,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":983,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1012,"sourceUnit":981,"src":"154:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":985,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":980,"src":"348:7:8"},"id":986,"nodeType":"InheritanceSpecifier","src":"348:7:8"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":984,"nodeType":"StructuredDocumentation","src":"180:136:8","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1011,"linearizedBaseContracts":[1011,980,1340],"name":"IERC721Enumerable","nameLocation":"327:17:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"362:82:8","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":992,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:8","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"469:2:8"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"495:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:8"},"scope":1011,"src":"449:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"510:171:8","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":1002,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:8","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"owner","nameLocation":"723:5:8","nodeType":"VariableDeclaration","scope":1002,"src":"715:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"index","nameLocation":"738:5:8","nodeType":"VariableDeclaration","scope":1002,"src":"730:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:8"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1002,"src":"768:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:8"},"scope":1011,"src":"686:91:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"783:164:8","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":1010,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:8","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"index","nameLocation":"982:5:8","nodeType":"VariableDeclaration","scope":1010,"src":"974:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:8"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1010,"src":"1012:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:8"},"scope":1011,"src":"952:69:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1012,"src":"317:706:8","usedErrors":[]}],"src":"129:895:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1306]},"id":1307,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1013,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1306,"linearizedBaseContracts":[1306],"name":"Address","nameLocation":"202:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1028,"nodeType":"Block","src":"1241:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1022,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1465:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1021,"id":1027,"nodeType":"Return","src":"1458:30:9"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"216:954:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1029,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:9","nodeType":"FunctionDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"account","nameLocation":"1203:7:9","nodeType":"VariableDeclaration","scope":1029,"src":"1195:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:9"},"returnParameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1029,"src":"1235:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1019,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:9"},"scope":1306,"src":"1175:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1062,"nodeType":"Block","src":"2483:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1040,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1306","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1306","typeString":"library Address"}],"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:9","typeDescriptions":{}}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1043,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2526:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1037,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1047,"nodeType":"ExpressionStatement","src":"2493:73:9"},{"assignments":[1049,null],"declarations":[{"constant":false,"id":1049,"mutability":"mutable","name":"success","nameLocation":"2583:7:9","nodeType":"VariableDeclaration","scope":1062,"src":"2578:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1048,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1056,"initialValue":{"arguments":[{"hexValue":"","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1050,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"2596:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1052,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2618:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:9"},{"expression":{"arguments":[{"id":1058,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2647:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1057,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"ExpressionStatement","src":"2639:78:9"}]},"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"1501:906:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1063,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:9","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:9","nodeType":"VariableDeclaration","scope":1063,"src":"2431:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"amount","nameLocation":"2466:6:9","nodeType":"VariableDeclaration","scope":1063,"src":"2458:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:9"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[],"src":"2483:0:9"},"scope":1306,"src":"2412:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1079,"nodeType":"Block","src":"3555:84:9","statements":[{"expression":{"arguments":[{"id":1074,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"3585:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"3593:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1073,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1080,1100],"referencedDeclaration":1100,"src":"3572:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1072,"id":1078,"nodeType":"Return","src":"3565:67:9"}]},"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"2730:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1080,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:9","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"target","nameLocation":"3496:6:9","nodeType":"VariableDeclaration","scope":1080,"src":"3488:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"data","nameLocation":"3517:4:9","nodeType":"VariableDeclaration","scope":1080,"src":"3504:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1067,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:9"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1080,"src":"3541:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1070,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:9"},"scope":1306,"src":"3466:173:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1099,"nodeType":"Block","src":"4008:76:9","statements":[{"expression":{"arguments":[{"id":1093,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"4047:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1094,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4055:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1096,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"4064:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1092,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1120,1170],"referencedDeclaration":1170,"src":"4025:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1091,"id":1098,"nodeType":"Return","src":"4018:59:9"}]},"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"3645:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1100,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:9","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"target","nameLocation":"3900:6:9","nodeType":"VariableDeclaration","scope":1100,"src":"3892:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"data","nameLocation":"3929:4:9","nodeType":"VariableDeclaration","scope":1100,"src":"3916:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1084,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:9","nodeType":"VariableDeclaration","scope":1100,"src":"3943:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1086,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:9"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1100,"src":"3994:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1089,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:9"},"scope":1306,"src":"3861:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"4589:111:9","statements":[{"expression":{"arguments":[{"id":1113,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4628:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"4636:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"4642:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1112,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1120,1170],"referencedDeclaration":1170,"src":"4606:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1111,"id":1118,"nodeType":"Return","src":"4599:94:9"}]},"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"4090:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:9","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"target","nameLocation":"4494:6:9","nodeType":"VariableDeclaration","scope":1120,"src":"4486:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"data","nameLocation":"4523:4:9","nodeType":"VariableDeclaration","scope":1120,"src":"4510:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1104,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"value","nameLocation":"4545:5:9","nodeType":"VariableDeclaration","scope":1120,"src":"4537:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:9"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"4575:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1109,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:9"},"scope":1306,"src":"4446:254:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1169,"nodeType":"Block","src":"5127:320:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1137,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1306","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1306","typeString":"library Address"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:9","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5170:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1134,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1144,"nodeType":"ExpressionStatement","src":"5137:81:9"},{"expression":{"arguments":[{"arguments":[{"id":1147,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5247:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1146,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"5236:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1151,"nodeType":"ExpressionStatement","src":"5228:60:9"},{"assignments":[1153,1155],"declarations":[{"constant":false,"id":1153,"mutability":"mutable","name":"success","nameLocation":"5305:7:9","nodeType":"VariableDeclaration","scope":1169,"src":"5300:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1152,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:9","nodeType":"VariableDeclaration","scope":1169,"src":"5314:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1154,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1162,"initialValue":{"arguments":[{"id":1160,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"5367:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1156,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5341:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5360:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:9"},{"expression":{"arguments":[{"id":1164,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"5406:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1165,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"5415:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1166,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"5427:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1163,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5389:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1133,"id":1168,"nodeType":"Return","src":"5382:58:9"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"4706:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1170,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:9","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"target","nameLocation":"4996:6:9","nodeType":"VariableDeclaration","scope":1170,"src":"4988:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"data","nameLocation":"5025:4:9","nodeType":"VariableDeclaration","scope":1170,"src":"5012:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1124,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"value","nameLocation":"5047:5:9","nodeType":"VariableDeclaration","scope":1170,"src":"5039:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:9","nodeType":"VariableDeclaration","scope":1170,"src":"5062:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1128,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:9"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1170,"src":"5113:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1131,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:9"},"scope":1306,"src":"4948:499:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1186,"nodeType":"Block","src":"5724:97:9","statements":[{"expression":{"arguments":[{"id":1181,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"5760:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1182,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"5768:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1180,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1187,1222],"referencedDeclaration":1222,"src":"5741:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1179,"id":1185,"nodeType":"Return","src":"5734:80:9"}]},"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"5453:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:9","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"target","nameLocation":"5660:6:9","nodeType":"VariableDeclaration","scope":1187,"src":"5652:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"data","nameLocation":"5681:4:9","nodeType":"VariableDeclaration","scope":1187,"src":"5668:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1174,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:9"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1187,"src":"5710:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1177,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:9"},"scope":1306,"src":"5624:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1221,"nodeType":"Block","src":"6163:228:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1201,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"6192:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1200,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"6181:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"ExpressionStatement","src":"6173:67:9"},{"assignments":[1207,1209],"declarations":[{"constant":false,"id":1207,"mutability":"mutable","name":"success","nameLocation":"6257:7:9","nodeType":"VariableDeclaration","scope":1221,"src":"6252:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1206,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:9","nodeType":"VariableDeclaration","scope":1221,"src":"6266:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1208,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1214,"initialValue":{"arguments":[{"id":1212,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6311:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1210,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"6293:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:9"},{"expression":{"arguments":[{"id":1216,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"6350:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1217,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6359:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1218,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"6371:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1215,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"6333:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1198,"id":1220,"nodeType":"Return","src":"6326:58:9"}]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"5827:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:9","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"target","nameLocation":"6050:6:9","nodeType":"VariableDeclaration","scope":1222,"src":"6042:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"data","nameLocation":"6079:4:9","nodeType":"VariableDeclaration","scope":1222,"src":"6066:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1191,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:9","nodeType":"VariableDeclaration","scope":1222,"src":"6093:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1193,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:9"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1222,"src":"6149:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1196,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:9"},"scope":1306,"src":"6005:386:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1238,"nodeType":"Block","src":"6667:101:9","statements":[{"expression":{"arguments":[{"id":1233,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"6705:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1234,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"6713:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1232,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1239,1274],"referencedDeclaration":1274,"src":"6684:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1231,"id":1237,"nodeType":"Return","src":"6677:84:9"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"6397:168:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1239,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:9","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"target","nameLocation":"6608:6:9","nodeType":"VariableDeclaration","scope":1239,"src":"6600:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"data","nameLocation":"6629:4:9","nodeType":"VariableDeclaration","scope":1239,"src":"6616:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1226,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:9"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1239,"src":"6653:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1229,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:9"},"scope":1306,"src":"6570:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1273,"nodeType":"Block","src":"7109:232:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1253,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"7138:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1252,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"7127:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1251,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"7119:69:9"},{"assignments":[1259,1261],"declarations":[{"constant":false,"id":1259,"mutability":"mutable","name":"success","nameLocation":"7205:7:9","nodeType":"VariableDeclaration","scope":1273,"src":"7200:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1258,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:9","nodeType":"VariableDeclaration","scope":1273,"src":"7214:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1260,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1266,"initialValue":{"arguments":[{"id":1264,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"7261:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1262,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"7241:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:9"},{"expression":{"arguments":[{"id":1268,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"7300:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1269,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"7309:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1270,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"7321:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1267,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"7283:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1250,"id":1272,"nodeType":"Return","src":"7276:58:9"}]},"documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"6774:175:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1274,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:9","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"target","nameLocation":"7001:6:9","nodeType":"VariableDeclaration","scope":1274,"src":"6993:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"data","nameLocation":"7030:4:9","nodeType":"VariableDeclaration","scope":1274,"src":"7017:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1243,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:9","nodeType":"VariableDeclaration","scope":1274,"src":"7044:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1245,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:9"},"returnParameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1274,"src":"7095:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1248,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:9"},"scope":1306,"src":"6954:387:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1304,"nodeType":"Block","src":"7721:582:9","statements":[{"condition":{"id":1286,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"7735:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1302,"nodeType":"Block","src":"7792:505:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1290,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"7876:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1300,"nodeType":"Block","src":"8234:53:9","statements":[{"expression":{"arguments":[{"id":1297,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"8259:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1296,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1299,"nodeType":"ExpressionStatement","src":"8252:20:9"}]},"id":1301,"nodeType":"IfStatement","src":"7872:415:9","trueBody":{"id":1295,"nodeType":"Block","src":"7899:329:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:9"},"nodeType":"YulFunctionCall","src":"8114:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:9"},"nodeType":"YulFunctionCall","src":"8159:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:9"},"nodeType":"YulFunctionCall","src":"8152:44:9"},"nodeType":"YulExpressionStatement","src":"8152:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1279,"isOffset":false,"isSlot":false,"src":"8120:10:9","valueSize":1},{"declaration":1279,"isOffset":false,"isSlot":false,"src":"8167:10:9","valueSize":1}],"id":1294,"nodeType":"InlineAssembly","src":"8060:154:9"}]}}]},"id":1303,"nodeType":"IfStatement","src":"7731:566:9","trueBody":{"id":1289,"nodeType":"Block","src":"7744:42:9","statements":[{"expression":{"id":1287,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"7765:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1285,"id":1288,"nodeType":"Return","src":"7758:17:9"}]}}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"7347:209:9","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1305,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:9","nodeType":"FunctionDefinition","parameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"success","nameLocation":"7601:7:9","nodeType":"VariableDeclaration","scope":1305,"src":"7596:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1276,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:9","nodeType":"VariableDeclaration","scope":1305,"src":"7618:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1278,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:9","nodeType":"VariableDeclaration","scope":1305,"src":"7651:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1280,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:9"},"returnParameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1305,"src":"7707:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1283,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:9"},"scope":1306,"src":"7561:742:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1307,"src":"194:8111:9","usedErrors":[]}],"src":"101:8205:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1328]},"id":1329,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1308,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"111:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1328,"linearizedBaseContracts":[1328],"name":"Context","nameLocation":"626:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1317,"nodeType":"Block","src":"702:34:10","statements":[{"expression":{"expression":{"id":1314,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1313,"id":1316,"nodeType":"Return","src":"712:17:10"}]},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:10","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[],"src":"659:2:10"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"693:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:10"},"scope":1328,"src":"640:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1326,"nodeType":"Block","src":"809:32:10","statements":[{"expression":{"expression":{"id":1323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1322,"id":1325,"nodeType":"Return","src":"819:15:10"}]},"id":1327,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:10","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[],"src":"759:2:10"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1327,"src":"793:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1320,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:10"},"scope":1328,"src":"742:99:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1329,"src":"608:235:10","usedErrors":[]}],"src":"86:758:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1340]},"id":1341,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1330,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"125:279:11","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1340,"linearizedBaseContracts":[1340],"name":"IERC165","nameLocation":"415:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"429:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1339,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:11","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:11","nodeType":"VariableDeclaration","scope":1339,"src":"801:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1333,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:11"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1339,"src":"844:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1336,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:11"},"scope":1340,"src":"774:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1341,"src":"405:447:11","usedErrors":[]}],"src":"100:753:11"},"id":11},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[1939]},"id":1940,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1342,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"140:1087:12","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":1939,"linearizedBaseContracts":[1939],"name":"EnumerableSet","nameLocation":"1236:13:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":1351,"members":[{"constant":false,"id":1346,"mutability":"mutable","name":"_values","nameLocation":"1760:7:12","nodeType":"VariableDeclaration","scope":1351,"src":"1750:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1750:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1345,"nodeType":"ArrayTypeName","src":"1750:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"_indexes","nameLocation":"1928:8:12","nodeType":"VariableDeclaration","scope":1351,"src":"1900:36:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1349,"keyType":{"id":1347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1908:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1900:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1703:3:12","nodeType":"StructDefinition","scope":1939,"src":"1696:247:12","visibility":"public"},{"body":{"id":1392,"nodeType":"Block","src":"2182:335:12","statements":[{"condition":{"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2196:22:12","subExpression":{"arguments":[{"id":1363,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2207:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":1364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"2212:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1362,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"2197:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2197:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1390,"nodeType":"Block","src":"2474:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2495:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1361,"id":1389,"nodeType":"Return","src":"2488:12:12"}]},"id":1391,"nodeType":"IfStatement","src":"2192:319:12","trueBody":{"id":1387,"nodeType":"Block","src":"2220:248:12","statements":[{"expression":{"arguments":[{"id":1372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"2251:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":1367,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2234:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"2234:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2234:16:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1374,"nodeType":"ExpressionStatement","src":"2234:23:12"},{"expression":{"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1375,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2392:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"2392:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1379,"indexExpression":{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"2405:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2392:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1380,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2414:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"2414:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2414:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2392:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1384,"nodeType":"ExpressionStatement","src":"2392:40:12"},{"expression":{"hexValue":"74727565","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2453:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1361,"id":1386,"nodeType":"Return","src":"2446:11:12"}]}}]},"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"1949:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1393,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2122:4:12","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"set","nameLocation":"2139:3:12","nodeType":"VariableDeclaration","scope":1393,"src":"2127:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1354,"nodeType":"UserDefinedTypeName","pathNode":{"id":1353,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"2127:3:12"},"referencedDeclaration":1351,"src":"2127:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"value","nameLocation":"2152:5:12","nodeType":"VariableDeclaration","scope":1393,"src":"2144:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2144:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2126:32:12"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1393,"src":"2176:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1359,"name":"bool","nodeType":"ElementaryTypeName","src":"2176:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2175:6:12"},"scope":1939,"src":"2113:404:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1476,"nodeType":"Block","src":"2757:1316:12","statements":[{"assignments":[1405],"declarations":[{"constant":false,"id":1405,"mutability":"mutable","name":"valueIndex","nameLocation":"2875:10:12","nodeType":"VariableDeclaration","scope":1476,"src":"2867:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1410,"initialValue":{"baseExpression":{"expression":{"id":1406,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"2888:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"2888:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1409,"indexExpression":{"id":1408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2901:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2888:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2867:40:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1411,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"2922:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2936:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2922:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1474,"nodeType":"Block","src":"4030:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4051:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1403,"id":1473,"nodeType":"Return","src":"4044:12:12"}]},"id":1475,"nodeType":"IfStatement","src":"2918:1149:12","trueBody":{"id":1471,"nodeType":"Block","src":"2939:1085:12","statements":[{"assignments":[1415],"declarations":[{"constant":false,"id":1415,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3299:13:12","nodeType":"VariableDeclaration","scope":1471,"src":"3291:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1419,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1416,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"3315:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3328:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3315:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3291:38:12"},{"assignments":[1421],"declarations":[{"constant":false,"id":1421,"mutability":"mutable","name":"lastIndex","nameLocation":"3351:9:12","nodeType":"VariableDeclaration","scope":1471,"src":"3343:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"3343:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1427,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1422,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"3363:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"3363:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3363:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3384:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3363:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3343:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1428,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3404:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1429,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"3417:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3404:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"nodeType":"IfStatement","src":"3400:398:12","trueBody":{"id":1454,"nodeType":"Block","src":"3432:366:12","statements":[{"assignments":[1432],"declarations":[{"constant":false,"id":1432,"mutability":"mutable","name":"lastValue","nameLocation":"3458:9:12","nodeType":"VariableDeclaration","scope":1454,"src":"3450:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3450:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1437,"initialValue":{"baseExpression":{"expression":{"id":1433,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"3470:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"3470:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1436,"indexExpression":{"id":1435,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3482:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3470:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3450:42:12"},{"expression":{"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1438,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"3592:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"3592:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1442,"indexExpression":{"id":1440,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"3604:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3592:26:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1443,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"3621:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3592:38:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1445,"nodeType":"ExpressionStatement","src":"3592:38:12"},{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1446,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"3704:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"3704:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1450,"indexExpression":{"id":1448,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"3717:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3704:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1451,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"3730:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3704:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ExpressionStatement","src":"3704:36:12"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1456,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"3876:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"3876:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3876:15:12","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3876:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1462,"nodeType":"ExpressionStatement","src":"3876:17:12"},{"expression":{"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3961:26:12","subExpression":{"baseExpression":{"expression":{"id":1463,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"3968:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"3968:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1466,"indexExpression":{"id":1465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"3981:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3968:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1468,"nodeType":"ExpressionStatement","src":"3961:26:12"},{"expression":{"hexValue":"74727565","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4009:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1403,"id":1470,"nodeType":"Return","src":"4002:11:12"}]}}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"2523:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1477,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2694:7:12","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"set","nameLocation":"2714:3:12","nodeType":"VariableDeclaration","scope":1477,"src":"2702:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1396,"nodeType":"UserDefinedTypeName","pathNode":{"id":1395,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"2702:3:12"},"referencedDeclaration":1351,"src":"2702:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"value","nameLocation":"2727:5:12","nodeType":"VariableDeclaration","scope":1477,"src":"2719:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2719:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2701:32:12"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1477,"src":"2751:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1401,"name":"bool","nodeType":"ElementaryTypeName","src":"2751:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2750:6:12"},"scope":1939,"src":"2685:1388:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1495,"nodeType":"Block","src":"4233:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1488,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"4250:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"4250:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1491,"indexExpression":{"id":1490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"4263:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4250:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4273:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4250:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1487,"id":1494,"nodeType":"Return","src":"4243:31:12"}]},"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"4079:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":1496,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4163:9:12","nodeType":"FunctionDefinition","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"set","nameLocation":"4185:3:12","nodeType":"VariableDeclaration","scope":1496,"src":"4173:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1480,"nodeType":"UserDefinedTypeName","pathNode":{"id":1479,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"4173:3:12"},"referencedDeclaration":1351,"src":"4173:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1483,"mutability":"mutable","name":"value","nameLocation":"4198:5:12","nodeType":"VariableDeclaration","scope":1496,"src":"4190:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4190:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4172:32:12"},"returnParameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1496,"src":"4227:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1485,"name":"bool","nodeType":"ElementaryTypeName","src":"4227:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4226:6:12"},"scope":1939,"src":"4154:127:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1509,"nodeType":"Block","src":"4427:42:12","statements":[{"expression":{"expression":{"expression":{"id":1505,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"4444:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"4444:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4444:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1504,"id":1508,"nodeType":"Return","src":"4437:25:12"}]},"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"4287:70:12","text":" @dev Returns the number of values on the set. O(1)."},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4371:7:12","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"set","nameLocation":"4391:3:12","nodeType":"VariableDeclaration","scope":1510,"src":"4379:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1499,"nodeType":"UserDefinedTypeName","pathNode":{"id":1498,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"4379:3:12"},"referencedDeclaration":1351,"src":"4379:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4378:17:12"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"4418:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:9:12"},"scope":1939,"src":"4362:107:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1526,"nodeType":"Block","src":"4887:42:12","statements":[{"expression":{"baseExpression":{"expression":{"id":1521,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"4904:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"4904:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1524,"indexExpression":{"id":1523,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"4916:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4904:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1520,"id":1525,"nodeType":"Return","src":"4897:25:12"}]},"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"4475:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4820:3:12","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"set","nameLocation":"4836:3:12","nodeType":"VariableDeclaration","scope":1527,"src":"4824:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1513,"nodeType":"UserDefinedTypeName","pathNode":{"id":1512,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"4824:3:12"},"referencedDeclaration":1351,"src":"4824:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"index","nameLocation":"4849:5:12","nodeType":"VariableDeclaration","scope":1527,"src":"4841:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"4841:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4823:32:12"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"4878:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4878:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4877:9:12"},"scope":1939,"src":"4811:118:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1540,"nodeType":"Block","src":"5543:35:12","statements":[{"expression":{"expression":{"id":1537,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"5560:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"5560:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1536,"id":1539,"nodeType":"Return","src":"5553:18:12"}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"4935:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5478:7:12","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"set","nameLocation":"5498:3:12","nodeType":"VariableDeclaration","scope":1541,"src":"5486:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1530,"nodeType":"UserDefinedTypeName","pathNode":{"id":1529,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"5486:3:12"},"referencedDeclaration":1351,"src":"5486:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5485:17:12"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"5525:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5525:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1534,"nodeType":"ArrayTypeName","src":"5525:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5524:18:12"},"scope":1939,"src":"5469:109:12","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":1545,"members":[{"constant":false,"id":1544,"mutability":"mutable","name":"_inner","nameLocation":"5635:6:12","nodeType":"VariableDeclaration","scope":1545,"src":"5631:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1543,"nodeType":"UserDefinedTypeName","pathNode":{"id":1542,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"5631:3:12"},"referencedDeclaration":1351,"src":"5631:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5610:10:12","nodeType":"StructDefinition","scope":1939,"src":"5603:45:12","visibility":"public"},{"body":{"id":1562,"nodeType":"Block","src":"5894:47:12","statements":[{"expression":{"arguments":[{"expression":{"id":1557,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"5916:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"5916:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"5928:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1556,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"5911:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1351_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5911:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1555,"id":1561,"nodeType":"Return","src":"5904:30:12"}]},"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"5654:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1563,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5827:3:12","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"set","nameLocation":"5850:3:12","nodeType":"VariableDeclaration","scope":1563,"src":"5831:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1548,"nodeType":"UserDefinedTypeName","pathNode":{"id":1547,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"5831:10:12"},"referencedDeclaration":1545,"src":"5831:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"value","nameLocation":"5863:5:12","nodeType":"VariableDeclaration","scope":1563,"src":"5855:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5855:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5830:39:12"},"returnParameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1563,"src":"5888:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1553,"name":"bool","nodeType":"ElementaryTypeName","src":"5888:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5887:6:12"},"scope":1939,"src":"5818:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1580,"nodeType":"Block","src":"6188:50:12","statements":[{"expression":{"arguments":[{"expression":{"id":1575,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"6213:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"6213:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"6225:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1574,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"6205:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1351_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6205:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1573,"id":1579,"nodeType":"Return","src":"6198:33:12"}]},"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"5947:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6118:6:12","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"set","nameLocation":"6144:3:12","nodeType":"VariableDeclaration","scope":1581,"src":"6125:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1566,"nodeType":"UserDefinedTypeName","pathNode":{"id":1565,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"6125:10:12"},"referencedDeclaration":1545,"src":"6125:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"value","nameLocation":"6157:5:12","nodeType":"VariableDeclaration","scope":1581,"src":"6149:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6149:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6124:39:12"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1581,"src":"6182:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1571,"name":"bool","nodeType":"ElementaryTypeName","src":"6182:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6181:6:12"},"scope":1939,"src":"6109:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1598,"nodeType":"Block","src":"6405:52:12","statements":[{"expression":{"arguments":[{"expression":{"id":1593,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"6432:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"6432:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"6444:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1592,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"6422:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1591,"id":1597,"nodeType":"Return","src":"6415:35:12"}]},"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"6244:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":1599,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6328:8:12","nodeType":"FunctionDefinition","parameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"set","nameLocation":"6356:3:12","nodeType":"VariableDeclaration","scope":1599,"src":"6337:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1584,"nodeType":"UserDefinedTypeName","pathNode":{"id":1583,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"6337:10:12"},"referencedDeclaration":1545,"src":"6337:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"value","nameLocation":"6369:5:12","nodeType":"VariableDeclaration","scope":1599,"src":"6361:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6361:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6336:39:12"},"returnParameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1599,"src":"6399:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1589,"name":"bool","nodeType":"ElementaryTypeName","src":"6399:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6398:6:12"},"scope":1939,"src":"6319:138:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1613,"nodeType":"Block","src":"6610:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":1609,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"6635:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"6635:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1608,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"6627:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6627:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1607,"id":1612,"nodeType":"Return","src":"6620:26:12"}]},"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"6463:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6547:6:12","nodeType":"FunctionDefinition","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"set","nameLocation":"6573:3:12","nodeType":"VariableDeclaration","scope":1614,"src":"6554:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1602,"nodeType":"UserDefinedTypeName","pathNode":{"id":1601,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"6554:10:12"},"referencedDeclaration":1545,"src":"6554:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6553:24:12"},"returnParameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"6601:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"6601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6600:9:12"},"scope":1939,"src":"6538:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1631,"nodeType":"Block","src":"7078:46:12","statements":[{"expression":{"arguments":[{"expression":{"id":1626,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"7099:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"7099:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1628,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7111:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1625,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"7095:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7095:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1624,"id":1630,"nodeType":"Return","src":"7088:29:12"}]},"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"6659:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1632,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7004:2:12","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"set","nameLocation":"7026:3:12","nodeType":"VariableDeclaration","scope":1632,"src":"7007:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1617,"nodeType":"UserDefinedTypeName","pathNode":{"id":1616,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"7007:10:12"},"referencedDeclaration":1545,"src":"7007:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"index","nameLocation":"7039:5:12","nodeType":"VariableDeclaration","scope":1632,"src":"7031:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"7031:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7006:39:12"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1632,"src":"7069:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7069:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7068:9:12"},"scope":1939,"src":"6995:129:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1647,"nodeType":"Block","src":"7745:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":1643,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"7770:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"7770:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1642,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"7762:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1641,"id":1646,"nodeType":"Return","src":"7755:26:12"}]},"documentation":{"id":1633,"nodeType":"StructuredDocumentation","src":"7130:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1648,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7673:6:12","nodeType":"FunctionDefinition","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"set","nameLocation":"7699:3:12","nodeType":"VariableDeclaration","scope":1648,"src":"7680:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1635,"nodeType":"UserDefinedTypeName","pathNode":{"id":1634,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"7680:10:12"},"referencedDeclaration":1545,"src":"7680:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1545_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7679:24:12"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1648,"src":"7727:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7727:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1639,"nodeType":"ArrayTypeName","src":"7727:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7726:18:12"},"scope":1939,"src":"7664:124:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":1652,"members":[{"constant":false,"id":1651,"mutability":"mutable","name":"_inner","nameLocation":"7845:6:12","nodeType":"VariableDeclaration","scope":1652,"src":"7841:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1650,"nodeType":"UserDefinedTypeName","pathNode":{"id":1649,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"7841:3:12"},"referencedDeclaration":1351,"src":"7841:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"7820:10:12","nodeType":"StructDefinition","scope":1939,"src":"7813:45:12","visibility":"public"},{"body":{"id":1678,"nodeType":"Block","src":"8104:74:12","statements":[{"expression":{"arguments":[{"expression":{"id":1664,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"8126:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"8126:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"8162:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8154:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1670,"name":"uint160","nodeType":"ElementaryTypeName","src":"8154:7:12","typeDescriptions":{}}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8154:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"8146:7:12","typeDescriptions":{}}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8146:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8138:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8138:7:12","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8138:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1663,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"8121:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1351_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1662,"id":1677,"nodeType":"Return","src":"8114:57:12"}]},"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"7864:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1679,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8037:3:12","nodeType":"FunctionDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"set","nameLocation":"8060:3:12","nodeType":"VariableDeclaration","scope":1679,"src":"8041:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1655,"nodeType":"UserDefinedTypeName","pathNode":{"id":1654,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"8041:10:12"},"referencedDeclaration":1652,"src":"8041:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"value","nameLocation":"8073:5:12","nodeType":"VariableDeclaration","scope":1679,"src":"8065:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8040:39:12"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1679,"src":"8098:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1660,"name":"bool","nodeType":"ElementaryTypeName","src":"8098:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8097:6:12"},"scope":1939,"src":"8028:150:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1705,"nodeType":"Block","src":"8425:77:12","statements":[{"expression":{"arguments":[{"expression":{"id":1691,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"8450:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"8450:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"8486:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8478:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1697,"name":"uint160","nodeType":"ElementaryTypeName","src":"8478:7:12","typeDescriptions":{}}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8478:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8470:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"8470:7:12","typeDescriptions":{}}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8470:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8462:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8462:7:12","typeDescriptions":{}}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8462:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1690,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"8442:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1351_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8442:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1689,"id":1704,"nodeType":"Return","src":"8435:60:12"}]},"documentation":{"id":1680,"nodeType":"StructuredDocumentation","src":"8184:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1706,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8355:6:12","nodeType":"FunctionDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"set","nameLocation":"8381:3:12","nodeType":"VariableDeclaration","scope":1706,"src":"8362:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1682,"nodeType":"UserDefinedTypeName","pathNode":{"id":1681,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"8362:10:12"},"referencedDeclaration":1652,"src":"8362:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"value","nameLocation":"8394:5:12","nodeType":"VariableDeclaration","scope":1706,"src":"8386:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8361:39:12"},"returnParameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"8419:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1687,"name":"bool","nodeType":"ElementaryTypeName","src":"8419:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8418:6:12"},"scope":1939,"src":"8346:156:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1732,"nodeType":"Block","src":"8669:79:12","statements":[{"expression":{"arguments":[{"expression":{"id":1718,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"8696:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"8696:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"8732:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8724:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1724,"name":"uint160","nodeType":"ElementaryTypeName","src":"8724:7:12","typeDescriptions":{}}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8724:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8716:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"8716:7:12","typeDescriptions":{}}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8716:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8708:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8708:7:12","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8708:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1717,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8686:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8686:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1716,"id":1731,"nodeType":"Return","src":"8679:62:12"}]},"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"8508:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":1733,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8592:8:12","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"set","nameLocation":"8620:3:12","nodeType":"VariableDeclaration","scope":1733,"src":"8601:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1709,"nodeType":"UserDefinedTypeName","pathNode":{"id":1708,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"8601:10:12"},"referencedDeclaration":1652,"src":"8601:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"value","nameLocation":"8633:5:12","nodeType":"VariableDeclaration","scope":1733,"src":"8625:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"8625:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8600:39:12"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1733,"src":"8663:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1714,"name":"bool","nodeType":"ElementaryTypeName","src":"8663:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8662:6:12"},"scope":1939,"src":"8583:165:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1747,"nodeType":"Block","src":"8901:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":1743,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"8926:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"8926:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1742,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"8918:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8918:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1741,"id":1746,"nodeType":"Return","src":"8911:26:12"}]},"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"8754:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"8838:6:12","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"set","nameLocation":"8864:3:12","nodeType":"VariableDeclaration","scope":1748,"src":"8845:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1736,"nodeType":"UserDefinedTypeName","pathNode":{"id":1735,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"8845:10:12"},"referencedDeclaration":1652,"src":"8845:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"8844:24:12"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"8892:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"8892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8891:9:12"},"scope":1939,"src":"8829:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1774,"nodeType":"Block","src":"9369:73:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1766,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"9414:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"9414:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1768,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"9426:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1765,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"9410:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9410:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9402:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"9402:7:12","typeDescriptions":{}}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9402:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9394:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1761,"name":"uint160","nodeType":"ElementaryTypeName","src":"9394:7:12","typeDescriptions":{}}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9394:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9386:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"9386:7:12","typeDescriptions":{}}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9386:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1758,"id":1773,"nodeType":"Return","src":"9379:56:12"}]},"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"8950:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1775,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9295:2:12","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"set","nameLocation":"9317:3:12","nodeType":"VariableDeclaration","scope":1775,"src":"9298:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1751,"nodeType":"UserDefinedTypeName","pathNode":{"id":1750,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"9298:10:12"},"referencedDeclaration":1652,"src":"9298:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1754,"mutability":"mutable","name":"index","nameLocation":"9330:5:12","nodeType":"VariableDeclaration","scope":1775,"src":"9322:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"9322:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9297:39:12"},"returnParameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1775,"src":"9360:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"9360:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9359:9:12"},"scope":1939,"src":"9286:156:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1804,"nodeType":"Block","src":"10063:219:12","statements":[{"assignments":[1789],"declarations":[{"constant":false,"id":1789,"mutability":"mutable","name":"store","nameLocation":"10090:5:12","nodeType":"VariableDeclaration","scope":1804,"src":"10073:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10073:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1788,"nodeType":"ArrayTypeName","src":"10073:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1794,"initialValue":{"arguments":[{"expression":{"id":1791,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"10106:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"10106:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1790,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"10098:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10098:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10073:44:12"},{"assignments":[1799],"declarations":[{"constant":false,"id":1799,"mutability":"mutable","name":"result","nameLocation":"10144:6:12","nodeType":"VariableDeclaration","scope":1804,"src":"10127:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"10127:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1798,"nodeType":"ArrayTypeName","src":"10127:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1800,"nodeType":"VariableDeclarationStatement","src":"10127:23:12"},{"AST":{"nodeType":"YulBlock","src":"10213:39:12","statements":[{"nodeType":"YulAssignment","src":"10227:15:12","value":{"name":"store","nodeType":"YulIdentifier","src":"10237:5:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10227:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1799,"isOffset":false,"isSlot":false,"src":"10227:6:12","valueSize":1},{"declaration":1789,"isOffset":false,"isSlot":false,"src":"10237:5:12","valueSize":1}],"id":1801,"nodeType":"InlineAssembly","src":"10204:48:12"},{"expression":{"id":1802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"10269:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1784,"id":1803,"nodeType":"Return","src":"10262:13:12"}]},"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"9448:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1805,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"9991:6:12","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"set","nameLocation":"10017:3:12","nodeType":"VariableDeclaration","scope":1805,"src":"9998:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1778,"nodeType":"UserDefinedTypeName","pathNode":{"id":1777,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"9998:10:12"},"referencedDeclaration":1652,"src":"9998:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1652_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9997:24:12"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1805,"src":"10045:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"10045:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1782,"nodeType":"ArrayTypeName","src":"10045:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10044:18:12"},"scope":1939,"src":"9982:300:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":1809,"members":[{"constant":false,"id":1808,"mutability":"mutable","name":"_inner","nameLocation":"10333:6:12","nodeType":"VariableDeclaration","scope":1809,"src":"10329:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1807,"nodeType":"UserDefinedTypeName","pathNode":{"id":1806,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"10329:3:12"},"referencedDeclaration":1351,"src":"10329:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10311:7:12","nodeType":"StructDefinition","scope":1939,"src":"10304:42:12","visibility":"public"},{"body":{"id":1829,"nodeType":"Block","src":"10589:56:12","statements":[{"expression":{"arguments":[{"expression":{"id":1821,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"10611:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1808,"src":"10611:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"10631:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10623:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10623:7:12","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10623:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1820,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"10606:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1351_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10606:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1819,"id":1828,"nodeType":"Return","src":"10599:39:12"}]},"documentation":{"id":1810,"nodeType":"StructuredDocumentation","src":"10352:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10525:3:12","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"set","nameLocation":"10545:3:12","nodeType":"VariableDeclaration","scope":1830,"src":"10529:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1812,"nodeType":"UserDefinedTypeName","pathNode":{"id":1811,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1809,"src":"10529:7:12"},"referencedDeclaration":1809,"src":"10529:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"value","nameLocation":"10558:5:12","nodeType":"VariableDeclaration","scope":1830,"src":"10550:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"10550:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10528:36:12"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1830,"src":"10583:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1817,"name":"bool","nodeType":"ElementaryTypeName","src":"10583:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10582:6:12"},"scope":1939,"src":"10516:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1850,"nodeType":"Block","src":"10889:59:12","statements":[{"expression":{"arguments":[{"expression":{"id":1842,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"10914:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1808,"src":"10914:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"10934:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10926:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10926:7:12","typeDescriptions":{}}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10926:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1841,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"10906:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1351_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10906:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1840,"id":1849,"nodeType":"Return","src":"10899:42:12"}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"10651:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1851,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"10822:6:12","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"set","nameLocation":"10845:3:12","nodeType":"VariableDeclaration","scope":1851,"src":"10829:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1833,"nodeType":"UserDefinedTypeName","pathNode":{"id":1832,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1809,"src":"10829:7:12"},"referencedDeclaration":1809,"src":"10829:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"10858:5:12","nodeType":"VariableDeclaration","scope":1851,"src":"10850:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"10850:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10828:36:12"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1851,"src":"10883:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1838,"name":"bool","nodeType":"ElementaryTypeName","src":"10883:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10882:6:12"},"scope":1939,"src":"10813:135:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"11112:61:12","statements":[{"expression":{"arguments":[{"expression":{"id":1863,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"11139:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1808,"src":"11139:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"11159:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11151:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11151:7:12","typeDescriptions":{}}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11151:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1862,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"11129:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11129:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1861,"id":1870,"nodeType":"Return","src":"11122:44:12"}]},"documentation":{"id":1852,"nodeType":"StructuredDocumentation","src":"10954:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11038:8:12","nodeType":"FunctionDefinition","parameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"set","nameLocation":"11063:3:12","nodeType":"VariableDeclaration","scope":1872,"src":"11047:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1854,"nodeType":"UserDefinedTypeName","pathNode":{"id":1853,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1809,"src":"11047:7:12"},"referencedDeclaration":1809,"src":"11047:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"value","nameLocation":"11076:5:12","nodeType":"VariableDeclaration","scope":1872,"src":"11068:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"11068:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11046:36:12"},"returnParameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"11106:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1859,"name":"bool","nodeType":"ElementaryTypeName","src":"11106:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11105:6:12"},"scope":1939,"src":"11029:144:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1886,"nodeType":"Block","src":"11323:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":1882,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"11348:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1808,"src":"11348:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1881,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"11340:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11340:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1880,"id":1885,"nodeType":"Return","src":"11333:26:12"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"11179:70:12","text":" @dev Returns the number of values on the set. O(1)."},"id":1887,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11263:6:12","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"set","nameLocation":"11286:3:12","nodeType":"VariableDeclaration","scope":1887,"src":"11270:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1875,"nodeType":"UserDefinedTypeName","pathNode":{"id":1874,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1809,"src":"11270:7:12"},"referencedDeclaration":1809,"src":"11270:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11269:21:12"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1887,"src":"11314:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:9:12"},"scope":1939,"src":"11254:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1907,"nodeType":"Block","src":"11788:55:12","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1901,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"11817:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1808,"src":"11817:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1903,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"11829:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1900,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"11813:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11813:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11805:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"11805:7:12","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11805:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1897,"id":1906,"nodeType":"Return","src":"11798:38:12"}]},"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"11372:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1908,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11717:2:12","nodeType":"FunctionDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"set","nameLocation":"11736:3:12","nodeType":"VariableDeclaration","scope":1908,"src":"11720:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1890,"nodeType":"UserDefinedTypeName","pathNode":{"id":1889,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1809,"src":"11720:7:12"},"referencedDeclaration":1809,"src":"11720:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"index","nameLocation":"11749:5:12","nodeType":"VariableDeclaration","scope":1908,"src":"11741:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"11741:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11719:36:12"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1908,"src":"11779:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"11779:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11778:9:12"},"scope":1939,"src":"11708:135:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1937,"nodeType":"Block","src":"12461:219:12","statements":[{"assignments":[1922],"declarations":[{"constant":false,"id":1922,"mutability":"mutable","name":"store","nameLocation":"12488:5:12","nodeType":"VariableDeclaration","scope":1937,"src":"12471:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12471:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1921,"nodeType":"ArrayTypeName","src":"12471:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1927,"initialValue":{"arguments":[{"expression":{"id":1924,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"12504:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1808,"src":"12504:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1351_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1923,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"12496:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1351_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12496:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12471:44:12"},{"assignments":[1932],"declarations":[{"constant":false,"id":1932,"mutability":"mutable","name":"result","nameLocation":"12542:6:12","nodeType":"VariableDeclaration","scope":1937,"src":"12525:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"12525:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1931,"nodeType":"ArrayTypeName","src":"12525:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1933,"nodeType":"VariableDeclarationStatement","src":"12525:23:12"},{"AST":{"nodeType":"YulBlock","src":"12611:39:12","statements":[{"nodeType":"YulAssignment","src":"12625:15:12","value":{"name":"store","nodeType":"YulIdentifier","src":"12635:5:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12625:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1932,"isOffset":false,"isSlot":false,"src":"12625:6:12","valueSize":1},{"declaration":1922,"isOffset":false,"isSlot":false,"src":"12635:5:12","valueSize":1}],"id":1934,"nodeType":"InlineAssembly","src":"12602:48:12"},{"expression":{"id":1935,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"12667:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1917,"id":1936,"nodeType":"Return","src":"12660:13:12"}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"11849:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1938,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12392:6:12","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"set","nameLocation":"12415:3:12","nodeType":"VariableDeclaration","scope":1938,"src":"12399:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1911,"nodeType":"UserDefinedTypeName","pathNode":{"id":1910,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1809,"src":"12399:7:12"},"referencedDeclaration":1809,"src":"12399:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1809_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12398:21:12"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1938,"src":"12443:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"12443:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ArrayTypeName","src":"12443:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12442:18:12"},"scope":1939,"src":"12383:297:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1940,"src":"1228:11454:12","usedErrors":[]}],"src":"115:12568:12"},"id":12},"contracts/Store.sol":{"ast":{"absolutePath":"contracts/Store.sol","exportedSymbols":{"Address":[1306],"AddressUpgradeable":[316],"Context":[1328],"EnumerableSet":[1939],"IERC165":[1340],"IERC20":[547],"IERC20Permit":[583],"IERC721":[980],"IERC721Enumerable":[1011],"INFT":[2551],"Initializable":[73],"Ownable":[429],"ReentrancyGuard":[469],"SafeERC20":[864],"Store":[2533]},"id":2534,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1941,"literals":["solidity","0.8",".9"],"nodeType":"PragmaDirective","src":"33:22:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1942,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2534,"sourceUnit":548,"src":"59:56:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":1943,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2534,"sourceUnit":470,"src":"117:62:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1944,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2534,"sourceUnit":865,"src":"181:65:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2534,"sourceUnit":430,"src":"248:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":1946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2534,"sourceUnit":74,"src":"302:75:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":1947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2534,"sourceUnit":1940,"src":"379:65:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/INFT.sol","file":"./interfaces/INFT.sol","id":1948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2534,"sourceUnit":2552,"src":"448:31:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1949,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":469,"src":"501:15:13"},"id":1950,"nodeType":"InheritanceSpecifier","src":"501:15:13"},{"baseName":{"id":1951,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"518:7:13"},"id":1952,"nodeType":"InheritanceSpecifier","src":"518:7:13"},{"baseName":{"id":1953,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":73,"src":"527:13:13"},"id":1954,"nodeType":"InheritanceSpecifier","src":"527:13:13"}],"canonicalName":"Store","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2533,"linearizedBaseContracts":[2533,73,429,1328,469],"name":"Store","nameLocation":"492:5:13","nodeType":"ContractDefinition","nodes":[{"id":1958,"libraryName":{"id":1955,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"553:9:13"},"nodeType":"UsingForDirective","src":"547:27:13","typeName":{"id":1957,"nodeType":"UserDefinedTypeName","pathNode":{"id":1956,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":547,"src":"567:6:13"},"referencedDeclaration":547,"src":"567:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$547","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"5d6297c2","id":1960,"mutability":"mutable","name":"shirtNFTAddress","nameLocation":"597:15:13","nodeType":"VariableDeclaration","scope":2533,"src":"582:30:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1959,"name":"address","nodeType":"ElementaryTypeName","src":"582:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"4abaf07e","id":1962,"mutability":"mutable","name":"shippingFee","nameLocation":"636:11:13","nodeType":"VariableDeclaration","scope":2533,"src":"621:26:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"621:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9e7c11a5","id":1964,"mutability":"mutable","name":"eachShirtFee","nameLocation":"669:12:13","nodeType":"VariableDeclaration","scope":2533,"src":"654:27:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"654:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"89bd3beb","id":1966,"mutability":"mutable","name":"percentRoyaltyFee","nameLocation":"704:17:13","nodeType":"VariableDeclaration","scope":2533,"src":"689:32:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"689:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"id":1969,"mutability":"constant","name":"PERCENT_BASIS_POINT","nameLocation":"745:19:13","nodeType":"VariableDeclaration","scope":2533,"src":"728:44:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"767:5:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"isWhitelistNFT","nameLocation":"807:14:13","nodeType":"VariableDeclaration","scope":2533,"src":"781:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1972,"keyType":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"781:25:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1971,"name":"bool","nodeType":"ElementaryTypeName","src":"801:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"ownerOfNFT","nameLocation":"857:10:13","nodeType":"VariableDeclaration","scope":2533,"src":"828:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1976,"keyType":{"id":1974,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"828:28:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1975,"name":"address","nodeType":"ElementaryTypeName","src":"848:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"canonicalName":"Store.Shirt","id":1988,"members":[{"constant":false,"id":1980,"mutability":"mutable","name":"originalNFTs","nameLocation":"909:12:13","nodeType":"VariableDeclaration","scope":1988,"src":"899:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1978,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1979,"nodeType":"ArrayTypeName","src":"899:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1983,"mutability":"mutable","name":"originalTokenIds","nameLocation":"942:16:13","nodeType":"VariableDeclaration","scope":1988,"src":"932:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1982,"nodeType":"ArrayTypeName","src":"932:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"buyer","nameLocation":"977:5:13","nodeType":"VariableDeclaration","scope":1988,"src":"969:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"shirtTokenId","nameLocation":"1001:12:13","nodeType":"VariableDeclaration","scope":1988,"src":"993:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Shirt","nameLocation":"883:5:13","nodeType":"StructDefinition","scope":2533,"src":"876:145:13","visibility":"public"},{"constant":false,"id":1990,"mutability":"mutable","name":"_shirtTokenId","nameLocation":"1045:13:13","nodeType":"VariableDeclaration","scope":2533,"src":"1029:29:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1995,"mutability":"mutable","name":"indexToShirt","nameLocation":"1101:12:13","nodeType":"VariableDeclaration","scope":2533,"src":"1065:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Shirt_$1988_storage_$","typeString":"mapping(uint256 => struct Store.Shirt)"},"typeName":{"id":1994,"keyType":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1074:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1065:26:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Shirt_$1988_storage_$","typeString":"mapping(uint256 => struct Store.Shirt)"},"valueType":{"id":1993,"nodeType":"UserDefinedTypeName","pathNode":{"id":1992,"name":"Shirt","nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"1085:5:13"},"referencedDeclaration":1988,"src":"1085:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Shirt_$1988_storage_ptr","typeString":"struct Store.Shirt"}}},"visibility":"private"},{"constant":false,"id":2000,"mutability":"mutable","name":"buyerToShirtIndexs","nameLocation":"1159:18:13","nodeType":"VariableDeclaration","scope":2533,"src":"1120:57:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":1999,"keyType":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1120:30:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueType":{"baseType":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1140:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1998,"nodeType":"ArrayTypeName","src":"1140:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"private"},{"constant":false,"id":2004,"mutability":"mutable","name":"balances","nameLocation":"1226:8:13","nodeType":"VariableDeclaration","scope":2533,"src":"1189:45:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2003,"keyType":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"1198:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1189:28:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1209:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"anonymous":false,"id":2016,"name":"ShirtCreated","nameLocation":"1293:12:13","nodeType":"EventDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"indexed":false,"mutability":"mutable","name":"nftAddresses","nameLocation":"1316:12:13","nodeType":"VariableDeclaration","scope":2016,"src":"1306:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2005,"name":"address","nodeType":"ElementaryTypeName","src":"1306:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2006,"nodeType":"ArrayTypeName","src":"1306:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2010,"indexed":false,"mutability":"mutable","name":"tokenIds","nameLocation":"1340:8:13","nodeType":"VariableDeclaration","scope":2016,"src":"1330:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1330:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2009,"nodeType":"ArrayTypeName","src":"1330:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2012,"indexed":false,"mutability":"mutable","name":"buyer","nameLocation":"1358:5:13","nodeType":"VariableDeclaration","scope":2016,"src":"1350:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2011,"name":"address","nodeType":"ElementaryTypeName","src":"1350:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2014,"indexed":false,"mutability":"mutable","name":"shirtTokenId","nameLocation":"1373:12:13","nodeType":"VariableDeclaration","scope":2016,"src":"1365:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1305:81:13"},"src":"1287:100:13"},{"anonymous":false,"id":2022,"name":"NFTWhitelistStatusChanged","nameLocation":"1399:25:13","nodeType":"EventDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"indexed":false,"mutability":"mutable","name":"nftAddress","nameLocation":"1433:10:13","nodeType":"VariableDeclaration","scope":2022,"src":"1425:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2020,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"1450:6:13","nodeType":"VariableDeclaration","scope":2022,"src":"1445:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2019,"name":"bool","nodeType":"ElementaryTypeName","src":"1445:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1424:33:13"},"src":"1393:65:13"},{"anonymous":false,"id":2028,"name":"NFTOwnerChanged","nameLocation":"1470:15:13","nodeType":"EventDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"indexed":false,"mutability":"mutable","name":"nftAddress","nameLocation":"1494:10:13","nodeType":"VariableDeclaration","scope":2028,"src":"1486:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2026,"indexed":false,"mutability":"mutable","name":"nftOwnerAddress","nameLocation":"1514:15:13","nodeType":"VariableDeclaration","scope":2028,"src":"1506:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2025,"name":"address","nodeType":"ElementaryTypeName","src":"1506:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1485:45:13"},"src":"1464:67:13"},{"body":{"id":2057,"nodeType":"Block","src":"1710:166:13","statements":[{"expression":{"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2041,"name":"shirtNFTAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1721:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2042,"name":"_nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1739:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1721:22:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2044,"nodeType":"ExpressionStatement","src":"1721:22:13"},{"expression":{"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2045,"name":"shippingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1754:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2046,"name":"_shippingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"1768:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1754:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2048,"nodeType":"ExpressionStatement","src":"1754:26:13"},{"expression":{"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2049,"name":"eachShirtFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1791:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2050,"name":"_eachShirtFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"1806:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1791:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2052,"nodeType":"ExpressionStatement","src":"1791:28:13"},{"expression":{"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2053,"name":"percentRoyaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"1830:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2054,"name":"_percentRoyaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"1850:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2056,"nodeType":"ExpressionStatement","src":"1830:38:13"}]},"functionSelector":"4ec81af1","id":2058,"implemented":true,"kind":"function","modifiers":[{"id":2039,"kind":"modifierInvocation","modifierName":{"id":2038,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":47,"src":"1699:11:13"},"nodeType":"ModifierInvocation","src":"1699:11:13"}],"name":"initialize","nameLocation":"1594:10:13","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"_nft","nameLocation":"1613:4:13","nodeType":"VariableDeclaration","scope":2058,"src":"1605:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"1605:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"_shippingFee","nameLocation":"1627:12:13","nodeType":"VariableDeclaration","scope":2058,"src":"1619:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1619:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"_eachShirtFee","nameLocation":"1649:13:13","nodeType":"VariableDeclaration","scope":2058,"src":"1641:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1641:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"_percentRoyaltyFee","nameLocation":"1672:18:13","nodeType":"VariableDeclaration","scope":2058,"src":"1664:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1664:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1604:87:13"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[],"src":"1710:0:13"},"scope":2533,"src":"1585:291:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2069,"nodeType":"Block","src":"1951:53:13","statements":[{"expression":{"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2065,"name":"shirtNFTAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1962:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2066,"name":"_shirtNFTAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"1980:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1962:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2068,"nodeType":"ExpressionStatement","src":"1962:34:13"}]},"functionSelector":"69d03738","id":2070,"implemented":true,"kind":"function","modifiers":[{"id":2063,"kind":"modifierInvocation","modifierName":{"id":2062,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"1942:9:13"},"nodeType":"ModifierInvocation","src":"1942:9:13"}],"name":"setNFTAddress","nameLocation":"1893:13:13","nodeType":"FunctionDefinition","parameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"_shirtNFTAddress","nameLocation":"1915:16:13","nodeType":"VariableDeclaration","scope":2070,"src":"1907:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1906:26:13"},"returnParameters":{"id":2064,"nodeType":"ParameterList","parameters":[],"src":"1951:0:13"},"scope":2533,"src":"1884:120:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2081,"nodeType":"Block","src":"2076:45:13","statements":[{"expression":{"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2077,"name":"shippingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"2087:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2078,"name":"_shippingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"2101:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2087:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2080,"nodeType":"ExpressionStatement","src":"2087:26:13"}]},"functionSelector":"d3ac1e4a","id":2082,"implemented":true,"kind":"function","modifiers":[{"id":2075,"kind":"modifierInvocation","modifierName":{"id":2074,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"2067:9:13"},"nodeType":"ModifierInvocation","src":"2067:9:13"}],"name":"setShippingFee","nameLocation":"2021:14:13","nodeType":"FunctionDefinition","parameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"_shippingFee","nameLocation":"2044:12:13","nodeType":"VariableDeclaration","scope":2082,"src":"2036:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"2036:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2035:22:13"},"returnParameters":{"id":2076,"nodeType":"ParameterList","parameters":[],"src":"2076:0:13"},"scope":2533,"src":"2012:109:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2093,"nodeType":"Block","src":"2195:47:13","statements":[{"expression":{"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2089,"name":"eachShirtFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"2206:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2090,"name":"_eachShirtFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"2221:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2206:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2092,"nodeType":"ExpressionStatement","src":"2206:28:13"}]},"functionSelector":"59f7963d","id":2094,"implemented":true,"kind":"function","modifiers":[{"id":2087,"kind":"modifierInvocation","modifierName":{"id":2086,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"2186:9:13"},"nodeType":"ModifierInvocation","src":"2186:9:13"}],"name":"setEachShirtFee","nameLocation":"2138:15:13","nodeType":"FunctionDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"_eachShirtFee","nameLocation":"2162:13:13","nodeType":"VariableDeclaration","scope":2094,"src":"2154:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"2154:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2153:23:13"},"returnParameters":{"id":2088,"nodeType":"ParameterList","parameters":[],"src":"2195:0:13"},"scope":2533,"src":"2129:113:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2105,"nodeType":"Block","src":"2326:57:13","statements":[{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2101,"name":"percentRoyaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2337:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2102,"name":"_percentRoyaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"2357:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2337:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"nodeType":"ExpressionStatement","src":"2337:38:13"}]},"functionSelector":"ccf99a6e","id":2106,"implemented":true,"kind":"function","modifiers":[{"id":2099,"kind":"modifierInvocation","modifierName":{"id":2098,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"2317:9:13"},"nodeType":"ModifierInvocation","src":"2317:9:13"}],"name":"setPercentRoyaltyFee","nameLocation":"2259:20:13","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"_percentRoyaltyFee","nameLocation":"2288:18:13","nodeType":"VariableDeclaration","scope":2106,"src":"2280:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"2280:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2279:28:13"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[],"src":"2326:0:13"},"scope":2533,"src":"2250:133:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2158,"nodeType":"Block","src":"2492:306:13","statements":[{"assignments":[2118],"declarations":[{"constant":false,"id":2118,"mutability":"mutable","name":"_length","nameLocation":"2511:7:13","nodeType":"VariableDeclaration","scope":2158,"src":"2503:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2503:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2121,"initialValue":{"expression":{"id":2119,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2521:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2521:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2503:38:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2123,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2560:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2124,"name":"_nftOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2571:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2571:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2560:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c656e677468","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2590:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""},"value":"Invalid length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""}],"id":2122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2552:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2552:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2129,"nodeType":"ExpressionStatement","src":"2552:55:13"},{"body":{"id":2156,"nodeType":"Block","src":"2655:136:13","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2141,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2696:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2143,"indexExpression":{"id":2142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2710:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2696:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2714:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2140,"name":"_changeNFTWhitelistStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"2670:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2670:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2146,"nodeType":"ExpressionStatement","src":"2670:49:13"},{"expression":{"arguments":[{"baseExpression":{"id":2148,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2747:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2150,"indexExpression":{"id":2149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2761:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2747:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2151,"name":"_nftOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2765:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2153,"indexExpression":{"id":2152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2776:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2765:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2147,"name":"_setNFTOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"2734:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2734:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2155,"nodeType":"ExpressionStatement","src":"2734:45:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2134,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2638:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2135,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2642:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2638:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2157,"initializationExpression":{"assignments":[2131],"declarations":[{"constant":false,"id":2131,"mutability":"mutable","name":"i","nameLocation":"2631:1:13","nodeType":"VariableDeclaration","scope":2157,"src":"2623:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"2623:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2133,"initialValue":{"hexValue":"30","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2635:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2623:13:13"},"loopExpression":{"expression":{"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2651:3:13","subExpression":{"id":2137,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2651:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2139,"nodeType":"ExpressionStatement","src":"2651:3:13"},"nodeType":"ForStatement","src":"2618:173:13"}]},"functionSelector":"136a743c","id":2159,"implemented":true,"kind":"function","modifiers":[{"id":2115,"kind":"modifierInvocation","modifierName":{"id":2114,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"2483:9:13"},"nodeType":"ModifierInvocation","src":"2483:9:13"}],"name":"whitelistNFT","nameLocation":"2400:12:13","nodeType":"FunctionDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"_nftAddresses","nameLocation":"2430:13:13","nodeType":"VariableDeclaration","scope":2159,"src":"2413:30:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2107,"name":"address","nodeType":"ElementaryTypeName","src":"2413:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2108,"nodeType":"ArrayTypeName","src":"2413:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2112,"mutability":"mutable","name":"_nftOwners","nameLocation":"2462:10:13","nodeType":"VariableDeclaration","scope":2159,"src":"2445:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2110,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2111,"nodeType":"ArrayTypeName","src":"2445:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2412:61:13"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"2492:0:13"},"scope":2533,"src":"2391:407:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2218,"nodeType":"Block","src":"2913:345:13","statements":[{"assignments":[2171],"declarations":[{"constant":false,"id":2171,"mutability":"mutable","name":"_length","nameLocation":"2932:7:13","nodeType":"VariableDeclaration","scope":2218,"src":"2924:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2174,"initialValue":{"expression":{"id":2172,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"2942:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2942:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2924:38:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2176,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"2981:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2177,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2992:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2992:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2981:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c656e677468","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3008:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""},"value":"Invalid length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""}],"id":2175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2973:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2973:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2182,"nodeType":"ExpressionStatement","src":"2973:52:13"},{"body":{"id":2216,"nodeType":"Block","src":"3073:178:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2194,"name":"ownerOfNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"3096:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2198,"indexExpression":{"baseExpression":{"id":2195,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"3107:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2197,"indexExpression":{"id":2196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"3121:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3107:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3096:28:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3136:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3128:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"3128:7:13","typeDescriptions":{}}},"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3128:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3096:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4654204f776e657220686173206e6f74206265656e20736574","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3140:28:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7979e3b12d07033d039322ebf8b023a9cefc4db0df47eddf703bee910079cda9","typeString":"literal_string \"NFT Owner has not been set\""},"value":"NFT Owner has not been set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7979e3b12d07033d039322ebf8b023a9cefc4db0df47eddf703bee910079cda9","typeString":"literal_string \"NFT Owner has not been set\""}],"id":2193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3088:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3088:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2206,"nodeType":"ExpressionStatement","src":"3088:81:13"},{"expression":{"arguments":[{"baseExpression":{"id":2208,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"3210:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2210,"indexExpression":{"id":2209,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"3224:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3210:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2211,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3228:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2213,"indexExpression":{"id":2212,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"3236:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3228:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2207,"name":"_changeNFTWhitelistStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"3184:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3184:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2215,"nodeType":"ExpressionStatement","src":"3184:55:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"3056:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2188,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3060:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3056:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2217,"initializationExpression":{"assignments":[2184],"declarations":[{"constant":false,"id":2184,"mutability":"mutable","name":"i","nameLocation":"3049:1:13","nodeType":"VariableDeclaration","scope":2217,"src":"3041:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2186,"initialValue":{"hexValue":"30","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3053:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3041:13:13"},"loopExpression":{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3069:3:13","subExpression":{"id":2190,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"3069:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2192,"nodeType":"ExpressionStatement","src":"3069:3:13"},"nodeType":"ForStatement","src":"3036:215:13"}]},"functionSelector":"7719bc7b","id":2219,"implemented":true,"kind":"function","modifiers":[{"id":2168,"kind":"modifierInvocation","modifierName":{"id":2167,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"2904:9:13"},"nodeType":"ModifierInvocation","src":"2904:9:13"}],"name":"changeNFTWhitelistStatus","nameLocation":"2815:24:13","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"_nftAddresses","nameLocation":"2857:13:13","nodeType":"VariableDeclaration","scope":2219,"src":"2840:30:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"2840:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2161,"nodeType":"ArrayTypeName","src":"2840:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"_status","nameLocation":"2886:7:13","nodeType":"VariableDeclaration","scope":2219,"src":"2872:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2163,"name":"bool","nodeType":"ElementaryTypeName","src":"2872:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2164,"nodeType":"ArrayTypeName","src":"2872:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2839:55:13"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[],"src":"2913:0:13"},"scope":2533,"src":"2806:452:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2264,"nodeType":"Block","src":"3365:242:13","statements":[{"assignments":[2231],"declarations":[{"constant":false,"id":2231,"mutability":"mutable","name":"_length","nameLocation":"3384:7:13","nodeType":"VariableDeclaration","scope":2264,"src":"3376:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2234,"initialValue":{"expression":{"id":2232,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"3394:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3394:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3376:38:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"3433:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2237,"name":"_nftOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"3444:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3444:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3433:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c656e677468","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3463:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""},"value":"Invalid length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""}],"id":2235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3425:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3425:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2242,"nodeType":"ExpressionStatement","src":"3425:55:13"},{"body":{"id":2262,"nodeType":"Block","src":"3528:72:13","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2254,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"3556:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2256,"indexExpression":{"id":2255,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3570:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3556:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2257,"name":"_nftOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"3574:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2259,"indexExpression":{"id":2258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3585:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3574:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2253,"name":"_setNFTOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"3543:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3543:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2261,"nodeType":"ExpressionStatement","src":"3543:45:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2247,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3511:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2248,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"3515:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3511:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2263,"initializationExpression":{"assignments":[2244],"declarations":[{"constant":false,"id":2244,"mutability":"mutable","name":"i","nameLocation":"3504:1:13","nodeType":"VariableDeclaration","scope":2263,"src":"3496:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3496:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2246,"initialValue":{"hexValue":"30","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3508:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3496:13:13"},"loopExpression":{"expression":{"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3524:3:13","subExpression":{"id":2250,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3524:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2252,"nodeType":"ExpressionStatement","src":"3524:3:13"},"nodeType":"ForStatement","src":"3491:109:13"}]},"functionSelector":"1cc88bcd","id":2265,"implemented":true,"kind":"function","modifiers":[{"id":2228,"kind":"modifierInvocation","modifierName":{"id":2227,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":348,"src":"3356:9:13"},"nodeType":"ModifierInvocation","src":"3356:9:13"}],"name":"setNFTOwner","nameLocation":"3275:11:13","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"_nftAddresses","nameLocation":"3304:13:13","nodeType":"VariableDeclaration","scope":2265,"src":"3287:30:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2220,"name":"address","nodeType":"ElementaryTypeName","src":"3287:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2221,"nodeType":"ArrayTypeName","src":"3287:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2225,"mutability":"mutable","name":"_nftOwners","nameLocation":"3336:10:13","nodeType":"VariableDeclaration","scope":2265,"src":"3319:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2223,"name":"address","nodeType":"ElementaryTypeName","src":"3319:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2224,"nodeType":"ArrayTypeName","src":"3319:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3286:61:13"},"returnParameters":{"id":2229,"nodeType":"ParameterList","parameters":[],"src":"3365:0:13"},"scope":2533,"src":"3266:341:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2283,"nodeType":"Block","src":"3693:119:13","statements":[{"expression":{"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2272,"name":"isWhitelistNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"3704:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2274,"indexExpression":{"id":2273,"name":"_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"3719:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3704:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2275,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"3734:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3704:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2277,"nodeType":"ExpressionStatement","src":"3704:37:13"},{"eventCall":{"arguments":[{"id":2279,"name":"_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"3783:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2280,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"3796:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2278,"name":"NFTWhitelistStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"3757:25:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3757:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2282,"nodeType":"EmitStatement","src":"3752:52:13"}]},"id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"_changeNFTWhitelistStatus","nameLocation":"3624:25:13","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"_nftAddress","nameLocation":"3658:11:13","nodeType":"VariableDeclaration","scope":2284,"src":"3650:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2266,"name":"address","nodeType":"ElementaryTypeName","src":"3650:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"_status","nameLocation":"3676:7:13","nodeType":"VariableDeclaration","scope":2284,"src":"3671:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2268,"name":"bool","nodeType":"ElementaryTypeName","src":"3671:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3649:35:13"},"returnParameters":{"id":2271,"nodeType":"ParameterList","parameters":[],"src":"3693:0:13"},"scope":2533,"src":"3615:197:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2302,"nodeType":"Block","src":"3890:109:13","statements":[{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2291,"name":"ownerOfNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"3901:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2293,"indexExpression":{"id":2292,"name":"_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"3912:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3901:23:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2294,"name":"_nftOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"3927:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3901:35:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2296,"nodeType":"ExpressionStatement","src":"3901:35:13"},{"eventCall":{"arguments":[{"id":2298,"name":"_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"3968:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2299,"name":"_nftOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"3981:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2297,"name":"NFTOwnerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"3952:15:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3952:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2301,"nodeType":"EmitStatement","src":"3947:44:13"}]},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"_setNFTOwner","nameLocation":"3829:12:13","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"_nftAddress","nameLocation":"3850:11:13","nodeType":"VariableDeclaration","scope":2303,"src":"3842:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2285,"name":"address","nodeType":"ElementaryTypeName","src":"3842:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"_nftOwner","nameLocation":"3871:9:13","nodeType":"VariableDeclaration","scope":2303,"src":"3863:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"3863:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3841:40:13"},"returnParameters":{"id":2290,"nodeType":"ParameterList","parameters":[],"src":"3890:0:13"},"scope":2533,"src":"3820:179:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2368,"nodeType":"Block","src":"4174:426:13","statements":[{"assignments":[2317],"declarations":[{"constant":false,"id":2317,"mutability":"mutable","name":"_numberOfShirt","nameLocation":"4193:14:13","nodeType":"VariableDeclaration","scope":2368,"src":"4185:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"4185:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2320,"initialValue":{"expression":{"id":2318,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"4210:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[] memory[] memory"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4210:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4185:45:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2322,"name":"_numberOfShirt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"4249:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2323,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"4267:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4267:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4249:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c656e677468","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4285:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""},"value":"Invalid length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""}],"id":2321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4241:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4241:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2328,"nodeType":"ExpressionStatement","src":"4241:61:13"},{"assignments":[2330],"declarations":[{"constant":false,"id":2330,"mutability":"mutable","name":"_numberOfNFT","nameLocation":"4321:12:13","nodeType":"VariableDeclaration","scope":2368,"src":"4313:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"4313:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2332,"initialValue":{"hexValue":"30","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4336:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4313:24:13"},{"body":{"id":2350,"nodeType":"Block","src":"4392:66:13","statements":[{"expression":{"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2343,"name":"_numberOfNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"4407:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":2344,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"4423:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[] memory[] memory"}},"id":2346,"indexExpression":{"id":2345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"4437:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4423:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4423:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4407:39:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2349,"nodeType":"ExpressionStatement","src":"4407:39:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2337,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"4368:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2338,"name":"_numberOfShirt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"4372:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4368:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2351,"initializationExpression":{"assignments":[2334],"declarations":[{"constant":false,"id":2334,"mutability":"mutable","name":"i","nameLocation":"4361:1:13","nodeType":"VariableDeclaration","scope":2351,"src":"4353:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"4353:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2336,"initialValue":{"hexValue":"30","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4365:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4353:13:13"},"loopExpression":{"expression":{"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4388:3:13","subExpression":{"id":2340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"4388:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2342,"nodeType":"ExpressionStatement","src":"4388:3:13"},"nodeType":"ForStatement","src":"4348:110:13"},{"expression":{"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2352,"name":"cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"4468:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"_numberOfShirt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"4475:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2354,"name":"eachShirtFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"4492:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4475:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"_numberOfShirt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"4507:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2357,"name":"eachShirtFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"4524:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4507:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2359,"name":"percentRoyaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"4539:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4507:49:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2361,"name":"PERCENT_BASIS_POINT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"4559:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4507:71:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4475:103:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2364,"name":"shippingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"4581:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4475:117:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4468:124:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2367,"nodeType":"ExpressionStatement","src":"4468:124:13"}]},"functionSelector":"4a59c50d","id":2369,"implemented":true,"kind":"function","modifiers":[],"name":"estimateCost","nameLocation":"4064:12:13","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"_nftAddresses","nameLocation":"4096:13:13","nodeType":"VariableDeclaration","scope":2369,"src":"4077:32:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[][]"},"typeName":{"baseType":{"baseType":{"id":2304,"name":"address","nodeType":"ElementaryTypeName","src":"4077:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2305,"nodeType":"ArrayTypeName","src":"4077:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"id":2306,"nodeType":"ArrayTypeName","src":"4077:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr","typeString":"address[][]"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"_tokenIds","nameLocation":"4130:9:13","nodeType":"VariableDeclaration","scope":2369,"src":"4111:28:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"4111:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2309,"nodeType":"ArrayTypeName","src":"4111:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2310,"nodeType":"ArrayTypeName","src":"4111:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"4076:64:13"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"cost","nameLocation":"4169:4:13","nodeType":"VariableDeclaration","scope":2369,"src":"4161:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"4161:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4160:14:13"},"scope":2533,"src":"4055:545:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2469,"nodeType":"Block","src":"4760:697:13","statements":[{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"_numberOfShirt","nameLocation":"4779:14:13","nodeType":"VariableDeclaration","scope":2469,"src":"4771:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"4771:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2384,"initialValue":{"expression":{"id":2382,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"4796:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[] memory[] memory"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4796:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4771:45:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"_numberOfShirt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"4836:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2387,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"4854:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4854:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4836:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c656e677468","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4872:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""},"value":"Invalid length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""}],"id":2385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4827:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4827:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2392,"nodeType":"ExpressionStatement","src":"4827:62:13"},{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"cost","nameLocation":"4918:4:13","nodeType":"VariableDeclaration","scope":2469,"src":"4910:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"4910:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2399,"initialValue":{"arguments":[{"id":2396,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"4938:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[] memory[] memory"}},{"id":2397,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"4953:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[] memory[] memory"},{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}],"id":2395,"name":"estimateCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"4925:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address[] memory[] memory,uint256[] memory[] memory) view returns (uint256)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4925:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4910:53:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2401,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4982:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"4982:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2403,"name":"cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"4995:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4982:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57726f6e672076616c7565","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5001:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d","typeString":"literal_string \"Wrong value\""},"value":"Wrong value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d","typeString":"literal_string \"Wrong value\""}],"id":2400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4974:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4974:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2407,"nodeType":"ExpressionStatement","src":"4974:41:13"},{"body":{"id":2467,"nodeType":"Block","src":"5073:377:13","statements":[{"assignments":[2419],"declarations":[{"constant":false,"id":2419,"mutability":"mutable","name":"_numberOfNFTs","nameLocation":"5096:13:13","nodeType":"VariableDeclaration","scope":2467,"src":"5088:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"5088:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2424,"initialValue":{"expression":{"baseExpression":{"id":2420,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"5112:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[] memory[] memory"}},"id":2422,"indexExpression":{"id":2421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"5126:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5112:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5112:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5088:47:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2426,"name":"_numberOfNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"5158:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":2427,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"5175:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":2429,"indexExpression":{"id":2428,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"5185:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5175:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5175:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5158:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c656e677468","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5196:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""},"value":"Invalid length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7","typeString":"literal_string \"Invalid length\""}],"id":2425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5150:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5150:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2434,"nodeType":"ExpressionStatement","src":"5150:63:13"},{"body":{"id":2456,"nodeType":"Block","src":"5270:111:13","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2446,"name":"isWhitelistNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"5297:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2452,"indexExpression":{"baseExpression":{"baseExpression":{"id":2447,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"5312:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[] memory[] memory"}},"id":2449,"indexExpression":{"id":2448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"5326:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5312:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2451,"indexExpression":{"id":2450,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5329:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5312:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5297:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e465420686173206e6f74206265656e2077686974656c6973746564","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5334:30:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d40c304804677979b02ddb540cd84bf11c81490088b00be94027707c4cb69ab9","typeString":"literal_string \"NFT has not been whitelisted\""},"value":"NFT has not been whitelisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d40c304804677979b02ddb540cd84bf11c81490088b00be94027707c4cb69ab9","typeString":"literal_string \"NFT has not been whitelisted\""}],"id":2445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5289:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5289:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2455,"nodeType":"ExpressionStatement","src":"5289:76:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5247:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2440,"name":"_numberOfNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"5251:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5247:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2457,"initializationExpression":{"assignments":[2436],"declarations":[{"constant":false,"id":2436,"mutability":"mutable","name":"j","nameLocation":"5240:1:13","nodeType":"VariableDeclaration","scope":2457,"src":"5232:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"5232:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2438,"initialValue":{"hexValue":"30","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5244:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5232:13:13"},"loopExpression":{"expression":{"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5266:3:13","subExpression":{"id":2442,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5266:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2444,"nodeType":"ExpressionStatement","src":"5266:3:13"},"nodeType":"ForStatement","src":"5228:153:13"},{"expression":{"arguments":[{"baseExpression":{"id":2459,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"5407:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[] memory[] memory"}},"id":2461,"indexExpression":{"id":2460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"5421:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5407:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"baseExpression":{"id":2462,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"5425:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":2464,"indexExpression":{"id":2463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"5435:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5425:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2458,"name":"_buyShirt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"5397:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,uint256[] memory)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5397:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2466,"nodeType":"ExpressionStatement","src":"5397:41:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2412,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"5048:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2413,"name":"_numberOfShirt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"5052:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5048:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2468,"initializationExpression":{"assignments":[2409],"declarations":[{"constant":false,"id":2409,"mutability":"mutable","name":"i","nameLocation":"5041:1:13","nodeType":"VariableDeclaration","scope":2468,"src":"5033:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"5033:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2411,"initialValue":{"hexValue":"30","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5045:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5033:13:13"},"loopExpression":{"expression":{"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5069:3:13","subExpression":{"id":2415,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"5069:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2417,"nodeType":"ExpressionStatement","src":"5069:3:13"},"nodeType":"ForStatement","src":"5028:422:13"}]},"functionSelector":"44ed1fa4","id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"buyShirt","nameLocation":"4671:8:13","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"_nftAddresses","nameLocation":"4699:13:13","nodeType":"VariableDeclaration","scope":2470,"src":"4680:32:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[][]"},"typeName":{"baseType":{"baseType":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"4680:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2371,"nodeType":"ArrayTypeName","src":"4680:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"id":2372,"nodeType":"ArrayTypeName","src":"4680:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr","typeString":"address[][]"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"_tokenIds","nameLocation":"4733:9:13","nodeType":"VariableDeclaration","scope":2470,"src":"4714:28:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"4714:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2375,"nodeType":"ArrayTypeName","src":"4714:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2376,"nodeType":"ArrayTypeName","src":"4714:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"4679:64:13"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[],"src":"4760:0:13"},"scope":2533,"src":"4662:795:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2531,"nodeType":"Block","src":"5554:458:13","statements":[{"assignments":[2481],"declarations":[{"constant":false,"id":2481,"mutability":"mutable","name":"newShirt","nameLocation":"5588:8:13","nodeType":"VariableDeclaration","scope":2531,"src":"5575:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Shirt_$1988_memory_ptr","typeString":"struct Store.Shirt"},"typeName":{"id":2480,"nodeType":"UserDefinedTypeName","pathNode":{"id":2479,"name":"Shirt","nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"5575:5:13"},"referencedDeclaration":1988,"src":"5575:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Shirt_$1988_storage_ptr","typeString":"struct Store.Shirt"}},"visibility":"internal"}],"id":2489,"initialValue":{"arguments":[{"id":2483,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"5605:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2484,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"5620:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2485,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5631:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5631:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2487,"name":"_shirtTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"5643:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2482,"name":"Shirt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"5599:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Shirt_$1988_storage_ptr_$","typeString":"type(struct Store.Shirt storage pointer)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5599:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Shirt_$1988_memory_ptr","typeString":"struct Store.Shirt memory"}},"nodeType":"VariableDeclarationStatement","src":"5575:82:13"},{"assignments":[2491],"declarations":[{"constant":false,"id":2491,"mutability":"mutable","name":"minted","nameLocation":"5673:6:13","nodeType":"VariableDeclaration","scope":2531,"src":"5668:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2490,"name":"bool","nodeType":"ElementaryTypeName","src":"5668:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2500,"initialValue":{"arguments":[{"expression":{"id":2496,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5713:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5713:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2498,"name":"_shirtTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"5725:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2493,"name":"shirtNFTAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"5687:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2492,"name":"INFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"5682:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INFT_$2551_$","typeString":"type(contract INFT)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5682:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_INFT_$2551","typeString":"contract INFT"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeMint","nodeType":"MemberAccess","referencedDeclaration":2550,"src":"5682:30:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5682:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5668:71:13"},{"expression":{"arguments":[{"id":2502,"name":"minted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"5758:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f206d696e74204e4654","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5766:20:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b25856ed5a9729fc86b5fe89ab2fe1c7b5246f80481dfc0d0b2b84dc8c2a851","typeString":"literal_string \"Failed to mint NFT\""},"value":"Failed to mint NFT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7b25856ed5a9729fc86b5fe89ab2fe1c7b5246f80481dfc0d0b2b84dc8c2a851","typeString":"literal_string \"Failed to mint NFT\""}],"id":2501,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5750:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5750:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2505,"nodeType":"ExpressionStatement","src":"5750:37:13"},{"expression":{"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2506,"name":"indexToShirt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"5798:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Shirt_$1988_storage_$","typeString":"mapping(uint256 => struct Store.Shirt storage ref)"}},"id":2508,"indexExpression":{"id":2507,"name":"_shirtTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"5811:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5798:27:13","typeDescriptions":{"typeIdentifier":"t_struct$_Shirt_$1988_storage","typeString":"struct Store.Shirt storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2509,"name":"newShirt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5828:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Shirt_$1988_memory_ptr","typeString":"struct Store.Shirt memory"}},"src":"5798:38:13","typeDescriptions":{"typeIdentifier":"t_struct$_Shirt_$1988_storage","typeString":"struct Store.Shirt storage ref"}},"id":2511,"nodeType":"ExpressionStatement","src":"5798:38:13"},{"expression":{"arguments":[{"id":2517,"name":"_shirtTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"5883:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2512,"name":"buyerToShirtIndexs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"5847:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":2515,"indexExpression":{"expression":{"id":2513,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5866:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5866:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5847:30:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5847:35:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5847:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2519,"nodeType":"ExpressionStatement","src":"5847:50:13"},{"eventCall":{"arguments":[{"id":2521,"name":"_nftAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"5926:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2522,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"5941:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2523,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5952:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5952:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2525,"name":"_shirtTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"5964:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2520,"name":"ShirtCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"5913:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address[] memory,uint256[] memory,address,uint256)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5913:65:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2527,"nodeType":"EmitStatement","src":"5908:70:13"},{"expression":{"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5989:15:13","subExpression":{"id":2528,"name":"_shirtTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"5989:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2530,"nodeType":"ExpressionStatement","src":"5989:15:13"}]},"id":2532,"implemented":true,"kind":"function","modifiers":[],"name":"_buyShirt","nameLocation":"5476:9:13","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"_nftAddresses","nameLocation":"5503:13:13","nodeType":"VariableDeclaration","scope":2532,"src":"5486:30:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2471,"name":"address","nodeType":"ElementaryTypeName","src":"5486:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2472,"nodeType":"ArrayTypeName","src":"5486:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"_tokenIds","nameLocation":"5535:9:13","nodeType":"VariableDeclaration","scope":2532,"src":"5518:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"5518:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2475,"nodeType":"ArrayTypeName","src":"5518:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5485:60:13"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[],"src":"5554:0:13"},"scope":2533,"src":"5467:545:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2534,"src":"483:5532:13","usedErrors":[]}],"src":"33:5982:13"},"id":13},"contracts/interfaces/INFT.sol":{"ast":{"absolutePath":"contracts/interfaces/INFT.sol","exportedSymbols":{"IERC165":[1340],"IERC721":[980],"IERC721Enumerable":[1011],"INFT":[2551]},"id":2552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2535,"literals":["solidity","0.8",".9"],"nodeType":"PragmaDirective","src":"33:22:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":2536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2552,"sourceUnit":981,"src":"59:58:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","id":2537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2552,"sourceUnit":1012,"src":"119:79:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2538,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":980,"src":"220:7:14"},"id":2539,"nodeType":"InheritanceSpecifier","src":"220:7:14"},{"baseName":{"id":2540,"name":"IERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":1011,"src":"229:17:14"},"id":2541,"nodeType":"InheritanceSpecifier","src":"229:17:14"}],"canonicalName":"INFT","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2551,"linearizedBaseContracts":[2551,1011,980,1340],"name":"INFT","nameLocation":"212:4:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a1448194","id":2550,"implemented":false,"kind":"function","modifiers":[],"name":"safeMint","nameLocation":"270:8:14","nodeType":"FunctionDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"receiver","nameLocation":"297:8:14","nodeType":"VariableDeclaration","scope":2550,"src":"289:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"289:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2545,"mutability":"mutable","name":"tokenId","nameLocation":"324:7:14","nodeType":"VariableDeclaration","scope":2550,"src":"316:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"316:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"278:60:14"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2550,"src":"357:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2547,"name":"bool","nodeType":"ElementaryTypeName","src":"357:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"356:6:14"},"scope":2551,"src":"261:102:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2552,"src":"202:166:14","usedErrors":[]}],"src":"33:335:14"},"id":14}},"contracts":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() initializer {} ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed: [.hljs-theme-light.nopadding] ```","kind":"dev","methods":{},"stateVariables":{"_initialized":{"details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() initializer {} ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed: [.hljs-theme-light.nopadding] ```\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_bool"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ceb60ca6da503d458efddfd297baa0dde8bfbd765bf421a5129daf6d76bb84c964736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xB6 0xC 0xA6 0xDA POP RETURNDATASIZE GASLIMIT DUP15 REVERT 0xDF 0xD2 SWAP8 0xBA LOG0 0xDD 0xE8 0xBF 0xBD PUSH23 0x5BF421A5129DAF6D76BB84C964736F6C63430008090033 ","sourceMap":"194:7122:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7122:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ceb60ca6da503d458efddfd297baa0dde8bfbd765bf421a5129daf6d76bb84c964736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xB6 0xC 0xA6 0xDA POP RETURNDATASIZE GASLIMIT DUP15 REVERT 0xDF 0xD2 SWAP8 0xBA LOG0 0xDD 0xE8 0xBF 0xBD PUSH23 0x5BF421A5129DAF6D76BB84C964736F6C63430008090033 ","sourceMap":"194:7122:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":324,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":440,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220341093fe8813c9f71736608d531d683f67653c19d54b1bc3fdbfc1db57b2944364736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE LT SWAP4 INVALID DUP9 SGT 0xC9 0xF7 OR CALLDATASIZE PUSH1 0x8D MSTORE8 SAR PUSH9 0x3F67653C19D54B1BC3 REVERT 0xBF 0xC1 0xDB JUMPI 0xB2 SWAP5 NUMBER PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"707:3748:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220341093fe8813c9f71736608d531d683f67653c19d54b1bc3fdbfc1db57b2944364736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE LT SWAP4 INVALID DUP9 SGT 0xC9 0xF7 OR CALLDATASIZE PUSH1 0x8D MSTORE8 SAR PUSH9 0x3F67653C19D54B1BC3 REVERT 0xBF 0xC1 0xDB JUMPI 0xB2 SWAP5 NUMBER PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"707:3748:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcc60e5077f540d5685386566dcbfdbda195979a7fd52ac0d6e11df6ea84025064736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xC6 0xE POP PUSH24 0xF540D5685386566DCBFDBDA195979A7FD52AC0D6E11DF6EA DUP5 MUL POP PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"194:8111:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcc60e5077f540d5685386566dcbfdbda195979a7fd52ac0d6e11df6ea84025064736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xC6 0xE POP PUSH24 0xF540D5685386566DCBFDBDA195979A7FD52AC0D6E11DF6EA DUP5 MUL POP PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"194:8111:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2c432f89ccfd8295398118a1fbe7e24a27b4f0f6ba8dcdc116f29ed32a07c4464736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xC4 ORIGIN 0xF8 SWAP13 0xCF 0xD8 0x29 MSTORE8 SWAP9 GT DUP11 0x1F 0xBE PUSH31 0x24A27B4F0F6BA8DCDC116F29ED32A07C4464736F6C63430008090033000000 ","sourceMap":"1228:11454:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1228:11454:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2c432f89ccfd8295398118a1fbe7e24a27b4f0f6ba8dcdc116f29ed32a07c4464736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xC4 ORIGIN 0xF8 SWAP13 0xCF 0xD8 0x29 MSTORE8 SWAP9 GT DUP11 0x1F 0xBE PUSH31 0x24A27B4F0F6BA8DCDC116F29ED32A07C4464736F6C63430008090033000000 ","sourceMap":"1228:11454:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Store.sol":{"Store":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":false,"internalType":"address","name":"nftOwnerAddress","type":"address"}],"name":"NFTOwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"status","type":"bool"}],"name":"NFTWhitelistStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"nftAddresses","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"indexed":false,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"shirtTokenId","type":"uint256"}],"name":"ShirtCreated","type":"event"},{"inputs":[{"internalType":"address[][]","name":"_nftAddresses","type":"address[][]"},{"internalType":"uint256[][]","name":"_tokenIds","type":"uint256[][]"}],"name":"buyShirt","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_nftAddresses","type":"address[]"},{"internalType":"bool[]","name":"_status","type":"bool[]"}],"name":"changeNFTWhitelistStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eachShirtFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[][]","name":"_nftAddresses","type":"address[][]"},{"internalType":"uint256[][]","name":"_tokenIds","type":"uint256[][]"}],"name":"estimateCost","outputs":[{"internalType":"uint256","name":"cost","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_nft","type":"address"},{"internalType":"uint256","name":"_shippingFee","type":"uint256"},{"internalType":"uint256","name":"_eachShirtFee","type":"uint256"},{"internalType":"uint256","name":"_percentRoyaltyFee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"percentRoyaltyFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_eachShirtFee","type":"uint256"}],"name":"setEachShirtFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_shirtNFTAddress","type":"address"}],"name":"setNFTAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_nftAddresses","type":"address[]"},{"internalType":"address[]","name":"_nftOwners","type":"address[]"}],"name":"setNFTOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_percentRoyaltyFee","type":"uint256"}],"name":"setPercentRoyaltyFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_shippingFee","type":"uint256"}],"name":"setShippingFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"shippingFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"shirtNFTAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_nftAddresses","type":"address[]"},{"internalType":"address[]","name":"_nftOwners","type":"address[]"}],"name":"whitelistNFT","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_340":{"entryPoint":null,"id":340,"parameterSlots":0,"returnSlots":0},"@_448":{"entryPoint":null,"id":448,"parameterSlots":0,"returnSlots":0},"@_msgSender_1318":{"entryPoint":null,"id":1318,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_428":{"entryPoint":36,"id":428,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600160005561001f33610024565b610076565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6113d7806100856000396000f3fe6080604052600436106100fe5760003560e01c806369d03738116100955780638da5cb5b116100645780638da5cb5b146102845780639e7c11a5146102a2578063ccf99a6e146102b8578063d3ac1e4a146102d8578063f2fde38b146102f857600080fd5b806369d0373814610219578063715018a6146102395780637719bc7b1461024e57806389bd3beb1461026e57600080fd5b80634abaf07e116100d15780634abaf07e1461018b5780634ec81af1146101a157806359f7963d146101c15780635d6297c2146101e157600080fd5b8063136a743c146101035780631cc88bcd1461012557806344ed1fa4146101455780634a59c50d14610158575b600080fd5b34801561010f57600080fd5b5061012361011e366004610ec6565b610318565b005b34801561013157600080fd5b50610123610140366004610ec6565b6103ce565b61012361015336600461100b565b61042a565b34801561016457600080fd5b5061017861017336600461100b565b610610565b6040519081526020015b60405180910390f35b34801561019757600080fd5b5061017860035481565b3480156101ad57600080fd5b506101236101bc3660046110d5565b6106d2565b3480156101cd57600080fd5b506101236101dc36600461110e565b6107cb565b3480156101ed57600080fd5b50600254610201906001600160a01b031681565b6040516001600160a01b039091168152602001610182565b34801561022557600080fd5b50610123610234366004611127565b6107d8565b34801561024557600080fd5b50610123610802565b34801561025a57600080fd5b50610123610269366004611157565b610816565b34801561027a57600080fd5b5061017860055481565b34801561029057600080fd5b506001546001600160a01b0316610201565b3480156102ae57600080fd5b5061017860045481565b3480156102c457600080fd5b506101236102d336600461110e565b610930565b3480156102e457600080fd5b506101236102f336600461110e565b61093d565b34801561030457600080fd5b50610123610313366004611127565b61094a565b6103206109c3565b81518151811461034b5760405162461bcd60e51b81526004016103429061121b565b60405180910390fd5b60005b818110156103c85761037a84828151811061036b5761036b611243565b60200260200101516001610a1d565b6103b684828151811061038f5761038f611243565b60200260200101518483815181106103a9576103a9611243565b6020026020010151610a81565b806103c08161126f565b91505061034e565b50505050565b6103d66109c3565b8151815181146103f85760405162461bcd60e51b81526004016103429061121b565b60005b818110156103c85761041884828151811061038f5761038f611243565b806104228161126f565b9150506103fb565b81518151811461044c5760405162461bcd60e51b81526004016103429061121b565b60006104588484610610565b90508034146104975760405162461bcd60e51b815260206004820152600b60248201526a57726f6e672076616c756560a81b6044820152606401610342565b60005b828110156106095760008582815181106104b6576104b6611243565b60200260200101515190508482815181106104d3576104d3611243565b60200260200101515181146104fa5760405162461bcd60e51b81526004016103429061121b565b60005b818110156105b9576006600088858151811061051b5761051b611243565b6020026020010151838151811061053457610534611243565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff166105a75760405162461bcd60e51b815260206004820152601c60248201527f4e465420686173206e6f74206265656e2077686974656c6973746564000000006044820152606401610342565b806105b18161126f565b9150506104fd565b506105f68683815181106105cf576105cf611243565b60200260200101518684815181106105e9576105e9611243565b6020026020010151610ae5565b50806106018161126f565b91505061049a565b5050505050565b815181516000919081146106365760405162461bcd60e51b81526004016103429061121b565b6000805b8281101561067c5785818151811061065457610654611243565b60200260200101515182610668919061128a565b9150806106748161126f565b91505061063a565b506003546127106005546004548561069491906112a2565b61069e91906112a2565b6106a891906112c1565b6004546106b590856112a2565b6106bf919061128a565b6106c9919061128a565b95945050505050565b600154600160a81b900460ff166106f657600154600160a01b900460ff16156106fa565b303b155b61075d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610342565b600154600160a81b900460ff16158015610787576001805461ffff60a01b191661010160a01b1790555b600280546001600160a01b0319166001600160a01b0387161790556003849055600483905560058290558015610609576001805460ff60a81b191690555050505050565b6107d36109c3565b600455565b6107e06109c3565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61080a6109c3565b6108146000610cc6565b565b61081e6109c3565b8151815181146108405760405162461bcd60e51b81526004016103429061121b565b60005b818110156103c85760006001600160a01b03166007600086848151811061086c5761086c611243565b6020908102919091018101516001600160a01b03908116835290820192909252604001600020541614156108e25760405162461bcd60e51b815260206004820152601a60248201527f4e4654204f776e657220686173206e6f74206265656e207365740000000000006044820152606401610342565b61091e8482815181106108f7576108f7611243565b602002602001015184838151811061091157610911611243565b6020026020010151610a1d565b806109288161126f565b915050610843565b6109386109c3565b600555565b6109456109c3565b600355565b6109526109c3565b6001600160a01b0381166109b75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610342565b6109c081610cc6565b50565b6001546001600160a01b031633146108145760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610342565b6001600160a01b038216600081815260066020908152604091829020805460ff19168515159081179091558251938452908301527f990ecd0def76eff86d5a91a08dbfb0f33a9c9e1873684a516a93ccf3f70a325691015b60405180910390a15050565b6001600160a01b0382811660008181526007602090815260409182902080546001600160a01b031916948616948517905581519283528201929092527f970c3f5f7f64fbd82c31e769d06a9a152177702a2ef86b0018d6e8ea1c97cf299101610a75565b604080516080810182528381526020810183905233818301819052600854606083018190526002549351632851206560e21b81526004810192909252602482015290916000916001600160a01b039091169063a144819490604401602060405180830381600087803b158015610b5a57600080fd5b505af1158015610b6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9291906112e3565b905080610bd65760405162461bcd60e51b815260206004820152601260248201527111985a5b1959081d1bc81b5a5b9d0813919560721b6044820152606401610342565b6008546000908152600960209081526040909120835180518593610bfe928492910190610d18565b506020828101518051610c179260018501920190610d7d565b506040828101516002830180546001600160a01b0319166001600160a01b03909216919091179055606090920151600390910155336000818152600a60209081528382206008805482546001810184559285529290932001555491517f206ba06c561797da5d0262fc18d44d194c8cc1988e613c7c96f3df8f8f330a3792610ca3928892889290611300565b60405180910390a160088054906000610cbb8361126f565b919050555050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215610d6d579160200282015b82811115610d6d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610d38565b50610d79929150610db8565b5090565b828054828255906000526020600020908101928215610d6d579160200282015b82811115610d6d578251825591602001919060010190610d9d565b5b80821115610d795760008155600101610db9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e0c57610e0c610dcd565b604052919050565b600067ffffffffffffffff821115610e2e57610e2e610dcd565b5060051b60200190565b80356001600160a01b0381168114610e4f57600080fd5b919050565b600082601f830112610e6557600080fd5b81356020610e7a610e7583610e14565b610de3565b82815260059290921b84018101918181019086841115610e9957600080fd5b8286015b84811015610ebb57610eae81610e38565b8352918301918301610e9d565b509695505050505050565b60008060408385031215610ed957600080fd5b823567ffffffffffffffff80821115610ef157600080fd5b610efd86838701610e54565b93506020850135915080821115610f1357600080fd5b50610f2085828601610e54565b9150509250929050565b600082601f830112610f3b57600080fd5b81356020610f4b610e7583610e14565b828152600592831b8501820192828201919087851115610f6a57600080fd5b8387015b85811015610ffe57803567ffffffffffffffff811115610f8e5760008081fd5b8801603f81018a13610fa05760008081fd5b858101356040610fb2610e7583610e14565b82815291851b8301810191888101908d841115610fcf5760008081fd5b938201935b83851015610fed57843582529389019390890190610fd4565b885250505093850193508401610f6e565b5090979650505050505050565b6000806040838503121561101e57600080fd5b823567ffffffffffffffff8082111561103657600080fd5b818501915085601f83011261104a57600080fd5b8135602061105a610e7583610e14565b82815260059290921b8401810191818101908984111561107957600080fd5b8286015b848110156110b1578035868111156110955760008081fd5b6110a38c86838b0101610e54565b84525091830191830161107d565b50965050860135925050808211156110c857600080fd5b50610f2085828601610f2a565b600080600080608085870312156110eb57600080fd5b6110f485610e38565b966020860135965060408601359560600135945092505050565b60006020828403121561112057600080fd5b5035919050565b60006020828403121561113957600080fd5b61114282610e38565b9392505050565b80151581146109c057600080fd5b6000806040838503121561116a57600080fd5b823567ffffffffffffffff8082111561118257600080fd5b61118e86838701610e54565b93506020915081850135818111156111a557600080fd5b85019050601f810186136111b857600080fd5b80356111c6610e7582610e14565b81815260059190911b820183019083810190888311156111e557600080fd5b928401925b8284101561120c5783356111fd81611149565b825292840192908401906111ea565b80955050505050509250929050565b6020808252600e908201526d092dcecc2d8d2c840d8cadccee8d60931b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561128357611283611259565b5060010190565b6000821982111561129d5761129d611259565b500190565b60008160001904831182151516156112bc576112bc611259565b500290565b6000826112de57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156112f557600080fd5b815161114281611149565b6080808252855190820181905260009060209060a0840190828901845b828110156113425781516001600160a01b03168452928401929084019060010161131d565b5050508381038285015286518082528783019183019060005b818110156113775783518352928401929184019160010161135b565b50506001600160a01b03871660408601529250611392915050565b8260608301529594505050505056fea2646970667358221220446a9b3853595d2e447677634517a13d2a82279eeb3fee89fdfd7468b5af0b0764736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x1F CALLER PUSH2 0x24 JUMP JUMPDEST PUSH2 0x76 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13D7 DUP1 PUSH2 0x85 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69D03738 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x9E7C11A5 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xCCF99A6E EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xD3AC1E4A EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69D03738 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x7719BC7B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x89BD3BEB EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4ABAF07E GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4ABAF07E EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x4EC81AF1 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x59F7963D EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x5D6297C2 EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x136A743C EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x1CC88BCD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x44ED1FA4 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x4A59C50D EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x123 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x100B JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x100B JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x201 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x182 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x802 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1157 JUMP JUMPDEST PUSH2 0x816 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x201 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH2 0x320 PUSH2 0x9C3 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD DUP2 EQ PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x37A DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x36B JUMPI PUSH2 0x36B PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x3B6 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x38F JUMPI PUSH2 0x38F PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA81 JUMP JUMPDEST DUP1 PUSH2 0x3C0 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x34E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3D6 PUSH2 0x9C3 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD DUP2 EQ PUSH2 0x3F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x418 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x38F JUMPI PUSH2 0x38F PUSH2 0x1243 JUMP JUMPDEST DUP1 PUSH2 0x422 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3FB JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD DUP2 EQ PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x458 DUP5 DUP5 PUSH2 0x610 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x57726F6E672076616C7565 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4B6 JUMPI PUSH2 0x4B6 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD SWAP1 POP DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4D3 JUMPI PUSH2 0x4D3 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD DUP2 EQ PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x6 PUSH1 0x0 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x51B JUMPI PUSH2 0x51B PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x534 JUMPI PUSH2 0x534 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E465420686173206E6F74206265656E2077686974656C697374656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH2 0x5B1 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4FD JUMP JUMPDEST POP PUSH2 0x5F6 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5CF JUMPI PUSH2 0x5CF PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5E9 JUMPI PUSH2 0x5E9 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xAE5 JUMP JUMPDEST POP DUP1 PUSH2 0x601 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x49A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP2 SWAP1 DUP2 EQ PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x67C JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x654 JUMPI PUSH2 0x654 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD DUP3 PUSH2 0x668 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x674 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x63A JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2710 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD DUP6 PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x69E SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x6B5 SWAP1 DUP6 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6F6 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6FA JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH2 0x101 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP4 SWAP1 SSTORE PUSH1 0x5 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x80A PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x814 PUSH1 0x0 PUSH2 0xCC6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x81E PUSH2 0x9C3 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD DUP2 EQ PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x7 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x86C JUMPI PUSH2 0x86C PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4654204F776E657220686173206E6F74206265656E20736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH2 0x91E DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8F7 JUMPI PUSH2 0x8F7 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x911 JUMPI PUSH2 0x911 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA1D JUMP JUMPDEST DUP1 PUSH2 0x928 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x843 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x945 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x952 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH2 0x9C0 DUP2 PUSH2 0xCC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x990ECD0DEF76EFF86D5A91A08DBFB0F33A9C9E1873684A516A93CCF3F70A3256 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x970C3F5F7F64FBD82C31E769D06A9A152177702A2EF86B0018D6E8EA1C97CF29 SWAP2 ADD PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x8 SLOAD PUSH1 0x60 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x2 SLOAD SWAP4 MLOAD PUSH4 0x28512065 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1448194 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xBD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11985A5B1959081D1BC81B5A5B9D08139195 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP1 MLOAD DUP6 SWAP4 PUSH2 0xBFE SWAP3 DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xD18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0xC17 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0xD7D JUMP JUMPDEST POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP3 KECCAK256 PUSH1 0x8 DUP1 SLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE SWAP3 DUP6 MSTORE SWAP3 SWAP1 SWAP4 KECCAK256 ADD SSTORE SLOAD SWAP2 MLOAD PUSH32 0x206BA06C561797DA5D0262FC18D44D194C8CC1988E613C7C96F3DF8F8F330A37 SWAP3 PUSH2 0xCA3 SWAP3 DUP9 SWAP3 DUP9 SWAP3 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xCBB DUP4 PUSH2 0x126F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xD6D JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xD6D JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xD38 JUMP JUMPDEST POP PUSH2 0xD79 SWAP3 SWAP2 POP PUSH2 0xDB8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xD6D JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xD6D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD9D JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD79 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xDB9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE0C JUMPI PUSH2 0xE0C PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE2E JUMPI PUSH2 0xE2E PUSH2 0xDCD JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE7A PUSH2 0xE75 DUP4 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xEBB JUMPI PUSH2 0xEAE DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xE9D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFD DUP7 DUP4 DUP8 ADD PUSH2 0xE54 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF20 DUP6 DUP3 DUP7 ADD PUSH2 0xE54 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF4B PUSH2 0xE75 DUP4 PUSH2 0xE14 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 DUP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP3 ADD SWAP2 SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xFFE JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF8E JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP9 ADD PUSH1 0x3F DUP2 ADD DUP11 SGT PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP6 DUP2 ADD CALLDATALOAD PUSH1 0x40 PUSH2 0xFB2 PUSH2 0xE75 DUP4 PUSH2 0xE14 JUMP JUMPDEST DUP3 DUP2 MSTORE SWAP2 DUP6 SHL DUP4 ADD DUP2 ADD SWAP2 DUP9 DUP2 ADD SWAP1 DUP14 DUP5 GT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP4 DUP3 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xFED JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP10 ADD SWAP4 SWAP1 DUP10 ADD SWAP1 PUSH2 0xFD4 JUMP JUMPDEST DUP9 MSTORE POP POP POP SWAP4 DUP6 ADD SWAP4 POP DUP5 ADD PUSH2 0xF6E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x101E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x104A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x105A PUSH2 0xE75 DUP4 PUSH2 0xE14 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x1079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x10B1 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x1095 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x10A3 DUP13 DUP7 DUP4 DUP12 ADD ADD PUSH2 0xE54 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x107D JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF20 DUP6 DUP3 DUP7 ADD PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F4 DUP6 PUSH2 0xE38 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1142 DUP3 PUSH2 0xE38 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118E DUP7 DUP4 DUP8 ADD PUSH2 0xE54 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x11A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD SWAP1 POP PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x11B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x11C6 PUSH2 0xE75 DUP3 PUSH2 0xE14 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x120C JUMPI DUP4 CALLDATALOAD PUSH2 0x11FD DUP2 PUSH2 0x1149 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x11EA JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x92DCECC2D8D2C840D8CADCCEE8D PUSH1 0x93 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1283 JUMPI PUSH2 0x1283 PUSH2 0x1259 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x129D JUMPI PUSH2 0x129D PUSH2 0x1259 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12BC JUMPI PUSH2 0x12BC PUSH2 0x1259 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1142 DUP2 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x80 DUP1 DUP3 MSTORE DUP6 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0xA0 DUP5 ADD SWAP1 DUP3 DUP10 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1342 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131D JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE DUP8 DUP4 ADD SWAP2 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1377 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x135B JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x40 DUP7 ADD MSTORE SWAP3 POP PUSH2 0x1392 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY PUSH11 0x9B3853595D2E4476776345 OR LOG1 RETURNDATASIZE 0x2A DUP3 0x27 SWAP15 0xEB EXTCODEHASH 0xEE DUP10 REVERT REVERT PUSH21 0x68B5AF0B0764736F6C634300080900330000000000 ","sourceMap":"483:5532:13:-:0;;;;;;;;;;;;-1:-1:-1;1701:1:3;1806:7;:22;936:32:2;719:10:10;936:18:2;:32::i;:::-;483:5532:13;;2433:187:2;2525:6;;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;483:5532:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_buyShirt_2532":{"entryPoint":2789,"id":2532,"parameterSlots":2,"returnSlots":0},"@_changeNFTWhitelistStatus_2284":{"entryPoint":2589,"id":2284,"parameterSlots":2,"returnSlots":0},"@_checkOwner_371":{"entryPoint":2499,"id":371,"parameterSlots":0,"returnSlots":0},"@_isConstructor_72":{"entryPoint":null,"id":72,"parameterSlots":0,"returnSlots":1},"@_msgSender_1318":{"entryPoint":null,"id":1318,"parameterSlots":0,"returnSlots":1},"@_setNFTOwner_2303":{"entryPoint":2689,"id":2303,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_428":{"entryPoint":3270,"id":428,"parameterSlots":1,"returnSlots":0},"@buyShirt_2470":{"entryPoint":1066,"id":2470,"parameterSlots":2,"returnSlots":0},"@changeNFTWhitelistStatus_2219":{"entryPoint":2070,"id":2219,"parameterSlots":2,"returnSlots":0},"@eachShirtFee_1964":{"entryPoint":null,"id":1964,"parameterSlots":0,"returnSlots":0},"@estimateCost_2369":{"entryPoint":1552,"id":2369,"parameterSlots":2,"returnSlots":1},"@initialize_2058":{"entryPoint":1746,"id":2058,"parameterSlots":4,"returnSlots":0},"@isContract_91":{"entryPoint":null,"id":91,"parameterSlots":1,"returnSlots":1},"@owner_357":{"entryPoint":null,"id":357,"parameterSlots":0,"returnSlots":1},"@percentRoyaltyFee_1966":{"entryPoint":null,"id":1966,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_385":{"entryPoint":2050,"id":385,"parameterSlots":0,"returnSlots":0},"@setEachShirtFee_2094":{"entryPoint":1995,"id":2094,"parameterSlots":1,"returnSlots":0},"@setNFTAddress_2070":{"entryPoint":2008,"id":2070,"parameterSlots":1,"returnSlots":0},"@setNFTOwner_2265":{"entryPoint":974,"id":2265,"parameterSlots":2,"returnSlots":0},"@setPercentRoyaltyFee_2106":{"entryPoint":2352,"id":2106,"parameterSlots":1,"returnSlots":0},"@setShippingFee_2082":{"entryPoint":2365,"id":2082,"parameterSlots":1,"returnSlots":0},"@shippingFee_1962":{"entryPoint":null,"id":1962,"parameterSlots":0,"returnSlots":0},"@shirtNFTAddress_1960":{"entryPoint":null,"id":1960,"parameterSlots":0,"returnSlots":0},"@transferOwnership_408":{"entryPoint":2378,"id":408,"parameterSlots":1,"returnSlots":0},"@whitelistNFT_2159":{"entryPoint":792,"id":2159,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":3640,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn":{"entryPoint":3668,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_array_uint256_dyn_dyn":{"entryPoint":3882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4391,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256":{"entryPoint":4309,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr":{"entryPoint":3782,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptr":{"entryPoint":4439,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr":{"entryPoint":4107,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":4864,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4635,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7979e3b12d07033d039322ebf8b023a9cefc4db0df47eddf703bee910079cda9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7b25856ed5a9729fc86b5fe89ab2fe1c7b5246f80481dfc0d0b2b84dc8c2a851__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d40c304804677979b02ddb540cd84bf11c81490088b00be94027707c4cb69ab9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3555,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":3604,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4746,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4801,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4770,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":4719,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4697,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4675,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3533,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":4425,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14129:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:15","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:15","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:15"},"nodeType":"YulFunctionCall","src":"66:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:15"},"nodeType":"YulFunctionCall","src":"56:31:15"},"nodeType":"YulExpressionStatement","src":"56:31:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:15"},"nodeType":"YulFunctionCall","src":"96:15:15"},"nodeType":"YulExpressionStatement","src":"96:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:15"},"nodeType":"YulFunctionCall","src":"120:15:15"},"nodeType":"YulExpressionStatement","src":"120:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:15"},{"body":{"nodeType":"YulBlock","src":"191:230:15","statements":[{"nodeType":"YulAssignment","src":"201:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"217:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"211:5:15"},"nodeType":"YulFunctionCall","src":"211:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"201:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"229:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"251:6:15"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"267:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"273:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"263:3:15"},"nodeType":"YulFunctionCall","src":"263:13:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"282:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"278:3:15"},"nodeType":"YulFunctionCall","src":"278:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"259:3:15"},"nodeType":"YulFunctionCall","src":"259:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"247:3:15"},"nodeType":"YulFunctionCall","src":"247:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"233:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"362:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"364:16:15"},"nodeType":"YulFunctionCall","src":"364:18:15"},"nodeType":"YulExpressionStatement","src":"364:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"305:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"317:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"302:2:15"},"nodeType":"YulFunctionCall","src":"302:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"341:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"353:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"338:2:15"},"nodeType":"YulFunctionCall","src":"338:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"299:2:15"},"nodeType":"YulFunctionCall","src":"299:62:15"},"nodeType":"YulIf","src":"296:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"400:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"404:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"393:6:15"},"nodeType":"YulFunctionCall","src":"393:22:15"},"nodeType":"YulExpressionStatement","src":"393:22:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"171:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"180:6:15","type":""}],"src":"146:275:15"},{"body":{"nodeType":"YulBlock","src":"495:114:15","statements":[{"body":{"nodeType":"YulBlock","src":"539:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"541:16:15"},"nodeType":"YulFunctionCall","src":"541:18:15"},"nodeType":"YulExpressionStatement","src":"541:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"511:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"519:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"508:2:15"},"nodeType":"YulFunctionCall","src":"508:30:15"},"nodeType":"YulIf","src":"505:56:15"},{"nodeType":"YulAssignment","src":"570:33:15","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"586:1:15","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"589:6:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"582:3:15"},"nodeType":"YulFunctionCall","src":"582:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"598:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"578:3:15"},"nodeType":"YulFunctionCall","src":"578:25:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"570:4:15"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"475:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"486:4:15","type":""}],"src":"426:183:15"},{"body":{"nodeType":"YulBlock","src":"663:124:15","statements":[{"nodeType":"YulAssignment","src":"673:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"695:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"682:12:15"},"nodeType":"YulFunctionCall","src":"682:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"673:5:15"}]},{"body":{"nodeType":"YulBlock","src":"765:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"774:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"777:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"767:6:15"},"nodeType":"YulFunctionCall","src":"767:12:15"},"nodeType":"YulExpressionStatement","src":"767:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"724:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"735:5:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"750:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"746:3:15"},"nodeType":"YulFunctionCall","src":"746:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"759:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"742:3:15"},"nodeType":"YulFunctionCall","src":"742:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"731:3:15"},"nodeType":"YulFunctionCall","src":"731:31:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"721:2:15"},"nodeType":"YulFunctionCall","src":"721:42:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"714:6:15"},"nodeType":"YulFunctionCall","src":"714:50:15"},"nodeType":"YulIf","src":"711:70:15"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"642:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"653:5:15","type":""}],"src":"614:173:15"},{"body":{"nodeType":"YulBlock","src":"856:604:15","statements":[{"body":{"nodeType":"YulBlock","src":"905:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"914:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"917:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"907:6:15"},"nodeType":"YulFunctionCall","src":"907:12:15"},"nodeType":"YulExpressionStatement","src":"907:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"884:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"892:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"880:3:15"},"nodeType":"YulFunctionCall","src":"880:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"899:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"876:3:15"},"nodeType":"YulFunctionCall","src":"876:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"869:6:15"},"nodeType":"YulFunctionCall","src":"869:35:15"},"nodeType":"YulIf","src":"866:55:15"},{"nodeType":"YulVariableDeclaration","src":"930:30:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"953:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"940:12:15"},"nodeType":"YulFunctionCall","src":"940:20:15"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"934:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"969:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"979:4:15","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"973:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"992:71:15","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1059:2:15"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"1019:39:15"},"nodeType":"YulFunctionCall","src":"1019:43:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1003:15:15"},"nodeType":"YulFunctionCall","src":"1003:60:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"996:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1072:16:15","value":{"name":"dst","nodeType":"YulIdentifier","src":"1085:3:15"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"1076:5:15","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1104:3:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1109:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1097:6:15"},"nodeType":"YulFunctionCall","src":"1097:15:15"},"nodeType":"YulExpressionStatement","src":"1097:15:15"},{"nodeType":"YulAssignment","src":"1121:19:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1132:3:15"},{"name":"_2","nodeType":"YulIdentifier","src":"1137:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1128:3:15"},"nodeType":"YulFunctionCall","src":"1128:12:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1121:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"1149:46:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1171:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:1:15","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"1186:2:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1179:3:15"},"nodeType":"YulFunctionCall","src":"1179:10:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1167:3:15"},"nodeType":"YulFunctionCall","src":"1167:23:15"},{"name":"_2","nodeType":"YulIdentifier","src":"1192:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:15"},"nodeType":"YulFunctionCall","src":"1163:32:15"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"1153:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1223:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1232:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1235:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1225:6:15"},"nodeType":"YulFunctionCall","src":"1225:12:15"},"nodeType":"YulExpressionStatement","src":"1225:12:15"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"1210:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"1218:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1207:2:15"},"nodeType":"YulFunctionCall","src":"1207:15:15"},"nodeType":"YulIf","src":"1204:35:15"},{"nodeType":"YulVariableDeclaration","src":"1248:26:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1263:6:15"},{"name":"_2","nodeType":"YulIdentifier","src":"1271:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1259:3:15"},"nodeType":"YulFunctionCall","src":"1259:15:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1252:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1339:92:15","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1360:3:15"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1384:3:15"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1365:18:15"},"nodeType":"YulFunctionCall","src":"1365:23:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1353:6:15"},"nodeType":"YulFunctionCall","src":"1353:36:15"},"nodeType":"YulExpressionStatement","src":"1353:36:15"},{"nodeType":"YulAssignment","src":"1402:19:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1413:3:15"},{"name":"_2","nodeType":"YulIdentifier","src":"1418:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1409:3:15"},"nodeType":"YulFunctionCall","src":"1409:12:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1402:3:15"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1294:3:15"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"1299:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1291:2:15"},"nodeType":"YulFunctionCall","src":"1291:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1307:23:15","statements":[{"nodeType":"YulAssignment","src":"1309:19:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1320:3:15"},{"name":"_2","nodeType":"YulIdentifier","src":"1325:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1316:3:15"},"nodeType":"YulFunctionCall","src":"1316:12:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1309:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"1287:3:15","statements":[]},"src":"1283:148:15"},{"nodeType":"YulAssignment","src":"1440:14:15","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"1449:5:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1440:5:15"}]}]},"name":"abi_decode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"830:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"838:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"846:5:15","type":""}],"src":"792:668:15"},{"body":{"nodeType":"YulBlock","src":"1602:458:15","statements":[{"body":{"nodeType":"YulBlock","src":"1648:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1657:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1660:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1650:6:15"},"nodeType":"YulFunctionCall","src":"1650:12:15"},"nodeType":"YulExpressionStatement","src":"1650:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1623:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1632:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1619:3:15"},"nodeType":"YulFunctionCall","src":"1619:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1644:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1615:3:15"},"nodeType":"YulFunctionCall","src":"1615:32:15"},"nodeType":"YulIf","src":"1612:52:15"},{"nodeType":"YulVariableDeclaration","src":"1673:37:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1700:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1687:12:15"},"nodeType":"YulFunctionCall","src":"1687:23:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1677:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1719:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1729:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1723:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1774:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1783:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1786:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1776:6:15"},"nodeType":"YulFunctionCall","src":"1776:12:15"},"nodeType":"YulExpressionStatement","src":"1776:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1762:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1770:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1759:2:15"},"nodeType":"YulFunctionCall","src":"1759:14:15"},"nodeType":"YulIf","src":"1756:34:15"},{"nodeType":"YulAssignment","src":"1799:71:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1842:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1853:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1838:3:15"},"nodeType":"YulFunctionCall","src":"1838:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1862:7:15"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"1809:28:15"},"nodeType":"YulFunctionCall","src":"1809:61:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1799:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"1879:48:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1912:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1923:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1908:3:15"},"nodeType":"YulFunctionCall","src":"1908:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1895:12:15"},"nodeType":"YulFunctionCall","src":"1895:32:15"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1883:8:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1956:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1965:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1968:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1958:6:15"},"nodeType":"YulFunctionCall","src":"1958:12:15"},"nodeType":"YulExpressionStatement","src":"1958:12:15"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1942:8:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1952:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1939:2:15"},"nodeType":"YulFunctionCall","src":"1939:16:15"},"nodeType":"YulIf","src":"1936:36:15"},{"nodeType":"YulAssignment","src":"1981:73:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2024:9:15"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2035:8:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2020:3:15"},"nodeType":"YulFunctionCall","src":"2020:24:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2046:7:15"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"1991:28:15"},"nodeType":"YulFunctionCall","src":"1991:63:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1981:6:15"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1560:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1571:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1583:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1591:6:15","type":""}],"src":"1465:595:15"},{"body":{"nodeType":"YulBlock","src":"2139:1631:15","statements":[{"body":{"nodeType":"YulBlock","src":"2188:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2197:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2200:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2190:6:15"},"nodeType":"YulFunctionCall","src":"2190:12:15"},"nodeType":"YulExpressionStatement","src":"2190:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2167:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2175:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2163:3:15"},"nodeType":"YulFunctionCall","src":"2163:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"2182:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2159:3:15"},"nodeType":"YulFunctionCall","src":"2159:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2152:6:15"},"nodeType":"YulFunctionCall","src":"2152:35:15"},"nodeType":"YulIf","src":"2149:55:15"},{"nodeType":"YulVariableDeclaration","src":"2213:30:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2236:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2223:12:15"},"nodeType":"YulFunctionCall","src":"2223:20:15"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2217:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2252:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2262:4:15","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2256:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2275:71:15","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2342:2:15"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"2302:39:15"},"nodeType":"YulFunctionCall","src":"2302:43:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2286:15:15"},"nodeType":"YulFunctionCall","src":"2286:60:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2279:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2355:16:15","value":{"name":"dst","nodeType":"YulIdentifier","src":"2368:3:15"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"2359:5:15","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2387:3:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2392:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2380:6:15"},"nodeType":"YulFunctionCall","src":"2380:15:15"},"nodeType":"YulExpressionStatement","src":"2380:15:15"},{"nodeType":"YulAssignment","src":"2404:19:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2415:3:15"},{"name":"_2","nodeType":"YulIdentifier","src":"2420:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2411:3:15"},"nodeType":"YulFunctionCall","src":"2411:12:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2404:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"2432:11:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2442:1:15","type":"","value":"5"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2436:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2452:47:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2474:6:15"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2486:2:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2490:2:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2482:3:15"},"nodeType":"YulFunctionCall","src":"2482:11:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2470:3:15"},"nodeType":"YulFunctionCall","src":"2470:24:15"},{"name":"_2","nodeType":"YulIdentifier","src":"2496:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2466:3:15"},"nodeType":"YulFunctionCall","src":"2466:33:15"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2456:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2527:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2536:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2539:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2529:6:15"},"nodeType":"YulFunctionCall","src":"2529:12:15"},"nodeType":"YulExpressionStatement","src":"2529:12:15"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2514:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"2522:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2511:2:15"},"nodeType":"YulFunctionCall","src":"2511:15:15"},"nodeType":"YulIf","src":"2508:35:15"},{"nodeType":"YulVariableDeclaration","src":"2552:26:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2567:6:15"},{"name":"_2","nodeType":"YulIdentifier","src":"2575:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2563:3:15"},"nodeType":"YulFunctionCall","src":"2563:15:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2556:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2643:1098:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2657:36:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2689:3:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2676:12:15"},"nodeType":"YulFunctionCall","src":"2676:17:15"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"2661:11:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2757:74:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2775:11:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2785:1:15","type":"","value":"0"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"2779:2:15","type":""}]},{"expression":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"2810:2:15"},{"name":"_4","nodeType":"YulIdentifier","src":"2814:2:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2803:6:15"},"nodeType":"YulFunctionCall","src":"2803:14:15"},"nodeType":"YulExpressionStatement","src":"2803:14:15"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"2712:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"2725:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2709:2:15"},"nodeType":"YulFunctionCall","src":"2709:35:15"},"nodeType":"YulIf","src":"2706:125:15"},{"nodeType":"YulVariableDeclaration","src":"2844:34:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2858:6:15"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"2866:11:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2854:3:15"},"nodeType":"YulFunctionCall","src":"2854:24:15"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"2848:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2936:74:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2954:11:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2964:1:15","type":"","value":"0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"2958:2:15","type":""}]},{"expression":{"arguments":[{"name":"_6","nodeType":"YulIdentifier","src":"2989:2:15"},{"name":"_6","nodeType":"YulIdentifier","src":"2993:2:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2982:6:15"},"nodeType":"YulFunctionCall","src":"2982:14:15"},"nodeType":"YulExpressionStatement","src":"2982:14:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"2909:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"2913:2:15","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2905:3:15"},"nodeType":"YulFunctionCall","src":"2905:11:15"},{"name":"end","nodeType":"YulIdentifier","src":"2918:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2901:3:15"},"nodeType":"YulFunctionCall","src":"2901:21:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2894:6:15"},"nodeType":"YulFunctionCall","src":"2894:29:15"},"nodeType":"YulIf","src":"2891:119:15"},{"nodeType":"YulVariableDeclaration","src":"3023:35:15","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"3050:2:15"},{"name":"_2","nodeType":"YulIdentifier","src":"3054:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3046:3:15"},"nodeType":"YulFunctionCall","src":"3046:11:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3033:12:15"},"nodeType":"YulFunctionCall","src":"3033:25:15"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"3027:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3071:12:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3081:2:15","type":"","value":"64"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"3075:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3096:73:15","value":{"arguments":[{"arguments":[{"name":"_7","nodeType":"YulIdentifier","src":"3165:2:15"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"3125:39:15"},"nodeType":"YulFunctionCall","src":"3125:43:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3109:15:15"},"nodeType":"YulFunctionCall","src":"3109:60:15"},"variables":[{"name":"dst_2","nodeType":"YulTypedName","src":"3100:5:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3182:18:15","value":{"name":"dst_2","nodeType":"YulIdentifier","src":"3195:5:15"},"variables":[{"name":"dst_3","nodeType":"YulTypedName","src":"3186:5:15","type":""}]},{"expression":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"3220:5:15"},{"name":"_7","nodeType":"YulIdentifier","src":"3227:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3213:6:15"},"nodeType":"YulFunctionCall","src":"3213:17:15"},"nodeType":"YulExpressionStatement","src":"3213:17:15"},{"nodeType":"YulAssignment","src":"3243:23:15","value":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"3256:5:15"},{"name":"_2","nodeType":"YulIdentifier","src":"3263:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3252:3:15"},"nodeType":"YulFunctionCall","src":"3252:14:15"},"variableNames":[{"name":"dst_2","nodeType":"YulIdentifier","src":"3243:5:15"}]},{"nodeType":"YulVariableDeclaration","src":"3279:45:15","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"3303:2:15"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3311:2:15"},{"name":"_7","nodeType":"YulIdentifier","src":"3315:2:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3307:3:15"},"nodeType":"YulFunctionCall","src":"3307:11:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:15"},"nodeType":"YulFunctionCall","src":"3299:20:15"},{"name":"_8","nodeType":"YulIdentifier","src":"3321:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3295:3:15"},"nodeType":"YulFunctionCall","src":"3295:29:15"},"variables":[{"name":"srcEnd_1","nodeType":"YulTypedName","src":"3283:8:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3370:74:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3388:11:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3398:1:15","type":"","value":"0"},"variables":[{"name":"_9","nodeType":"YulTypedName","src":"3392:2:15","type":""}]},{"expression":{"arguments":[{"name":"_9","nodeType":"YulIdentifier","src":"3423:2:15"},{"name":"_9","nodeType":"YulIdentifier","src":"3427:2:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3416:6:15"},"nodeType":"YulFunctionCall","src":"3416:14:15"},"nodeType":"YulExpressionStatement","src":"3416:14:15"}]},"condition":{"arguments":[{"name":"srcEnd_1","nodeType":"YulIdentifier","src":"3343:8:15"},{"name":"end","nodeType":"YulIdentifier","src":"3353:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3340:2:15"},"nodeType":"YulFunctionCall","src":"3340:17:15"},"nodeType":"YulIf","src":"3337:107:15"},{"nodeType":"YulVariableDeclaration","src":"3457:24:15","value":{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"3474:2:15"},{"name":"_8","nodeType":"YulIdentifier","src":"3478:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3470:3:15"},"nodeType":"YulFunctionCall","src":"3470:11:15"},"variables":[{"name":"src_1","nodeType":"YulTypedName","src":"3461:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3562:106:15","statements":[{"expression":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"3587:5:15"},{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"3607:5:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3594:12:15"},"nodeType":"YulFunctionCall","src":"3594:19:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3580:6:15"},"nodeType":"YulFunctionCall","src":"3580:34:15"},"nodeType":"YulExpressionStatement","src":"3580:34:15"},{"nodeType":"YulAssignment","src":"3631:23:15","value":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"3644:5:15"},{"name":"_2","nodeType":"YulIdentifier","src":"3651:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3640:3:15"},"nodeType":"YulFunctionCall","src":"3640:14:15"},"variableNames":[{"name":"dst_2","nodeType":"YulIdentifier","src":"3631:5:15"}]}]},"condition":{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"3505:5:15"},{"name":"srcEnd_1","nodeType":"YulIdentifier","src":"3512:8:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3502:2:15"},"nodeType":"YulFunctionCall","src":"3502:19:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3522:27:15","statements":[{"nodeType":"YulAssignment","src":"3524:23:15","value":{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"3537:5:15"},{"name":"_2","nodeType":"YulIdentifier","src":"3544:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3533:3:15"},"nodeType":"YulFunctionCall","src":"3533:14:15"},"variableNames":[{"name":"src_1","nodeType":"YulIdentifier","src":"3524:5:15"}]}]},"pre":{"nodeType":"YulBlock","src":"3498:3:15","statements":[]},"src":"3494:174:15"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3688:3:15"},{"name":"dst_3","nodeType":"YulIdentifier","src":"3693:5:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3681:6:15"},"nodeType":"YulFunctionCall","src":"3681:18:15"},"nodeType":"YulExpressionStatement","src":"3681:18:15"},{"nodeType":"YulAssignment","src":"3712:19:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3723:3:15"},{"name":"_2","nodeType":"YulIdentifier","src":"3728:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3719:3:15"},"nodeType":"YulFunctionCall","src":"3719:12:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3712:3:15"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2598:3:15"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"2603:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:15"},"nodeType":"YulFunctionCall","src":"2595:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2611:23:15","statements":[{"nodeType":"YulAssignment","src":"2613:19:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2624:3:15"},{"name":"_2","nodeType":"YulIdentifier","src":"2629:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2620:3:15"},"nodeType":"YulFunctionCall","src":"2620:12:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2613:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2591:3:15","statements":[]},"src":"2587:1154:15"},{"nodeType":"YulAssignment","src":"3750:14:15","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"3759:5:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3750:5:15"}]}]},"name":"abi_decode_array_array_uint256_dyn_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2113:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2121:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2129:5:15","type":""}],"src":"2065:1705:15"},{"body":{"nodeType":"YulBlock","src":"3962:1235:15","statements":[{"body":{"nodeType":"YulBlock","src":"4008:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4017:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4020:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4010:6:15"},"nodeType":"YulFunctionCall","src":"4010:12:15"},"nodeType":"YulExpressionStatement","src":"4010:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3983:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3992:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3979:3:15"},"nodeType":"YulFunctionCall","src":"3979:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4004:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3975:3:15"},"nodeType":"YulFunctionCall","src":"3975:32:15"},"nodeType":"YulIf","src":"3972:52:15"},{"nodeType":"YulVariableDeclaration","src":"4033:37:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4060:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4047:12:15"},"nodeType":"YulFunctionCall","src":"4047:23:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4037:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4079:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4089:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4083:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4134:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4143:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4146:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4136:6:15"},"nodeType":"YulFunctionCall","src":"4136:12:15"},"nodeType":"YulExpressionStatement","src":"4136:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4122:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"4130:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4119:2:15"},"nodeType":"YulFunctionCall","src":"4119:14:15"},"nodeType":"YulIf","src":"4116:34:15"},{"nodeType":"YulVariableDeclaration","src":"4159:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4173:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4184:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4169:3:15"},"nodeType":"YulFunctionCall","src":"4169:22:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4163:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4239:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4248:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4251:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4241:6:15"},"nodeType":"YulFunctionCall","src":"4241:12:15"},"nodeType":"YulExpressionStatement","src":"4241:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4218:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"4222:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4214:3:15"},"nodeType":"YulFunctionCall","src":"4214:13:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4229:7:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4210:3:15"},"nodeType":"YulFunctionCall","src":"4210:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4203:6:15"},"nodeType":"YulFunctionCall","src":"4203:35:15"},"nodeType":"YulIf","src":"4200:55:15"},{"nodeType":"YulVariableDeclaration","src":"4264:26:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4287:2:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4274:12:15"},"nodeType":"YulFunctionCall","src":"4274:16:15"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4268:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4299:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4309:4:15","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4303:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4322:71:15","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4389:2:15"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"4349:39:15"},"nodeType":"YulFunctionCall","src":"4349:43:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4333:15:15"},"nodeType":"YulFunctionCall","src":"4333:60:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4326:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4402:16:15","value":{"name":"dst","nodeType":"YulIdentifier","src":"4415:3:15"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"4406:5:15","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4434:3:15"},{"name":"_3","nodeType":"YulIdentifier","src":"4439:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4427:6:15"},"nodeType":"YulFunctionCall","src":"4427:15:15"},"nodeType":"YulExpressionStatement","src":"4427:15:15"},{"nodeType":"YulAssignment","src":"4451:19:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4462:3:15"},{"name":"_4","nodeType":"YulIdentifier","src":"4467:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4458:3:15"},"nodeType":"YulFunctionCall","src":"4458:12:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4451:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"4479:42:15","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4501:2:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4509:1:15","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"4512:2:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4505:3:15"},"nodeType":"YulFunctionCall","src":"4505:10:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4497:3:15"},"nodeType":"YulFunctionCall","src":"4497:19:15"},{"name":"_4","nodeType":"YulIdentifier","src":"4518:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4493:3:15"},"nodeType":"YulFunctionCall","src":"4493:28:15"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4483:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4553:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4562:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4565:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4555:6:15"},"nodeType":"YulFunctionCall","src":"4555:12:15"},"nodeType":"YulExpressionStatement","src":"4555:12:15"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4536:6:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4544:7:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4533:2:15"},"nodeType":"YulFunctionCall","src":"4533:19:15"},"nodeType":"YulIf","src":"4530:39:15"},{"nodeType":"YulVariableDeclaration","src":"4578:22:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4593:2:15"},{"name":"_4","nodeType":"YulIdentifier","src":"4597:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4589:3:15"},"nodeType":"YulFunctionCall","src":"4589:11:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4582:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4665:308:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4679:36:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4711:3:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4698:12:15"},"nodeType":"YulFunctionCall","src":"4698:17:15"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"4683:11:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4763:74:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4781:11:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4791:1:15","type":"","value":"0"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"4785:2:15","type":""}]},{"expression":{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"4816:2:15"},{"name":"_5","nodeType":"YulIdentifier","src":"4820:2:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4809:6:15"},"nodeType":"YulFunctionCall","src":"4809:14:15"},"nodeType":"YulExpressionStatement","src":"4809:14:15"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"4734:11:15"},{"name":"_1","nodeType":"YulIdentifier","src":"4747:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4731:2:15"},"nodeType":"YulFunctionCall","src":"4731:19:15"},"nodeType":"YulIf","src":"4728:109:15"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4857:3:15"},{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4899:2:15"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"4903:11:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4895:3:15"},"nodeType":"YulFunctionCall","src":"4895:20:15"},{"name":"_4","nodeType":"YulIdentifier","src":"4917:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4891:3:15"},"nodeType":"YulFunctionCall","src":"4891:29:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4922:7:15"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"4862:28:15"},"nodeType":"YulFunctionCall","src":"4862:68:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4850:6:15"},"nodeType":"YulFunctionCall","src":"4850:81:15"},"nodeType":"YulExpressionStatement","src":"4850:81:15"},{"nodeType":"YulAssignment","src":"4944:19:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4955:3:15"},{"name":"_4","nodeType":"YulIdentifier","src":"4960:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4951:3:15"},"nodeType":"YulFunctionCall","src":"4951:12:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4944:3:15"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4620:3:15"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4625:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4617:2:15"},"nodeType":"YulFunctionCall","src":"4617:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4633:23:15","statements":[{"nodeType":"YulAssignment","src":"4635:19:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4646:3:15"},{"name":"_4","nodeType":"YulIdentifier","src":"4651:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:15"},"nodeType":"YulFunctionCall","src":"4642:12:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4635:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"4613:3:15","statements":[]},"src":"4609:364:15"},{"nodeType":"YulAssignment","src":"4982:15:15","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"4992:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4982:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"5006:48:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5039:9:15"},{"name":"_4","nodeType":"YulIdentifier","src":"5050:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5035:3:15"},"nodeType":"YulFunctionCall","src":"5035:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5022:12:15"},"nodeType":"YulFunctionCall","src":"5022:32:15"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5010:8:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"5083:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5092:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5095:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5085:6:15"},"nodeType":"YulFunctionCall","src":"5085:12:15"},"nodeType":"YulExpressionStatement","src":"5085:12:15"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5069:8:15"},{"name":"_1","nodeType":"YulIdentifier","src":"5079:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5066:2:15"},"nodeType":"YulFunctionCall","src":"5066:16:15"},"nodeType":"YulIf","src":"5063:36:15"},{"nodeType":"YulAssignment","src":"5108:83:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5161:9:15"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5172:8:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5157:3:15"},"nodeType":"YulFunctionCall","src":"5157:24:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5183:7:15"}],"functionName":{"name":"abi_decode_array_array_uint256_dyn_dyn","nodeType":"YulIdentifier","src":"5118:38:15"},"nodeType":"YulFunctionCall","src":"5118:73:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5108:6:15"}]}]},"name":"abi_decode_tuple_t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3920:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3931:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3943:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3951:6:15","type":""}],"src":"3775:1422:15"},{"body":{"nodeType":"YulBlock","src":"5303:76:15","statements":[{"nodeType":"YulAssignment","src":"5313:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5325:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5336:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5321:3:15"},"nodeType":"YulFunctionCall","src":"5321:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5313:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5355:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"5366:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5348:6:15"},"nodeType":"YulFunctionCall","src":"5348:25:15"},"nodeType":"YulExpressionStatement","src":"5348:25:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5272:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5283:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5294:4:15","type":""}],"src":"5202:177:15"},{"body":{"nodeType":"YulBlock","src":"5505:270:15","statements":[{"body":{"nodeType":"YulBlock","src":"5552:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5561:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5564:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5554:6:15"},"nodeType":"YulFunctionCall","src":"5554:12:15"},"nodeType":"YulExpressionStatement","src":"5554:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5526:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5535:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5522:3:15"},"nodeType":"YulFunctionCall","src":"5522:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5547:3:15","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5518:3:15"},"nodeType":"YulFunctionCall","src":"5518:33:15"},"nodeType":"YulIf","src":"5515:53:15"},{"nodeType":"YulAssignment","src":"5577:39:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5606:9:15"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5587:18:15"},"nodeType":"YulFunctionCall","src":"5587:29:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5577:6:15"}]},{"nodeType":"YulAssignment","src":"5625:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5652:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5663:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5648:3:15"},"nodeType":"YulFunctionCall","src":"5648:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5635:12:15"},"nodeType":"YulFunctionCall","src":"5635:32:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5625:6:15"}]},{"nodeType":"YulAssignment","src":"5676:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5703:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5714:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5699:3:15"},"nodeType":"YulFunctionCall","src":"5699:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5686:12:15"},"nodeType":"YulFunctionCall","src":"5686:32:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5676:6:15"}]},{"nodeType":"YulAssignment","src":"5727:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5754:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5765:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5750:3:15"},"nodeType":"YulFunctionCall","src":"5750:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5737:12:15"},"nodeType":"YulFunctionCall","src":"5737:32:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5727:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5447:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5458:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5470:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5478:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5486:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5494:6:15","type":""}],"src":"5384:391:15"},{"body":{"nodeType":"YulBlock","src":"5850:110:15","statements":[{"body":{"nodeType":"YulBlock","src":"5896:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5905:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5908:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5898:6:15"},"nodeType":"YulFunctionCall","src":"5898:12:15"},"nodeType":"YulExpressionStatement","src":"5898:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5871:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5880:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5867:3:15"},"nodeType":"YulFunctionCall","src":"5867:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5892:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5863:3:15"},"nodeType":"YulFunctionCall","src":"5863:32:15"},"nodeType":"YulIf","src":"5860:52:15"},{"nodeType":"YulAssignment","src":"5921:33:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5944:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5931:12:15"},"nodeType":"YulFunctionCall","src":"5931:23:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5921:6:15"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5816:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5827:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5839:6:15","type":""}],"src":"5780:180:15"},{"body":{"nodeType":"YulBlock","src":"6009:60:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6026:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6035:5:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6050:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6055:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6046:3:15"},"nodeType":"YulFunctionCall","src":"6046:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"6059:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6042:3:15"},"nodeType":"YulFunctionCall","src":"6042:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6031:3:15"},"nodeType":"YulFunctionCall","src":"6031:31:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6019:6:15"},"nodeType":"YulFunctionCall","src":"6019:44:15"},"nodeType":"YulExpressionStatement","src":"6019:44:15"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5993:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6000:3:15","type":""}],"src":"5965:104:15"},{"body":{"nodeType":"YulBlock","src":"6175:102:15","statements":[{"nodeType":"YulAssignment","src":"6185:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6197:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6208:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6193:3:15"},"nodeType":"YulFunctionCall","src":"6193:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6185:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6227:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6242:6:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6258:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6263:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6254:3:15"},"nodeType":"YulFunctionCall","src":"6254:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"6267:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6250:3:15"},"nodeType":"YulFunctionCall","src":"6250:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6238:3:15"},"nodeType":"YulFunctionCall","src":"6238:32:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6220:6:15"},"nodeType":"YulFunctionCall","src":"6220:51:15"},"nodeType":"YulExpressionStatement","src":"6220:51:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6144:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6155:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6166:4:15","type":""}],"src":"6074:203:15"},{"body":{"nodeType":"YulBlock","src":"6352:116:15","statements":[{"body":{"nodeType":"YulBlock","src":"6398:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6407:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6410:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6400:6:15"},"nodeType":"YulFunctionCall","src":"6400:12:15"},"nodeType":"YulExpressionStatement","src":"6400:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6373:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6382:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6369:3:15"},"nodeType":"YulFunctionCall","src":"6369:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"6394:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6365:3:15"},"nodeType":"YulFunctionCall","src":"6365:32:15"},"nodeType":"YulIf","src":"6362:52:15"},{"nodeType":"YulAssignment","src":"6423:39:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6452:9:15"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6433:18:15"},"nodeType":"YulFunctionCall","src":"6433:29:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6423:6:15"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6318:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6329:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6341:6:15","type":""}],"src":"6282:186:15"},{"body":{"nodeType":"YulBlock","src":"6515:76:15","statements":[{"body":{"nodeType":"YulBlock","src":"6569:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6578:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6581:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6571:6:15"},"nodeType":"YulFunctionCall","src":"6571:12:15"},"nodeType":"YulExpressionStatement","src":"6571:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6538:5:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6559:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6552:6:15"},"nodeType":"YulFunctionCall","src":"6552:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6545:6:15"},"nodeType":"YulFunctionCall","src":"6545:21:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6535:2:15"},"nodeType":"YulFunctionCall","src":"6535:32:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6528:6:15"},"nodeType":"YulFunctionCall","src":"6528:40:15"},"nodeType":"YulIf","src":"6525:60:15"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6504:5:15","type":""}],"src":"6473:118:15"},{"body":{"nodeType":"YulBlock","src":"6730:1073:15","statements":[{"body":{"nodeType":"YulBlock","src":"6776:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6785:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6788:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6778:6:15"},"nodeType":"YulFunctionCall","src":"6778:12:15"},"nodeType":"YulExpressionStatement","src":"6778:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6751:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6760:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6747:3:15"},"nodeType":"YulFunctionCall","src":"6747:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"6772:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6743:3:15"},"nodeType":"YulFunctionCall","src":"6743:32:15"},"nodeType":"YulIf","src":"6740:52:15"},{"nodeType":"YulVariableDeclaration","src":"6801:37:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6828:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6815:12:15"},"nodeType":"YulFunctionCall","src":"6815:23:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6805:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6847:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6857:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6851:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6902:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6911:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6914:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6904:6:15"},"nodeType":"YulFunctionCall","src":"6904:12:15"},"nodeType":"YulExpressionStatement","src":"6904:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6890:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"6898:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6887:2:15"},"nodeType":"YulFunctionCall","src":"6887:14:15"},"nodeType":"YulIf","src":"6884:34:15"},{"nodeType":"YulAssignment","src":"6927:71:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6970:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6981:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6966:3:15"},"nodeType":"YulFunctionCall","src":"6966:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6990:7:15"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"6937:28:15"},"nodeType":"YulFunctionCall","src":"6937:61:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6927:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"7007:12:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7017:2:15","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7011:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7028:48:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7061:9:15"},{"name":"_2","nodeType":"YulIdentifier","src":"7072:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7057:3:15"},"nodeType":"YulFunctionCall","src":"7057:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7044:12:15"},"nodeType":"YulFunctionCall","src":"7044:32:15"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7032:8:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7105:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7114:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7117:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7107:6:15"},"nodeType":"YulFunctionCall","src":"7107:12:15"},"nodeType":"YulExpressionStatement","src":"7107:12:15"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7091:8:15"},{"name":"_1","nodeType":"YulIdentifier","src":"7101:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7088:2:15"},"nodeType":"YulFunctionCall","src":"7088:16:15"},"nodeType":"YulIf","src":"7085:36:15"},{"nodeType":"YulVariableDeclaration","src":"7130:34:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7144:9:15"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7155:8:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7140:3:15"},"nodeType":"YulFunctionCall","src":"7140:24:15"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"7134:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7212:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7221:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7224:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7214:6:15"},"nodeType":"YulFunctionCall","src":"7214:12:15"},"nodeType":"YulExpressionStatement","src":"7214:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7191:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"7195:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7187:3:15"},"nodeType":"YulFunctionCall","src":"7187:13:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7202:7:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7183:3:15"},"nodeType":"YulFunctionCall","src":"7183:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7176:6:15"},"nodeType":"YulFunctionCall","src":"7176:35:15"},"nodeType":"YulIf","src":"7173:55:15"},{"nodeType":"YulVariableDeclaration","src":"7237:26:15","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7260:2:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7247:12:15"},"nodeType":"YulFunctionCall","src":"7247:16:15"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"7241:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7272:71:15","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"7339:2:15"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"7299:39:15"},"nodeType":"YulFunctionCall","src":"7299:43:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7283:15:15"},"nodeType":"YulFunctionCall","src":"7283:60:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7276:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7352:16:15","value":{"name":"dst","nodeType":"YulIdentifier","src":"7365:3:15"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"7356:5:15","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7384:3:15"},{"name":"_4","nodeType":"YulIdentifier","src":"7389:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7377:6:15"},"nodeType":"YulFunctionCall","src":"7377:15:15"},"nodeType":"YulExpressionStatement","src":"7377:15:15"},{"nodeType":"YulAssignment","src":"7401:19:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7412:3:15"},{"name":"_2","nodeType":"YulIdentifier","src":"7417:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7408:3:15"},"nodeType":"YulFunctionCall","src":"7408:12:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7401:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"7429:42:15","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7451:2:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7459:1:15","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"7462:2:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7455:3:15"},"nodeType":"YulFunctionCall","src":"7455:10:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7447:3:15"},"nodeType":"YulFunctionCall","src":"7447:19:15"},{"name":"_2","nodeType":"YulIdentifier","src":"7468:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7443:3:15"},"nodeType":"YulFunctionCall","src":"7443:28:15"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7433:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7503:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7512:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7515:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7505:6:15"},"nodeType":"YulFunctionCall","src":"7505:12:15"},"nodeType":"YulExpressionStatement","src":"7505:12:15"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7486:6:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7494:7:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7483:2:15"},"nodeType":"YulFunctionCall","src":"7483:19:15"},"nodeType":"YulIf","src":"7480:39:15"},{"nodeType":"YulVariableDeclaration","src":"7528:22:15","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7543:2:15"},{"name":"_2","nodeType":"YulIdentifier","src":"7547:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7539:3:15"},"nodeType":"YulFunctionCall","src":"7539:11:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7532:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7615:158:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7629:30:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7655:3:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7642:12:15"},"nodeType":"YulFunctionCall","src":"7642:17:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7633:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7694:5:15"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"7672:21:15"},"nodeType":"YulFunctionCall","src":"7672:28:15"},"nodeType":"YulExpressionStatement","src":"7672:28:15"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7720:3:15"},{"name":"value","nodeType":"YulIdentifier","src":"7725:5:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7713:6:15"},"nodeType":"YulFunctionCall","src":"7713:18:15"},"nodeType":"YulExpressionStatement","src":"7713:18:15"},{"nodeType":"YulAssignment","src":"7744:19:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7755:3:15"},{"name":"_2","nodeType":"YulIdentifier","src":"7760:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7751:3:15"},"nodeType":"YulFunctionCall","src":"7751:12:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7744:3:15"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7570:3:15"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7575:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:15"},"nodeType":"YulFunctionCall","src":"7567:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7583:23:15","statements":[{"nodeType":"YulAssignment","src":"7585:19:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7596:3:15"},{"name":"_2","nodeType":"YulIdentifier","src":"7601:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7592:3:15"},"nodeType":"YulFunctionCall","src":"7592:12:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7585:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"7563:3:15","statements":[]},"src":"7559:214:15"},{"nodeType":"YulAssignment","src":"7782:15:15","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"7792:5:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7782:6:15"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6688:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6699:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6711:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6719:6:15","type":""}],"src":"6596:1207:15"},{"body":{"nodeType":"YulBlock","src":"7982:164:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7999:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8010:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7992:6:15"},"nodeType":"YulFunctionCall","src":"7992:21:15"},"nodeType":"YulExpressionStatement","src":"7992:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8033:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8044:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8029:3:15"},"nodeType":"YulFunctionCall","src":"8029:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"8049:2:15","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8022:6:15"},"nodeType":"YulFunctionCall","src":"8022:30:15"},"nodeType":"YulExpressionStatement","src":"8022:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8072:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8083:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8068:3:15"},"nodeType":"YulFunctionCall","src":"8068:18:15"},{"hexValue":"496e76616c6964206c656e677468","kind":"string","nodeType":"YulLiteral","src":"8088:16:15","type":"","value":"Invalid length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8061:6:15"},"nodeType":"YulFunctionCall","src":"8061:44:15"},"nodeType":"YulExpressionStatement","src":"8061:44:15"},{"nodeType":"YulAssignment","src":"8114:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8126:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8137:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8122:3:15"},"nodeType":"YulFunctionCall","src":"8122:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8114:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7959:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7973:4:15","type":""}],"src":"7808:338:15"},{"body":{"nodeType":"YulBlock","src":"8183:95:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8200:1:15","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8207:3:15","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8212:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8203:3:15"},"nodeType":"YulFunctionCall","src":"8203:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8193:6:15"},"nodeType":"YulFunctionCall","src":"8193:31:15"},"nodeType":"YulExpressionStatement","src":"8193:31:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8240:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8243:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8233:6:15"},"nodeType":"YulFunctionCall","src":"8233:15:15"},"nodeType":"YulExpressionStatement","src":"8233:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8264:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8267:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8257:6:15"},"nodeType":"YulFunctionCall","src":"8257:15:15"},"nodeType":"YulExpressionStatement","src":"8257:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8151:127:15"},{"body":{"nodeType":"YulBlock","src":"8315:95:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8332:1:15","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8339:3:15","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8344:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8335:3:15"},"nodeType":"YulFunctionCall","src":"8335:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8325:6:15"},"nodeType":"YulFunctionCall","src":"8325:31:15"},"nodeType":"YulExpressionStatement","src":"8325:31:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8372:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8375:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8365:6:15"},"nodeType":"YulFunctionCall","src":"8365:15:15"},"nodeType":"YulExpressionStatement","src":"8365:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8396:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8399:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8389:6:15"},"nodeType":"YulFunctionCall","src":"8389:15:15"},"nodeType":"YulExpressionStatement","src":"8389:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8283:127:15"},{"body":{"nodeType":"YulBlock","src":"8462:88:15","statements":[{"body":{"nodeType":"YulBlock","src":"8493:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8495:16:15"},"nodeType":"YulFunctionCall","src":"8495:18:15"},"nodeType":"YulExpressionStatement","src":"8495:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8478:5:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8489:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8485:3:15"},"nodeType":"YulFunctionCall","src":"8485:6:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8475:2:15"},"nodeType":"YulFunctionCall","src":"8475:17:15"},"nodeType":"YulIf","src":"8472:43:15"},{"nodeType":"YulAssignment","src":"8524:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8535:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"8542:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8531:3:15"},"nodeType":"YulFunctionCall","src":"8531:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8524:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8444:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8454:3:15","type":""}],"src":"8415:135:15"},{"body":{"nodeType":"YulBlock","src":"8729:161:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8746:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8757:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8739:6:15"},"nodeType":"YulFunctionCall","src":"8739:21:15"},"nodeType":"YulExpressionStatement","src":"8739:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8780:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8791:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8776:3:15"},"nodeType":"YulFunctionCall","src":"8776:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"8796:2:15","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8769:6:15"},"nodeType":"YulFunctionCall","src":"8769:30:15"},"nodeType":"YulExpressionStatement","src":"8769:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8819:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8830:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8815:3:15"},"nodeType":"YulFunctionCall","src":"8815:18:15"},{"hexValue":"57726f6e672076616c7565","kind":"string","nodeType":"YulLiteral","src":"8835:13:15","type":"","value":"Wrong value"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8808:6:15"},"nodeType":"YulFunctionCall","src":"8808:41:15"},"nodeType":"YulExpressionStatement","src":"8808:41:15"},{"nodeType":"YulAssignment","src":"8858:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8870:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8881:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8866:3:15"},"nodeType":"YulFunctionCall","src":"8866:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8858:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8706:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8720:4:15","type":""}],"src":"8555:335:15"},{"body":{"nodeType":"YulBlock","src":"9069:178:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9086:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9097:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9079:6:15"},"nodeType":"YulFunctionCall","src":"9079:21:15"},"nodeType":"YulExpressionStatement","src":"9079:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9120:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9131:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9116:3:15"},"nodeType":"YulFunctionCall","src":"9116:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"9136:2:15","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9109:6:15"},"nodeType":"YulFunctionCall","src":"9109:30:15"},"nodeType":"YulExpressionStatement","src":"9109:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9159:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9170:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9155:3:15"},"nodeType":"YulFunctionCall","src":"9155:18:15"},{"hexValue":"4e465420686173206e6f74206265656e2077686974656c6973746564","kind":"string","nodeType":"YulLiteral","src":"9175:30:15","type":"","value":"NFT has not been whitelisted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9148:6:15"},"nodeType":"YulFunctionCall","src":"9148:58:15"},"nodeType":"YulExpressionStatement","src":"9148:58:15"},{"nodeType":"YulAssignment","src":"9215:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9227:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9238:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9223:3:15"},"nodeType":"YulFunctionCall","src":"9223:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9215:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_d40c304804677979b02ddb540cd84bf11c81490088b00be94027707c4cb69ab9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9046:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9060:4:15","type":""}],"src":"8895:352:15"},{"body":{"nodeType":"YulBlock","src":"9300:80:15","statements":[{"body":{"nodeType":"YulBlock","src":"9327:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9329:16:15"},"nodeType":"YulFunctionCall","src":"9329:18:15"},"nodeType":"YulExpressionStatement","src":"9329:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9316:1:15"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9323:1:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9319:3:15"},"nodeType":"YulFunctionCall","src":"9319:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9313:2:15"},"nodeType":"YulFunctionCall","src":"9313:13:15"},"nodeType":"YulIf","src":"9310:39:15"},{"nodeType":"YulAssignment","src":"9358:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9369:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"9372:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9365:3:15"},"nodeType":"YulFunctionCall","src":"9365:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9358:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9283:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"9286:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9292:3:15","type":""}],"src":"9252:128:15"},{"body":{"nodeType":"YulBlock","src":"9437:116:15","statements":[{"body":{"nodeType":"YulBlock","src":"9496:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9498:16:15"},"nodeType":"YulFunctionCall","src":"9498:18:15"},"nodeType":"YulExpressionStatement","src":"9498:18:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9468:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9461:6:15"},"nodeType":"YulFunctionCall","src":"9461:9:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9454:6:15"},"nodeType":"YulFunctionCall","src":"9454:17:15"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9476:1:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9487:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9483:3:15"},"nodeType":"YulFunctionCall","src":"9483:6:15"},{"name":"x","nodeType":"YulIdentifier","src":"9491:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9479:3:15"},"nodeType":"YulFunctionCall","src":"9479:14:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9473:2:15"},"nodeType":"YulFunctionCall","src":"9473:21:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9450:3:15"},"nodeType":"YulFunctionCall","src":"9450:45:15"},"nodeType":"YulIf","src":"9447:71:15"},{"nodeType":"YulAssignment","src":"9527:20:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9542:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"9545:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9538:3:15"},"nodeType":"YulFunctionCall","src":"9538:9:15"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"9527:7:15"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9416:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"9419:1:15","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"9425:7:15","type":""}],"src":"9385:168:15"},{"body":{"nodeType":"YulBlock","src":"9604:171:15","statements":[{"body":{"nodeType":"YulBlock","src":"9635:111:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9656:1:15","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9663:3:15","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9668:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9659:3:15"},"nodeType":"YulFunctionCall","src":"9659:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9649:6:15"},"nodeType":"YulFunctionCall","src":"9649:31:15"},"nodeType":"YulExpressionStatement","src":"9649:31:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9700:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9703:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9693:6:15"},"nodeType":"YulFunctionCall","src":"9693:15:15"},"nodeType":"YulExpressionStatement","src":"9693:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9728:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9731:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9721:6:15"},"nodeType":"YulFunctionCall","src":"9721:15:15"},"nodeType":"YulExpressionStatement","src":"9721:15:15"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9624:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9617:6:15"},"nodeType":"YulFunctionCall","src":"9617:9:15"},"nodeType":"YulIf","src":"9614:132:15"},{"nodeType":"YulAssignment","src":"9755:14:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9764:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"9767:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9760:3:15"},"nodeType":"YulFunctionCall","src":"9760:9:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9755:1:15"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9589:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"9592:1:15","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"9598:1:15","type":""}],"src":"9558:217:15"},{"body":{"nodeType":"YulBlock","src":"9954:236:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9971:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9982:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9964:6:15"},"nodeType":"YulFunctionCall","src":"9964:21:15"},"nodeType":"YulExpressionStatement","src":"9964:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10005:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10016:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10001:3:15"},"nodeType":"YulFunctionCall","src":"10001:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"10021:2:15","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9994:6:15"},"nodeType":"YulFunctionCall","src":"9994:30:15"},"nodeType":"YulExpressionStatement","src":"9994:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10044:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10055:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10040:3:15"},"nodeType":"YulFunctionCall","src":"10040:18:15"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"10060:34:15","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10033:6:15"},"nodeType":"YulFunctionCall","src":"10033:62:15"},"nodeType":"YulExpressionStatement","src":"10033:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10115:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10126:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10111:3:15"},"nodeType":"YulFunctionCall","src":"10111:18:15"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"10131:16:15","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10104:6:15"},"nodeType":"YulFunctionCall","src":"10104:44:15"},"nodeType":"YulExpressionStatement","src":"10104:44:15"},{"nodeType":"YulAssignment","src":"10157:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10169:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10180:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10165:3:15"},"nodeType":"YulFunctionCall","src":"10165:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10157:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9931:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9945:4:15","type":""}],"src":"9780:410:15"},{"body":{"nodeType":"YulBlock","src":"10369:176:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10386:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10397:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10379:6:15"},"nodeType":"YulFunctionCall","src":"10379:21:15"},"nodeType":"YulExpressionStatement","src":"10379:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10420:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10431:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10416:3:15"},"nodeType":"YulFunctionCall","src":"10416:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"10436:2:15","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10409:6:15"},"nodeType":"YulFunctionCall","src":"10409:30:15"},"nodeType":"YulExpressionStatement","src":"10409:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10459:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10470:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10455:3:15"},"nodeType":"YulFunctionCall","src":"10455:18:15"},{"hexValue":"4e4654204f776e657220686173206e6f74206265656e20736574","kind":"string","nodeType":"YulLiteral","src":"10475:28:15","type":"","value":"NFT Owner has not been set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10448:6:15"},"nodeType":"YulFunctionCall","src":"10448:56:15"},"nodeType":"YulExpressionStatement","src":"10448:56:15"},{"nodeType":"YulAssignment","src":"10513:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10525:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10536:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10521:3:15"},"nodeType":"YulFunctionCall","src":"10521:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10513:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_7979e3b12d07033d039322ebf8b023a9cefc4db0df47eddf703bee910079cda9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10346:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10360:4:15","type":""}],"src":"10195:350:15"},{"body":{"nodeType":"YulBlock","src":"10724:228:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10741:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10752:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10734:6:15"},"nodeType":"YulFunctionCall","src":"10734:21:15"},"nodeType":"YulExpressionStatement","src":"10734:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10775:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10786:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10771:3:15"},"nodeType":"YulFunctionCall","src":"10771:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"10791:2:15","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10764:6:15"},"nodeType":"YulFunctionCall","src":"10764:30:15"},"nodeType":"YulExpressionStatement","src":"10764:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10814:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10825:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10810:3:15"},"nodeType":"YulFunctionCall","src":"10810:18:15"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"10830:34:15","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10803:6:15"},"nodeType":"YulFunctionCall","src":"10803:62:15"},"nodeType":"YulExpressionStatement","src":"10803:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10885:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10896:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10881:3:15"},"nodeType":"YulFunctionCall","src":"10881:18:15"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"10901:8:15","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10874:6:15"},"nodeType":"YulFunctionCall","src":"10874:36:15"},"nodeType":"YulExpressionStatement","src":"10874:36:15"},{"nodeType":"YulAssignment","src":"10919:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10931:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10942:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10927:3:15"},"nodeType":"YulFunctionCall","src":"10927:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10919:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10701:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10715:4:15","type":""}],"src":"10550:402:15"},{"body":{"nodeType":"YulBlock","src":"11131:182:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11148:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11159:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11141:6:15"},"nodeType":"YulFunctionCall","src":"11141:21:15"},"nodeType":"YulExpressionStatement","src":"11141:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11182:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11193:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11178:3:15"},"nodeType":"YulFunctionCall","src":"11178:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"11198:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11171:6:15"},"nodeType":"YulFunctionCall","src":"11171:30:15"},"nodeType":"YulExpressionStatement","src":"11171:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11221:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11232:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11217:3:15"},"nodeType":"YulFunctionCall","src":"11217:18:15"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11237:34:15","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11210:6:15"},"nodeType":"YulFunctionCall","src":"11210:62:15"},"nodeType":"YulExpressionStatement","src":"11210:62:15"},{"nodeType":"YulAssignment","src":"11281:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11293:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11304:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11289:3:15"},"nodeType":"YulFunctionCall","src":"11289:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11281:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11108:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11122:4:15","type":""}],"src":"10957:356:15"},{"body":{"nodeType":"YulBlock","src":"11441:161:15","statements":[{"nodeType":"YulAssignment","src":"11451:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11463:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11474:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11459:3:15"},"nodeType":"YulFunctionCall","src":"11459:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11451:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11493:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11508:6:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11524:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11529:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11520:3:15"},"nodeType":"YulFunctionCall","src":"11520:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"11533:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11516:3:15"},"nodeType":"YulFunctionCall","src":"11516:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11504:3:15"},"nodeType":"YulFunctionCall","src":"11504:32:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11486:6:15"},"nodeType":"YulFunctionCall","src":"11486:51:15"},"nodeType":"YulExpressionStatement","src":"11486:51:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11557:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11568:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11553:3:15"},"nodeType":"YulFunctionCall","src":"11553:18:15"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11587:6:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11580:6:15"},"nodeType":"YulFunctionCall","src":"11580:14:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11573:6:15"},"nodeType":"YulFunctionCall","src":"11573:22:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11546:6:15"},"nodeType":"YulFunctionCall","src":"11546:50:15"},"nodeType":"YulExpressionStatement","src":"11546:50:15"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11402:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11413:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11421:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11432:4:15","type":""}],"src":"11318:284:15"},{"body":{"nodeType":"YulBlock","src":"11736:175:15","statements":[{"nodeType":"YulAssignment","src":"11746:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11758:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11769:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11754:3:15"},"nodeType":"YulFunctionCall","src":"11754:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11746:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"11781:29:15","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11799:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11804:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11795:3:15"},"nodeType":"YulFunctionCall","src":"11795:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"11808:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11791:3:15"},"nodeType":"YulFunctionCall","src":"11791:19:15"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11785:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11826:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11841:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"11849:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11837:3:15"},"nodeType":"YulFunctionCall","src":"11837:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11819:6:15"},"nodeType":"YulFunctionCall","src":"11819:34:15"},"nodeType":"YulExpressionStatement","src":"11819:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11873:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11884:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11869:3:15"},"nodeType":"YulFunctionCall","src":"11869:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11893:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"11901:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11889:3:15"},"nodeType":"YulFunctionCall","src":"11889:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11862:6:15"},"nodeType":"YulFunctionCall","src":"11862:43:15"},"nodeType":"YulExpressionStatement","src":"11862:43:15"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11697:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11708:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11716:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11727:4:15","type":""}],"src":"11607:304:15"},{"body":{"nodeType":"YulBlock","src":"12045:145:15","statements":[{"nodeType":"YulAssignment","src":"12055:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12067:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12078:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12063:3:15"},"nodeType":"YulFunctionCall","src":"12063:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12055:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12097:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12112:6:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12128:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12133:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12124:3:15"},"nodeType":"YulFunctionCall","src":"12124:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"12137:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12120:3:15"},"nodeType":"YulFunctionCall","src":"12120:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12108:3:15"},"nodeType":"YulFunctionCall","src":"12108:32:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12090:6:15"},"nodeType":"YulFunctionCall","src":"12090:51:15"},"nodeType":"YulExpressionStatement","src":"12090:51:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12161:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12172:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12157:3:15"},"nodeType":"YulFunctionCall","src":"12157:18:15"},{"name":"value1","nodeType":"YulIdentifier","src":"12177:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12150:6:15"},"nodeType":"YulFunctionCall","src":"12150:34:15"},"nodeType":"YulExpressionStatement","src":"12150:34:15"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12006:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12017:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12025:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12036:4:15","type":""}],"src":"11916:274:15"},{"body":{"nodeType":"YulBlock","src":"12273:167:15","statements":[{"body":{"nodeType":"YulBlock","src":"12319:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12328:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12331:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12321:6:15"},"nodeType":"YulFunctionCall","src":"12321:12:15"},"nodeType":"YulExpressionStatement","src":"12321:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12294:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12303:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12290:3:15"},"nodeType":"YulFunctionCall","src":"12290:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"12315:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12286:3:15"},"nodeType":"YulFunctionCall","src":"12286:32:15"},"nodeType":"YulIf","src":"12283:52:15"},{"nodeType":"YulVariableDeclaration","src":"12344:29:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12363:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12357:5:15"},"nodeType":"YulFunctionCall","src":"12357:16:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12348:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12404:5:15"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"12382:21:15"},"nodeType":"YulFunctionCall","src":"12382:28:15"},"nodeType":"YulExpressionStatement","src":"12382:28:15"},{"nodeType":"YulAssignment","src":"12419:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"12429:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12419:6:15"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12239:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12250:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12262:6:15","type":""}],"src":"12195:245:15"},{"body":{"nodeType":"YulBlock","src":"12619:168:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12636:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12647:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12629:6:15"},"nodeType":"YulFunctionCall","src":"12629:21:15"},"nodeType":"YulExpressionStatement","src":"12629:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12670:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12681:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12666:3:15"},"nodeType":"YulFunctionCall","src":"12666:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"12686:2:15","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12659:6:15"},"nodeType":"YulFunctionCall","src":"12659:30:15"},"nodeType":"YulExpressionStatement","src":"12659:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12709:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12720:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12705:3:15"},"nodeType":"YulFunctionCall","src":"12705:18:15"},{"hexValue":"4661696c656420746f206d696e74204e4654","kind":"string","nodeType":"YulLiteral","src":"12725:20:15","type":"","value":"Failed to mint NFT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12698:6:15"},"nodeType":"YulFunctionCall","src":"12698:48:15"},"nodeType":"YulExpressionStatement","src":"12698:48:15"},{"nodeType":"YulAssignment","src":"12755:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12767:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12778:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12763:3:15"},"nodeType":"YulFunctionCall","src":"12763:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12755:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_7b25856ed5a9729fc86b5fe89ab2fe1c7b5246f80481dfc0d0b2b84dc8c2a851__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12596:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12610:4:15","type":""}],"src":"12445:342:15"},{"body":{"nodeType":"YulBlock","src":"13077:1050:15","statements":[{"nodeType":"YulVariableDeclaration","src":"13087:33:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13105:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13116:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13101:3:15"},"nodeType":"YulFunctionCall","src":"13101:19:15"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13091:6:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13136:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13147:3:15","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13129:6:15"},"nodeType":"YulFunctionCall","src":"13129:22:15"},"nodeType":"YulExpressionStatement","src":"13129:22:15"},{"nodeType":"YulVariableDeclaration","src":"13160:17:15","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"13171:6:15"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"13164:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13186:27:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13206:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13200:5:15"},"nodeType":"YulFunctionCall","src":"13200:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13190:6:15","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13229:6:15"},{"name":"length","nodeType":"YulIdentifier","src":"13237:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13222:6:15"},"nodeType":"YulFunctionCall","src":"13222:22:15"},"nodeType":"YulExpressionStatement","src":"13222:22:15"},{"nodeType":"YulAssignment","src":"13253:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13264:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13275:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13260:3:15"},"nodeType":"YulFunctionCall","src":"13260:19:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13253:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"13288:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"13298:4:15","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13292:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13311:29:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13329:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"13337:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13325:3:15"},"nodeType":"YulFunctionCall","src":"13325:15:15"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13315:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13349:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"13358:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13353:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"13417:146:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13438:3:15"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13453:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13447:5:15"},"nodeType":"YulFunctionCall","src":"13447:13:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13470:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13475:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13466:3:15"},"nodeType":"YulFunctionCall","src":"13466:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"13479:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13462:3:15"},"nodeType":"YulFunctionCall","src":"13462:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13443:3:15"},"nodeType":"YulFunctionCall","src":"13443:39:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13431:6:15"},"nodeType":"YulFunctionCall","src":"13431:52:15"},"nodeType":"YulExpressionStatement","src":"13431:52:15"},{"nodeType":"YulAssignment","src":"13496:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13507:3:15"},{"name":"_1","nodeType":"YulIdentifier","src":"13512:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13503:3:15"},"nodeType":"YulFunctionCall","src":"13503:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13496:3:15"}]},{"nodeType":"YulAssignment","src":"13528:25:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13542:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"13550:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13538:3:15"},"nodeType":"YulFunctionCall","src":"13538:15:15"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13528:6:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13379:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"13382:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13376:2:15"},"nodeType":"YulFunctionCall","src":"13376:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13390:18:15","statements":[{"nodeType":"YulAssignment","src":"13392:14:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13401:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"13404:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13397:3:15"},"nodeType":"YulFunctionCall","src":"13397:9:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13392:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"13372:3:15","statements":[]},"src":"13368:195:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13583:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"13594:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13579:3:15"},"nodeType":"YulFunctionCall","src":"13579:18:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13603:3:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13608:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13599:3:15"},"nodeType":"YulFunctionCall","src":"13599:19:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13572:6:15"},"nodeType":"YulFunctionCall","src":"13572:47:15"},"nodeType":"YulExpressionStatement","src":"13572:47:15"},{"nodeType":"YulVariableDeclaration","src":"13628:16:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"13641:3:15"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"13632:5:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13653:29:15","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13675:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13669:5:15"},"nodeType":"YulFunctionCall","src":"13669:13:15"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"13657:8:15","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13698:3:15"},{"name":"length_1","nodeType":"YulIdentifier","src":"13703:8:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13691:6:15"},"nodeType":"YulFunctionCall","src":"13691:21:15"},"nodeType":"YulExpressionStatement","src":"13691:21:15"},{"nodeType":"YulAssignment","src":"13721:21:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13734:3:15"},{"name":"_1","nodeType":"YulIdentifier","src":"13739:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13730:3:15"},"nodeType":"YulFunctionCall","src":"13730:12:15"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13721:5:15"}]},{"nodeType":"YulVariableDeclaration","src":"13751:31:15","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13771:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"13779:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13767:3:15"},"nodeType":"YulFunctionCall","src":"13767:15:15"},"variables":[{"name":"srcPtr_1","nodeType":"YulTypedName","src":"13755:8:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13791:12:15","value":{"kind":"number","nodeType":"YulLiteral","src":"13802:1:15","type":"","value":"0"},"variables":[{"name":"i_1","nodeType":"YulTypedName","src":"13795:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"13869:132:15","statements":[{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13890:5:15"},{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"13903:8:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13897:5:15"},"nodeType":"YulFunctionCall","src":"13897:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13883:6:15"},"nodeType":"YulFunctionCall","src":"13883:30:15"},"nodeType":"YulExpressionStatement","src":"13883:30:15"},{"nodeType":"YulAssignment","src":"13926:23:15","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13939:5:15"},{"name":"_1","nodeType":"YulIdentifier","src":"13946:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13935:3:15"},"nodeType":"YulFunctionCall","src":"13935:14:15"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13926:5:15"}]},{"nodeType":"YulAssignment","src":"13962:29:15","value":{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"13978:8:15"},{"name":"_1","nodeType":"YulIdentifier","src":"13988:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13974:3:15"},"nodeType":"YulFunctionCall","src":"13974:17:15"},"variableNames":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"13962:8:15"}]}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"13823:3:15"},{"name":"length_1","nodeType":"YulIdentifier","src":"13828:8:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13820:2:15"},"nodeType":"YulFunctionCall","src":"13820:17:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13838:22:15","statements":[{"nodeType":"YulAssignment","src":"13840:18:15","value":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"13851:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"13856:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13847:3:15"},"nodeType":"YulFunctionCall","src":"13847:11:15"},"variableNames":[{"name":"i_1","nodeType":"YulIdentifier","src":"13840:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"13816:3:15","statements":[]},"src":"13812:189:15"},{"nodeType":"YulAssignment","src":"14010:13:15","value":{"name":"pos_1","nodeType":"YulIdentifier","src":"14018:5:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14010:4:15"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14051:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14063:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14074:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14059:3:15"},"nodeType":"YulFunctionCall","src":"14059:18:15"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"14032:18:15"},"nodeType":"YulFunctionCall","src":"14032:46:15"},"nodeType":"YulExpressionStatement","src":"14032:46:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14098:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14109:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14094:3:15"},"nodeType":"YulFunctionCall","src":"14094:18:15"},{"name":"value3","nodeType":"YulIdentifier","src":"14114:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14087:6:15"},"nodeType":"YulFunctionCall","src":"14087:34:15"},"nodeType":"YulExpressionStatement","src":"14087:34:15"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13022:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13033:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13041:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13049:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13057:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13068:4:15","type":""}],"src":"12792:1335:15"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_array_array_uint256_dyn_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let _3 := 5\n        let srcEnd := add(add(offset, shl(_3, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff)\n            {\n                let _4 := 0\n                revert(_4, _4)\n            }\n            let _5 := add(offset, innerOffset)\n            if iszero(slt(add(_5, 63), end))\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            let _7 := calldataload(add(_5, _2))\n            let _8 := 64\n            let dst_2 := allocate_memory(array_allocation_size_array_address_dyn(_7))\n            let dst_3 := dst_2\n            mstore(dst_2, _7)\n            dst_2 := add(dst_2, _2)\n            let srcEnd_1 := add(add(_5, shl(_3, _7)), _8)\n            if gt(srcEnd_1, end)\n            {\n                let _9 := 0\n                revert(_9, _9)\n            }\n            let src_1 := add(_5, _8)\n            for { } lt(src_1, srcEnd_1) { src_1 := add(src_1, _2) }\n            {\n                mstore(dst_2, calldataload(src_1))\n                dst_2 := add(dst_2, _2)\n            }\n            mstore(dst, dst_3)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _1)\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            mstore(dst, abi_decode_array_address_dyn(add(add(_2, innerOffset), _4), dataEnd))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_array_uint256_dyn_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := calldataload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let srcEnd := add(add(_3, shl(5, _4)), _2)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_bool(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        value1 := dst_1\n    }\n    function abi_encode_tuple_t_stringliteral_089295123856887e817ba9ef604c626ebffe924cc87e7d9c9d8c4f3d4f2186f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid length\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_4d94e4fbd8d2c1b23ec50c4a02f6f2af5dd0b11b96fc805d23c3a42bbf84f62d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Wrong value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d40c304804677979b02ddb540cd84bf11c81490088b00be94027707c4cb69ab9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"NFT has not been whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7979e3b12d07033d039322ebf8b023a9cefc4db0df47eddf703bee910079cda9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"NFT Owner has not been set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7b25856ed5a9729fc86b5fe89ab2fe1c7b5246f80481dfc0d0b2b84dc8c2a851__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Failed to mint NFT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 128)\n        mstore(headStart, 128)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 160)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value1)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _1)\n        let srcPtr_1 := add(value1, _1)\n        let i_1 := 0\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, mload(srcPtr_1))\n            pos_1 := add(pos_1, _1)\n            srcPtr_1 := add(srcPtr_1, _1)\n        }\n        tail := pos_1\n        abi_encode_address(value2, add(headStart, 64))\n        mstore(add(headStart, 96), value3)\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69D03738 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x9E7C11A5 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xCCF99A6E EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xD3AC1E4A EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69D03738 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x7719BC7B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x89BD3BEB EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4ABAF07E GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4ABAF07E EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x4EC81AF1 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x59F7963D EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x5D6297C2 EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x136A743C EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x1CC88BCD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x44ED1FA4 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x4A59C50D EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x123 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x100B JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x100B JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x201 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x182 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x802 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1157 JUMP JUMPDEST PUSH2 0x816 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x201 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH2 0x320 PUSH2 0x9C3 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD DUP2 EQ PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x37A DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x36B JUMPI PUSH2 0x36B PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x3B6 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x38F JUMPI PUSH2 0x38F PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA81 JUMP JUMPDEST DUP1 PUSH2 0x3C0 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x34E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3D6 PUSH2 0x9C3 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD DUP2 EQ PUSH2 0x3F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x418 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x38F JUMPI PUSH2 0x38F PUSH2 0x1243 JUMP JUMPDEST DUP1 PUSH2 0x422 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3FB JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD DUP2 EQ PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x458 DUP5 DUP5 PUSH2 0x610 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x57726F6E672076616C7565 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4B6 JUMPI PUSH2 0x4B6 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD SWAP1 POP DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4D3 JUMPI PUSH2 0x4D3 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD DUP2 EQ PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x6 PUSH1 0x0 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x51B JUMPI PUSH2 0x51B PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x534 JUMPI PUSH2 0x534 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E465420686173206E6F74206265656E2077686974656C697374656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH2 0x5B1 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4FD JUMP JUMPDEST POP PUSH2 0x5F6 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5CF JUMPI PUSH2 0x5CF PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5E9 JUMPI PUSH2 0x5E9 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xAE5 JUMP JUMPDEST POP DUP1 PUSH2 0x601 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x49A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP2 SWAP1 DUP2 EQ PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x67C JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x654 JUMPI PUSH2 0x654 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD DUP3 PUSH2 0x668 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x674 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x63A JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2710 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD DUP6 PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x69E SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x6B5 SWAP1 DUP6 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6F6 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6FA JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH2 0x101 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP4 SWAP1 SSTORE PUSH1 0x5 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x80A PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x814 PUSH1 0x0 PUSH2 0xCC6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x81E PUSH2 0x9C3 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD DUP2 EQ PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x7 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x86C JUMPI PUSH2 0x86C PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4654204F776E657220686173206E6F74206265656E20736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH2 0x91E DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8F7 JUMPI PUSH2 0x8F7 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x911 JUMPI PUSH2 0x911 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA1D JUMP JUMPDEST DUP1 PUSH2 0x928 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x843 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x945 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x952 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH2 0x9C0 DUP2 PUSH2 0xCC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x990ECD0DEF76EFF86D5A91A08DBFB0F33A9C9E1873684A516A93CCF3F70A3256 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x970C3F5F7F64FBD82C31E769D06A9A152177702A2EF86B0018D6E8EA1C97CF29 SWAP2 ADD PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x8 SLOAD PUSH1 0x60 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x2 SLOAD SWAP4 MLOAD PUSH4 0x28512065 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1448194 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xBD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11985A5B1959081D1BC81B5A5B9D08139195 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP1 MLOAD DUP6 SWAP4 PUSH2 0xBFE SWAP3 DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xD18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0xC17 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0xD7D JUMP JUMPDEST POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP3 KECCAK256 PUSH1 0x8 DUP1 SLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE SWAP3 DUP6 MSTORE SWAP3 SWAP1 SWAP4 KECCAK256 ADD SSTORE SLOAD SWAP2 MLOAD PUSH32 0x206BA06C561797DA5D0262FC18D44D194C8CC1988E613C7C96F3DF8F8F330A37 SWAP3 PUSH2 0xCA3 SWAP3 DUP9 SWAP3 DUP9 SWAP3 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xCBB DUP4 PUSH2 0x126F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xD6D JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xD6D JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xD38 JUMP JUMPDEST POP PUSH2 0xD79 SWAP3 SWAP2 POP PUSH2 0xDB8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xD6D JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xD6D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD9D JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD79 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xDB9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE0C JUMPI PUSH2 0xE0C PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE2E JUMPI PUSH2 0xE2E PUSH2 0xDCD JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE7A PUSH2 0xE75 DUP4 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xEBB JUMPI PUSH2 0xEAE DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xE9D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFD DUP7 DUP4 DUP8 ADD PUSH2 0xE54 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF20 DUP6 DUP3 DUP7 ADD PUSH2 0xE54 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF4B PUSH2 0xE75 DUP4 PUSH2 0xE14 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 DUP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP3 ADD SWAP2 SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xFFE JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF8E JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP9 ADD PUSH1 0x3F DUP2 ADD DUP11 SGT PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP6 DUP2 ADD CALLDATALOAD PUSH1 0x40 PUSH2 0xFB2 PUSH2 0xE75 DUP4 PUSH2 0xE14 JUMP JUMPDEST DUP3 DUP2 MSTORE SWAP2 DUP6 SHL DUP4 ADD DUP2 ADD SWAP2 DUP9 DUP2 ADD SWAP1 DUP14 DUP5 GT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP4 DUP3 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xFED JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP10 ADD SWAP4 SWAP1 DUP10 ADD SWAP1 PUSH2 0xFD4 JUMP JUMPDEST DUP9 MSTORE POP POP POP SWAP4 DUP6 ADD SWAP4 POP DUP5 ADD PUSH2 0xF6E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x101E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x104A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x105A PUSH2 0xE75 DUP4 PUSH2 0xE14 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x1079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x10B1 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x1095 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x10A3 DUP13 DUP7 DUP4 DUP12 ADD ADD PUSH2 0xE54 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x107D JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF20 DUP6 DUP3 DUP7 ADD PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F4 DUP6 PUSH2 0xE38 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1142 DUP3 PUSH2 0xE38 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118E DUP7 DUP4 DUP8 ADD PUSH2 0xE54 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x11A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD SWAP1 POP PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x11B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x11C6 PUSH2 0xE75 DUP3 PUSH2 0xE14 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x120C JUMPI DUP4 CALLDATALOAD PUSH2 0x11FD DUP2 PUSH2 0x1149 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x11EA JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x92DCECC2D8D2C840D8CADCCEE8D PUSH1 0x93 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1283 JUMPI PUSH2 0x1283 PUSH2 0x1259 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x129D JUMPI PUSH2 0x129D PUSH2 0x1259 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12BC JUMPI PUSH2 0x12BC PUSH2 0x1259 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1142 DUP2 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x80 DUP1 DUP3 MSTORE DUP6 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0xA0 DUP5 ADD SWAP1 DUP3 DUP10 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1342 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131D JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE DUP8 DUP4 ADD SWAP2 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1377 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x135B JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x40 DUP7 ADD MSTORE SWAP3 POP PUSH2 0x1392 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY PUSH11 0x9B3853595D2E4476776345 OR LOG1 RETURNDATASIZE 0x2A DUP3 0x27 SWAP15 0xEB EXTCODEHASH 0xEE DUP10 REVERT REVERT PUSH21 0x68B5AF0B0764736F6C634300080900330000000000 ","sourceMap":"483:5532:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2391:407;;;;;;;;;;-1:-1:-1;2391:407:13;;;;;:::i;:::-;;:::i;:::-;;3266:341;;;;;;;;;;-1:-1:-1;3266:341:13;;;;;:::i;:::-;;:::i;4662:795::-;;;;;;:::i;:::-;;:::i;4055:545::-;;;;;;;;;;-1:-1:-1;4055:545:13;;;;;:::i;:::-;;:::i;:::-;;;5348:25:15;;;5336:2;5321:18;4055:545:13;;;;;;;;621:26;;;;;;;;;;;;;;;;1585:291;;;;;;;;;;-1:-1:-1;1585:291:13;;;;;:::i;:::-;;:::i;2129:113::-;;;;;;;;;;-1:-1:-1;2129:113:13;;;;;:::i;:::-;;:::i;582:30::-;;;;;;;;;;-1:-1:-1;582:30:13;;;;-1:-1:-1;;;;;582:30:13;;;;;;-1:-1:-1;;;;;6238:32:15;;;6220:51;;6208:2;6193:18;582:30:13;6074:203:15;1884:120:13;;;;;;;;;;-1:-1:-1;1884:120:13;;;;;:::i;:::-;;:::i;1831:101:2:-;;;;;;;;;;;;;:::i;2806:452:13:-;;;;;;;;;;-1:-1:-1;2806:452:13;;;;;:::i;:::-;;:::i;689:32::-;;;;;;;;;;;;;;;;1201:85:2;;;;;;;;;;-1:-1:-1;1273:6:2;;-1:-1:-1;;;;;1273:6:2;1201:85;;654:27:13;;;;;;;;;;;;;;;;2250:133;;;;;;;;;;-1:-1:-1;2250:133:13;;;;;:::i;:::-;;:::i;2012:109::-;;;;;;;;;;-1:-1:-1;2012:109:13;;;;;:::i;:::-;;:::i;2081:198:2:-;;;;;;;;;;-1:-1:-1;2081:198:2;;;;;:::i;:::-;;:::i;2391:407:13:-;1094:13:2;:11;:13::i;:::-;2521:20:13;;2571:17;;2560:28;::::1;2552:55;;;;-1:-1:-1::0;;;2552:55:13::1;;;;;;;:::i;:::-;;;;;;;;;2623:9;2618:173;2642:7;2638:1;:11;2618:173;;;2670:49;2696:13;2710:1;2696:16;;;;;;;;:::i;:::-;;;;;;;2714:4;2670:25;:49::i;:::-;2734:45;2747:13;2761:1;2747:16;;;;;;;;:::i;:::-;;;;;;;2765:10;2776:1;2765:13;;;;;;;;:::i;:::-;;;;;;;2734:12;:45::i;:::-;2651:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2618:173;;;;2492:306;2391:407:::0;;:::o;3266:341::-;1094:13:2;:11;:13::i;:::-;3394:20:13;;3444:17;;3433:28;::::1;3425:55;;;;-1:-1:-1::0;;;3425:55:13::1;;;;;;;:::i;:::-;3496:9;3491:109;3515:7;3511:1;:11;3491:109;;;3543:45;3556:13;3570:1;3556:16;;;;;;;;:::i;3543:45::-;3524:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3491:109;;4662:795:::0;4796:20;;4854:16;;4836:34;;4827:62;;;;-1:-1:-1;;;4827:62:13;;;;;;;:::i;:::-;4910:12;4925:38;4938:13;4953:9;4925:12;:38::i;:::-;4910:53;;4995:4;4982:9;:17;4974:41;;;;-1:-1:-1;;;4974:41:13;;8757:2:15;4974:41:13;;;8739:21:15;8796:2;8776:18;;;8769:30;-1:-1:-1;;;8815:18:15;;;8808:41;8866:18;;4974:41:13;8555:335:15;4974:41:13;5033:9;5028:422;5052:14;5048:1;:18;5028:422;;;5088:21;5112:13;5126:1;5112:16;;;;;;;;:::i;:::-;;;;;;;:23;5088:47;;5175:9;5185:1;5175:12;;;;;;;;:::i;:::-;;;;;;;:19;5158:13;:36;5150:63;;;;-1:-1:-1;;;5150:63:13;;;;;;;:::i;:::-;5232:9;5228:153;5251:13;5247:1;:17;5228:153;;;5297:14;:35;5312:13;5326:1;5312:16;;;;;;;;:::i;:::-;;;;;;;5329:1;5312:19;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;5297:35:13;;;;;;;;;;;-1:-1:-1;5297:35:13;;;;5289:76;;;;-1:-1:-1;;;5289:76:13;;9097:2:15;5289:76:13;;;9079:21:15;9136:2;9116:18;;;9109:30;9175;9155:18;;;9148:58;9223:18;;5289:76:13;8895:352:15;5289:76:13;5266:3;;;;:::i;:::-;;;;5228:153;;;;5397:41;5407:13;5421:1;5407:16;;;;;;;;:::i;:::-;;;;;;;5425:9;5435:1;5425:12;;;;;;;;:::i;:::-;;;;;;;5397:9;:41::i;:::-;-1:-1:-1;5069:3:13;;;;:::i;:::-;;;;5028:422;;;;4760:697;;4662:795;;:::o;4055:545::-;4210:20;;4267:16;;4161:12;;4210:20;4249:34;;4241:61;;;;-1:-1:-1;;;4241:61:13;;;;;;;:::i;:::-;4313:20;4353:9;4348:110;4372:14;4368:1;:18;4348:110;;;4423:13;4437:1;4423:16;;;;;;;;:::i;:::-;;;;;;;:23;4407:39;;;;;:::i;:::-;;-1:-1:-1;4388:3:13;;;;:::i;:::-;;;;4348:110;;;;4581:11;;767:5;4539:17;;4524:12;;4507:14;:29;;;;:::i;:::-;:49;;;;:::i;:::-;:71;;;;:::i;:::-;4492:12;;4475:29;;:14;:29;:::i;:::-;:103;;;;:::i;:::-;:117;;;;:::i;:::-;4468:124;4055:545;-1:-1:-1;;;;;4055:545:13:o;1585:291::-;2369:13:0;;-1:-1:-1;;;2369:13:0;;;;:48;;2405:12;;-1:-1:-1;;;2405:12:0;;;;2404:13;2369:48;;;3147:4;1476:19:1;:23;2385:16:0;2361:107;;;;-1:-1:-1;;;2361:107:0;;9982:2:15;2361:107:0;;;9964:21:15;10021:2;10001:18;;;9994:30;10060:34;10040:18;;;10033:62;-1:-1:-1;;;10111:18:15;;;10104:44;10165:19;;2361:107:0;9780:410:15;2361:107:0;2502:13;;-1:-1:-1;;;2502:13:0;;;;2501:14;2525:98;;;;2575:4;2559:20;;-1:-1:-1;;;;2593:19:0;-1:-1:-1;;;2593:19:0;;;2525:98;1721:15:13::1;:22:::0;;-1:-1:-1;;;;;;1721:22:13::1;-1:-1:-1::0;;;;;1721:22:13;::::1;;::::0;;1754:11:::1;:26:::0;;;1791:12:::1;:28:::0;;;1830:17:::1;:38:::0;;;2645:66:0;;;;2679:13;:21;;-1:-1:-1;;;;2679:21:0;;;2080:637;1585:291:13;;;;:::o;2129:113::-;1094:13:2;:11;:13::i;:::-;2206:12:13::1;:28:::0;2129:113::o;1884:120::-;1094:13:2;:11;:13::i;:::-;1962:15:13::1;:34:::0;;-1:-1:-1;;;;;;1962:34:13::1;-1:-1:-1::0;;;;;1962:34:13;;;::::1;::::0;;;::::1;::::0;;1884:120::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2806:452:13:-;1094:13:2;:11;:13::i;:::-;2942:20:13;;2992:14;;2981:25;::::1;2973:52;;;;-1:-1:-1::0;;;2973:52:13::1;;;;;;;:::i;:::-;3041:9;3036:215;3060:7;3056:1;:11;3036:215;;;3136:1;-1:-1:-1::0;;;;;3096:42:13::1;:10;:28;3107:13;3121:1;3107:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;3096:28:13;;::::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;3096:28:13;;::::1;:42;;3088:81;;;::::0;-1:-1:-1;;;3088:81:13;;10397:2:15;3088:81:13::1;::::0;::::1;10379:21:15::0;10436:2;10416:18;;;10409:30;10475:28;10455:18;;;10448:56;10521:18;;3088:81:13::1;10195:350:15::0;3088:81:13::1;3184:55;3210:13;3224:1;3210:16;;;;;;;;:::i;:::-;;;;;;;3228:7;3236:1;3228:10;;;;;;;;:::i;:::-;;;;;;;3184:25;:55::i;:::-;3069:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3036:215;;2250:133:::0;1094:13:2;:11;:13::i;:::-;2337:17:13::1;:38:::0;2250:133::o;2012:109::-;1094:13:2;:11;:13::i;:::-;2087:11:13::1;:26:::0;2012:109::o;2081:198:2:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:2;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:2;;10752:2:15;2161:73:2::1;::::0;::::1;10734:21:15::0;10791:2;10771:18;;;10764:30;10830:34;10810:18;;;10803:62;-1:-1:-1;;;10881:18:15;;;10874:36;10927:19;;2161:73:2::1;10550:402:15::0;2161:73:2::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1273:6;;-1:-1:-1;;;;;1273:6:2;719:10:10;1422:23:2;1414:68;;;;-1:-1:-1;;;1414:68:2;;11159:2:15;1414:68:2;;;11141:21:15;;;11178:18;;;11171:30;11237:34;11217:18;;;11210:62;11289:18;;1414:68:2;10957:356:15;3615:197:13;-1:-1:-1;;;;;3704:27:13;;;;;;:14;:27;;;;;;;;;:37;;-1:-1:-1;;3704:37:13;;;;;;;;;;3757:47;;11486:51:15;;;11553:18;;;11546:50;3757:47:13;;11459:18:15;3757:47:13;;;;;;;;3615:197;;:::o;3820:179::-;-1:-1:-1;;;;;3901:23:13;;;;;;;:10;:23;;;;;;;;;:35;;-1:-1:-1;;;;;;3901:35:13;;;;;;;;;3952:39;;11819:34:15;;;11869:18;;11862:43;;;;3952:39:13;;11754:18:15;3952:39:13;11607:304:15;5467:545:13;5599:58;;;;;;;;;;;;;;;;;5631:10;5599:58;;;;;;5643:13;;5599:58;;;;;;5687:15;;5682:57;;-1:-1:-1;;;5682:57:13;;;;;12090:51:15;;;;12157:18;;;12150:34;5599:58:13;;-1:-1:-1;;;;;;;5687:15:13;;;;5682:30;;12063:18:15;;5682:57:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5668:71;;5758:6;5750:37;;;;-1:-1:-1;;;5750:37:13;;12647:2:15;5750:37:13;;;12629:21:15;12686:2;12666:18;;;12659:30;-1:-1:-1;;;12705:18:15;;;12698:48;12763:18;;5750:37:13;12445:342:15;5750:37:13;5811:13;;5798:27;;;;:12;:27;;;;;;;;:38;;;;5828:8;;5798:38;;:27;;:38;;;;:::i;:::-;-1:-1:-1;5798:38:13;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5798:38:13;;;;;;;;;;-1:-1:-1;;;;;;5798:38:13;-1:-1:-1;;;;;5798:38:13;;;;;;;;;;;;;;;;;;;5866:10;-1:-1:-1;5847:30:13;;;:18;:30;;;;;;;5883:13;;;5847:50;;-1:-1:-1;5847:50:13;;;;;;;;;;;;;5964:13;5913:65;;;;;;5926:13;;5941:9;;5964:13;5913:65;:::i;:::-;;;;;;;;5989:13;:15;;;:13;:15;;;:::i;:::-;;;;;;5554:458;;5467:545;;:::o;2433:187:2:-;2525:6;;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:127:15;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:15;247:40;;317:18;302:34;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:15:o;426:183::-;486:4;519:18;511:6;508:30;505:56;;;541:18;;:::i;:::-;-1:-1:-1;586:1:15;582:14;598:4;578:25;;426:183::o;614:173::-;682:20;;-1:-1:-1;;;;;731:31:15;;721:42;;711:70;;777:1;774;767:12;711:70;614:173;;;:::o;792:668::-;846:5;899:3;892:4;884:6;880:17;876:27;866:55;;917:1;914;907:12;866:55;953:6;940:20;979:4;1003:60;1019:43;1059:2;1019:43;:::i;:::-;1003:60;:::i;:::-;1097:15;;;1183:1;1179:10;;;;1167:23;;1163:32;;;1128:12;;;;1207:15;;;1204:35;;;1235:1;1232;1225:12;1204:35;1271:2;1263:6;1259:15;1283:148;1299:6;1294:3;1291:15;1283:148;;;1365:23;1384:3;1365:23;:::i;:::-;1353:36;;1409:12;;;;1316;;1283:148;;;-1:-1:-1;1449:5:15;792:668;-1:-1:-1;;;;;;792:668:15:o;1465:595::-;1583:6;1591;1644:2;1632:9;1623:7;1619:23;1615:32;1612:52;;;1660:1;1657;1650:12;1612:52;1700:9;1687:23;1729:18;1770:2;1762:6;1759:14;1756:34;;;1786:1;1783;1776:12;1756:34;1809:61;1862:7;1853:6;1842:9;1838:22;1809:61;:::i;:::-;1799:71;;1923:2;1912:9;1908:18;1895:32;1879:48;;1952:2;1942:8;1939:16;1936:36;;;1968:1;1965;1958:12;1936:36;;1991:63;2046:7;2035:8;2024:9;2020:24;1991:63;:::i;:::-;1981:73;;;1465:595;;;;;:::o;2065:1705::-;2129:5;2182:3;2175:4;2167:6;2163:17;2159:27;2149:55;;2200:1;2197;2190:12;2149:55;2236:6;2223:20;2262:4;2286:60;2302:43;2342:2;2302:43;:::i;2286:60::-;2380:15;;;2442:1;2482:11;;;2470:24;;2466:33;;;2411:12;;;;2368:3;2511:15;;;2508:35;;;2539:1;2536;2529:12;2508:35;2575:2;2567:6;2563:15;2587:1154;2603:6;2598:3;2595:15;2587:1154;;;2689:3;2676:17;2725:18;2712:11;2709:35;2706:125;;;2785:1;2814:2;2810;2803:14;2706:125;2854:24;;2913:2;2905:11;;2901:21;-1:-1:-1;2891:119:15;;2964:1;2993:2;2989;2982:14;2891:119;3054:2;3050;3046:11;3033:25;3081:2;3109:60;3125:43;3165:2;3125:43;:::i;3109:60::-;3213:17;;;3307:11;;;3299:20;;3295:29;;;3252:14;;;;3340:17;;;3337:107;;;3398:1;3427:2;3423;3416:14;3337:107;3470:11;;;;3494:174;3512:8;3505:5;3502:19;3494:174;;;3594:19;;3580:34;;3533:14;;;;3640;;;;3494:174;;;3681:18;;-1:-1:-1;;;3719:12:15;;;;-1:-1:-1;2620:12:15;;2587:1154;;;-1:-1:-1;3759:5:15;;2065:1705;-1:-1:-1;;;;;;;2065:1705:15:o;3775:1422::-;3943:6;3951;4004:2;3992:9;3983:7;3979:23;3975:32;3972:52;;;4020:1;4017;4010:12;3972:52;4060:9;4047:23;4089:18;4130:2;4122:6;4119:14;4116:34;;;4146:1;4143;4136:12;4116:34;4184:6;4173:9;4169:22;4159:32;;4229:7;4222:4;4218:2;4214:13;4210:27;4200:55;;4251:1;4248;4241:12;4200:55;4287:2;4274:16;4309:4;4333:60;4349:43;4389:2;4349:43;:::i;4333:60::-;4427:15;;;4509:1;4505:10;;;;4497:19;;4493:28;;;4458:12;;;;4533:19;;;4530:39;;;4565:1;4562;4555:12;4530:39;4597:2;4593;4589:11;4609:364;4625:6;4620:3;4617:15;4609:364;;;4711:3;4698:17;4747:2;4734:11;4731:19;4728:109;;;4791:1;4820:2;4816;4809:14;4728:109;4862:68;4922:7;4917:2;4903:11;4899:2;4895:20;4891:29;4862:68;:::i;:::-;4850:81;;-1:-1:-1;4951:12:15;;;;4642;;4609:364;;;-1:-1:-1;4992:5:15;-1:-1:-1;;5035:18:15;;5022:32;;-1:-1:-1;;5066:16:15;;;5063:36;;;5095:1;5092;5085:12;5063:36;;5118:73;5183:7;5172:8;5161:9;5157:24;5118:73;:::i;5384:391::-;5470:6;5478;5486;5494;5547:3;5535:9;5526:7;5522:23;5518:33;5515:53;;;5564:1;5561;5554:12;5515:53;5587:29;5606:9;5587:29;:::i;:::-;5577:39;5663:2;5648:18;;5635:32;;-1:-1:-1;5714:2:15;5699:18;;5686:32;;5765:2;5750:18;5737:32;;-1:-1:-1;5384:391:15;-1:-1:-1;;;5384:391:15:o;5780:180::-;5839:6;5892:2;5880:9;5871:7;5867:23;5863:32;5860:52;;;5908:1;5905;5898:12;5860:52;-1:-1:-1;5931:23:15;;5780:180;-1:-1:-1;5780:180:15:o;6282:186::-;6341:6;6394:2;6382:9;6373:7;6369:23;6365:32;6362:52;;;6410:1;6407;6400:12;6362:52;6433:29;6452:9;6433:29;:::i;:::-;6423:39;6282:186;-1:-1:-1;;;6282:186:15:o;6473:118::-;6559:5;6552:13;6545:21;6538:5;6535:32;6525:60;;6581:1;6578;6571:12;6596:1207;6711:6;6719;6772:2;6760:9;6751:7;6747:23;6743:32;6740:52;;;6788:1;6785;6778:12;6740:52;6828:9;6815:23;6857:18;6898:2;6890:6;6887:14;6884:34;;;6914:1;6911;6904:12;6884:34;6937:61;6990:7;6981:6;6970:9;6966:22;6937:61;:::i;:::-;6927:71;;7017:2;7007:12;;7072:2;7061:9;7057:18;7044:32;7101:2;7091:8;7088:16;7085:36;;;7117:1;7114;7107:12;7085:36;7140:24;;;-1:-1:-1;7195:4:15;7187:13;;7183:27;-1:-1:-1;7173:55:15;;7224:1;7221;7214:12;7173:55;7260:2;7247:16;7283:60;7299:43;7339:2;7299:43;:::i;7283:60::-;7377:15;;;7459:1;7455:10;;;;7447:19;;7443:28;;;7408:12;;;;7483:19;;;7480:39;;;7515:1;7512;7505:12;7480:39;7539:11;;;;7559:214;7575:6;7570:3;7567:15;7559:214;;;7655:3;7642:17;7672:28;7694:5;7672:28;:::i;:::-;7713:18;;7592:12;;;;7751;;;;7559:214;;;7792:5;7782:15;;;;;;;6596:1207;;;;;:::o;7808:338::-;8010:2;7992:21;;;8049:2;8029:18;;;8022:30;-1:-1:-1;;;8083:2:15;8068:18;;8061:44;8137:2;8122:18;;7808:338::o;8151:127::-;8212:10;8207:3;8203:20;8200:1;8193:31;8243:4;8240:1;8233:15;8267:4;8264:1;8257:15;8283:127;8344:10;8339:3;8335:20;8332:1;8325:31;8375:4;8372:1;8365:15;8399:4;8396:1;8389:15;8415:135;8454:3;-1:-1:-1;;8475:17:15;;8472:43;;;8495:18;;:::i;:::-;-1:-1:-1;8542:1:15;8531:13;;8415:135::o;9252:128::-;9292:3;9323:1;9319:6;9316:1;9313:13;9310:39;;;9329:18;;:::i;:::-;-1:-1:-1;9365:9:15;;9252:128::o;9385:168::-;9425:7;9491:1;9487;9483:6;9479:14;9476:1;9473:21;9468:1;9461:9;9454:17;9450:45;9447:71;;;9498:18;;:::i;:::-;-1:-1:-1;9538:9:15;;9385:168::o;9558:217::-;9598:1;9624;9614:132;;9668:10;9663:3;9659:20;9656:1;9649:31;9703:4;9700:1;9693:15;9731:4;9728:1;9721:15;9614:132;-1:-1:-1;9760:9:15;;9558:217::o;12195:245::-;12262:6;12315:2;12303:9;12294:7;12290:23;12286:32;12283:52;;;12331:1;12328;12321:12;12283:52;12363:9;12357:16;12382:28;12404:5;12382:28;:::i;12792:1335::-;13116:3;13129:22;;;13200:13;;13101:19;;;13222:22;;;13068:4;;13298;;13275:3;13260:19;;;13325:15;;;13068:4;13368:195;13382:6;13379:1;13376:13;13368:195;;;13447:13;;-1:-1:-1;;;;;13443:39:15;13431:52;;13503:12;;;;13538:15;;;;13479:1;13397:9;13368:195;;;-1:-1:-1;;;13599:19:15;;;13579:18;;;13572:47;13669:13;;13691:21;;;13767:15;;;;13730:12;;;13802:1;13812:189;13828:8;13823:3;13820:17;13812:189;;;13897:15;;13883:30;;13974:17;;;;13935:14;;;;13856:1;13847:11;13812:189;;;-1:-1:-1;;;;;;;6031:31:15;;14074:2;14059:18;;6019:44;14018:5;-1:-1:-1;14032:46:15;;-1:-1:-1;;5965:104:15;14032:46;14114:6;14109:2;14098:9;14094:18;14087:34;12792:1335;;;;;;;:::o"},"methodIdentifiers":{"buyShirt(address[][],uint256[][])":"44ed1fa4","changeNFTWhitelistStatus(address[],bool[])":"7719bc7b","eachShirtFee()":"9e7c11a5","estimateCost(address[][],uint256[][])":"4a59c50d","initialize(address,uint256,uint256,uint256)":"4ec81af1","owner()":"8da5cb5b","percentRoyaltyFee()":"89bd3beb","renounceOwnership()":"715018a6","setEachShirtFee(uint256)":"59f7963d","setNFTAddress(address)":"69d03738","setNFTOwner(address[],address[])":"1cc88bcd","setPercentRoyaltyFee(uint256)":"ccf99a6e","setShippingFee(uint256)":"d3ac1e4a","shippingFee()":"4abaf07e","shirtNFTAddress()":"5d6297c2","transferOwnership(address)":"f2fde38b","whitelistNFT(address[],address[])":"136a743c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftOwnerAddress\",\"type\":\"address\"}],\"name\":\"NFTOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"NFTWhitelistStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"nftAddresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shirtTokenId\",\"type\":\"uint256\"}],\"name\":\"ShirtCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"_nftAddresses\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"_tokenIds\",\"type\":\"uint256[][]\"}],\"name\":\"buyShirt\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_nftAddresses\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_status\",\"type\":\"bool[]\"}],\"name\":\"changeNFTWhitelistStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eachShirtFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"_nftAddresses\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"_tokenIds\",\"type\":\"uint256[][]\"}],\"name\":\"estimateCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shippingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_eachShirtFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_percentRoyaltyFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentRoyaltyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eachShirtFee\",\"type\":\"uint256\"}],\"name\":\"setEachShirtFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_shirtNFTAddress\",\"type\":\"address\"}],\"name\":\"setNFTAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_nftAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_nftOwners\",\"type\":\"address[]\"}],\"name\":\"setNFTOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentRoyaltyFee\",\"type\":\"uint256\"}],\"name\":\"setPercentRoyaltyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shippingFee\",\"type\":\"uint256\"}],\"name\":\"setShippingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shippingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shirtNFTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_nftAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_nftOwners\",\"type\":\"address[]\"}],\"name\":\"whitelistNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Store.sol\":\"Store\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/Store.sol\":{\"keccak256\":\"0x25b5885f62d10040228a1c0e9459113304f263f7520af8ebfb5fe4763959cf0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa96ca83bf4039752cbba2c0fcec0a5de9f3b3cfc8fe6051417c70366d523e7\",\"dweb:/ipfs/QmWkR6qMJsZX7EGk78Dc1cFBwjmNrm3Psqo4e9D9XFjv9S\"]},\"contracts/interfaces/INFT.sol\":{\"keccak256\":\"0x6bb472ac04cd9854cdaf4205ee24a0a8fd6081837421a470fbf665d3fb7e6f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b24d1d8dbd246309359abe9816576630978f284c629cf08f1ba429177675567\",\"dweb:/ipfs/QmNstKohQshmRPpqGBHaQ8YS2AC9sd6492eGohqNXnj8YB\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":440,"contract":"contracts/Store.sol:Store","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":324,"contract":"contracts/Store.sol:Store","label":"_owner","offset":0,"slot":"1","type":"t_address"},{"astId":6,"contract":"contracts/Store.sol:Store","label":"_initialized","offset":20,"slot":"1","type":"t_bool"},{"astId":9,"contract":"contracts/Store.sol:Store","label":"_initializing","offset":21,"slot":"1","type":"t_bool"},{"astId":1960,"contract":"contracts/Store.sol:Store","label":"shirtNFTAddress","offset":0,"slot":"2","type":"t_address"},{"astId":1962,"contract":"contracts/Store.sol:Store","label":"shippingFee","offset":0,"slot":"3","type":"t_uint256"},{"astId":1964,"contract":"contracts/Store.sol:Store","label":"eachShirtFee","offset":0,"slot":"4","type":"t_uint256"},{"astId":1966,"contract":"contracts/Store.sol:Store","label":"percentRoyaltyFee","offset":0,"slot":"5","type":"t_uint256"},{"astId":1973,"contract":"contracts/Store.sol:Store","label":"isWhitelistNFT","offset":0,"slot":"6","type":"t_mapping(t_address,t_bool)"},{"astId":1977,"contract":"contracts/Store.sol:Store","label":"ownerOfNFT","offset":0,"slot":"7","type":"t_mapping(t_address,t_address)"},{"astId":1990,"contract":"contracts/Store.sol:Store","label":"_shirtTokenId","offset":0,"slot":"8","type":"t_uint256"},{"astId":1995,"contract":"contracts/Store.sol:Store","label":"indexToShirt","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_struct(Shirt)1988_storage)"},{"astId":2000,"contract":"contracts/Store.sol:Store","label":"buyerToShirtIndexs","offset":0,"slot":"10","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":2004,"contract":"contracts/Store.sol:Store","label":"balances","offset":0,"slot":"11","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(Shirt)1988_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Store.Shirt)","numberOfBytes":"32","value":"t_struct(Shirt)1988_storage"},"t_struct(Shirt)1988_storage":{"encoding":"inplace","label":"struct Store.Shirt","members":[{"astId":1980,"contract":"contracts/Store.sol:Store","label":"originalNFTs","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":1983,"contract":"contracts/Store.sol:Store","label":"originalTokenIds","offset":0,"slot":"1","type":"t_array(t_uint256)dyn_storage"},{"astId":1985,"contract":"contracts/Store.sol:Store","label":"buyer","offset":0,"slot":"2","type":"t_address"},{"astId":1987,"contract":"contracts/Store.sol:Store","label":"shirtTokenId","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/INFT.sol":{"INFT":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeMint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeMint(address,uint256)":"a1448194","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INFT.sol\":\"INFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/interfaces/INFT.sol\":{\"keccak256\":\"0x6bb472ac04cd9854cdaf4205ee24a0a8fd6081837421a470fbf665d3fb7e6f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b24d1d8dbd246309359abe9816576630978f284c629cf08f1ba429177675567\",\"dweb:/ipfs/QmNstKohQshmRPpqGBHaQ8YS2AC9sd6492eGohqNXnj8YB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}